{
  "configs": [
    {
      "name": "eslint/defaults/languages",
      "languageOptions": {
        "sourceType": "module",
        "ecmaVersion": "latest",
        "parserOptions": {}
      },
      "linterOptions": {
        "reportUnusedDisableDirectives": 1
      },
      "index": 0
    },
    {
      "name": "eslint/defaults/ignores",
      "ignores": [
        "**/node_modules/",
        ".git/"
      ],
      "index": 1
    },
    {
      "name": "eslint/defaults/files",
      "files": [
        "**/*.js",
        "**/*.mjs"
      ],
      "index": 2
    },
    {
      "name": "eslint/defaults/files-cjs",
      "files": [
        "**/*.cjs"
      ],
      "languageOptions": {
        "sourceType": "commonjs",
        "ecmaVersion": "latest"
      },
      "index": 3
    },
    {
      "name": "@vanyauhalin/git-ignores",
      "ignores": [
        "**/dist",
        "**/docs",
        "**/node_modules"
      ],
      "index": 4
    },
    {
      "name": "@vanyauhalin/vanyauhalin-ignores",
      "ignores": [
        "**/mise.lock",
        "**/pnpm-lock.yaml"
      ],
      "index": 5
    },
    {
      "name": "@vanyauhalin/builtin-linter",
      "linterOptions": {
        "reportUnusedDisableDirectives": "error"
      },
      "index": 6
    },
    {
      "name": "@vanyauhalin/html-parser",
      "files": [
        "**/*.html"
      ],
      "languageOptions": {
        "parser": "@html-eslint/parser"
      },
      "index": 7
    },
    {
      "name": "@vanyauhalin/jsonc-parser",
      "files": [
        "**/*.json",
        "**/*.json5",
        "**/*.jsonc"
      ],
      "languageOptions": {
        "parser": "jsonc-eslint-parser"
      },
      "index": 8
    },
    {
      "name": "@vanyauhalin/markdown-processor",
      "files": [
        "**/*.md"
      ],
      "processor": "eslint-plugin-markdown/markdown",
      "index": 9
    },
    {
      "name": "@vanyauhalin/toml-parser",
      "files": [
        "**/*.toml"
      ],
      "languageOptions": {
        "parser": "toml-eslint-parser"
      },
      "index": 10
    },
    {
      "name": "@vanyauhalin/typescript-parser",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx"
      ],
      "languageOptions": {
        "parser": "typescript-eslint/parser",
        "parserOptions": {
          "projectService": true
        }
      },
      "index": 11
    },
    {
      "name": "@vanyauhalin/yaml-parser",
      "files": [
        "**/*.yaml",
        "**/*.yml"
      ],
      "languageOptions": {
        "parser": "yaml-eslint-parser"
      },
      "index": 12
    },
    {
      "name": "@vanyauhalin/markdown-processor/typescript-integration",
      "files": [
        "**/*.md/*.cjs",
        "**/*.md/*.js",
        "**/*.md/*.jsx",
        "**/*.md/*.mjs",
        "**/*.md/*.cts",
        "**/*.md/*.mts",
        "**/*.md/*.ts",
        "**/*.md/*.tsx",
        "**/*.md/*.html"
      ],
      "languageOptions": {
        "parser": "typescript-eslint/parser",
        "parserOptions": {
          "ecmaFeatures": {
            "impliedStrict": true
          },
          "program": null,
          "project": false,
          "projectService": false
        }
      },
      "index": 13
    },
    {
      "name": "@vanyauhalin/ascii-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "ascii": {}
      },
      "index": 14
    },
    {
      "name": "@vanyauhalin/clsx-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "clsx": {}
      },
      "index": 15
    },
    {
      "name": "@vanyauhalin/de-morgan",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "de-morgan": {}
      },
      "index": 16
    },
    {
      "name": "@vanyauhalin/depend-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "depend": {}
      },
      "index": 17
    },
    {
      "name": "@vanyauhalin/es-x-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "es-x": {}
      },
      "index": 18
    },
    {
      "name": "@vanyauhalin/eslint-comments-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "eslint-comments": {}
      },
      "index": 19
    },
    {
      "name": "@vanyauhalin/github-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "github": {}
      },
      "index": 20
    },
    {
      "name": "@vanyauhalin/html-plugin",
      "files": [
        "**/*.html"
      ],
      "plugins": {
        "html": {}
      },
      "index": 21
    },
    {
      "name": "@vanyauhalin/html-script-plugin",
      "files": [
        "**/*.html"
      ],
      "plugins": {
        "html-script": {}
      },
      "index": 22
    },
    {
      "name": "@vanyauhalin/import-newlines-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "import-newlines": {}
      },
      "index": 23
    },
    {
      "name": "@vanyauhalin/import-x-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "import-x": {}
      },
      "index": 24
    },
    {
      "name": "@vanyauhalin/jsdoc-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "jsdoc": {}
      },
      "index": 25
    },
    {
      "name": "@vanyauhalin/jsonc-plugin",
      "files": [
        "**/*.json",
        "**/*.json5",
        "**/*.jsonc"
      ],
      "plugins": {
        "jsonc": {}
      },
      "index": 26
    },
    {
      "name": "@vanyauhalin/jsx-a11y-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "jsx-a11y": {}
      },
      "index": 27
    },
    {
      "name": "@vanyauhalin/markdown-plugin",
      "files": [
        "**/*.md"
      ],
      "plugins": {
        "markdown": {}
      },
      "index": 28
    },
    {
      "name": "@vanyauhalin/math-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "math": {}
      },
      "index": 29
    },
    {
      "name": "@vanyauhalin/n-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "n": {}
      },
      "index": 30
    },
    {
      "name": "@vanyauhalin/no-unsanitized-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "no-unsanitized": {}
      },
      "index": 31
    },
    {
      "name": "@vanyauhalin/node-dependencies-plugin",
      "files": [
        "**/package.json"
      ],
      "plugins": {
        "node-dependencies": {}
      },
      "index": 32
    },
    {
      "name": "@vanyauhalin/package-json-plugin",
      "files": [
        "**/package.json"
      ],
      "plugins": {
        "package-json": {}
      },
      "index": 33
    },
    {
      "name": "@vanyauhalin/prefer-let-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "prefer-let": {}
      },
      "index": 34
    },
    {
      "name": "@vanyauhalin/promise-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "promise": {}
      },
      "index": 35
    },
    {
      "name": "@vanyauhalin/regexp-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "regexp": {}
      },
      "index": 36
    },
    {
      "name": "@vanyauhalin/security-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "security": {}
      },
      "index": 37
    },
    {
      "name": "@vanyauhalin/stylistic-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "stylistic": {}
      },
      "index": 38
    },
    {
      "name": "@vanyauhalin/toml-plugin",
      "files": [
        "**/*.toml"
      ],
      "plugins": {
        "toml": {}
      },
      "index": 39
    },
    {
      "name": "@vanyauhalin/typescript-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "typescript": {}
      },
      "index": 40
    },
    {
      "name": "@vanyauhalin/unicorn-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "unicorn": {}
      },
      "index": 41
    },
    {
      "name": "@vanyauhalin/wc-plugin",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "plugins": {
        "wc": {}
      },
      "index": 42
    },
    {
      "name": "@vanyauhalin/yml-plugin",
      "files": [
        "**/*.yaml",
        "**/*.yml"
      ],
      "plugins": {
        "yml": {}
      },
      "index": 43
    },
    {
      "name": "@vanyauhalin/builtin-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "constructor-super": "error",
        "curly": "error",
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-notation": "error",
        "eqeqeq": "error",
        "for-direction": "error",
        "func-name-matching": "error",
        "func-names": "error",
        "func-style": [
          "error",
          "declaration",
          {
            "allowArrowFunctions": true
          }
        ],
        "getter-return": "error",
        "grouped-accessor-pairs": "error",
        "logical-assignment-operators": "error",
        "new-cap": "error",
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-async-promise-executor": "error",
        "no-caller": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-const-assign": "error",
        "no-constant-binary-expression": "error",
        "no-constant-condition": "error",
        "no-constructor-return": "error",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-else-return": "error",
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-empty-static-block": "error",
        "no-empty": "error",
        "no-eq-null": "error",
        "no-eval": "error",
        "no-ex-assign": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-label": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-import-assign": "error",
        "no-invalid-regexp": "error",
        "no-invalid-this": "error",
        "no-irregular-whitespace": "error",
        "no-iterator": "error",
        "no-label-var": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "error",
        "no-loop-func": "error",
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-multi-assign": "error",
        "no-multi-str": "error",
        "no-nested-ternary": "error",
        "no-new-func": "error",
        "no-new-native-nonconstructor": "error",
        "no-new-wrappers": "error",
        "no-new": "error",
        "no-nonoctal-decimal-escape": "error",
        "no-obj-calls": "error",
        "no-object-constructor": "error",
        "no-octal-escape": "error",
        "no-octal": "error",
        "no-plusplus": "error",
        "no-promise-executor-return": "error",
        "no-proto": "error",
        "no-prototype-builtins": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "error",
        "no-restricted-syntax": [
          "error",
          "ImportSpecifier"
        ],
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-setter-return": "error",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-ternary": "error",
        "no-this-before-super": "error",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "error",
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "error",
        "no-unreachable-loop": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-expressions": "error",
        "no-unused-labels": "error",
        "no-unused-private-class-members": "error",
        "no-unused-vars": "error",
        "no-useless-backreference": "error",
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "error",
        "no-useless-constructor": "error",
        "no-useless-escape": "error",
        "no-useless-rename": "error",
        "no-var": "error",
        "no-void": [
          "error",
          {
            "allowAsStatement": true
          }
        ],
        "no-with": "error",
        "object-shorthand": "error",
        "one-var": [
          "error",
          "never"
        ],
        "operator-assignment": "error",
        "prefer-arrow-callback": "error",
        "prefer-const": "error",
        "prefer-numeric-literals": "error",
        "prefer-object-has-own": "error",
        "prefer-object-spread": "error",
        "prefer-promise-reject-errors": "error",
        "prefer-regex-literals": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "prefer-template": "error",
        "radix": "error",
        "require-await": "error",
        "require-yield": "error",
        "sort-imports": [
          "error",
          {
            "ignoreDeclarationSort": true
          }
        ],
        "strict": [
          "error",
          "never"
        ],
        "symbol-description": "error",
        "unicode-bom": "error",
        "use-isnan": "error",
        "valid-typeof": "error",
        "vars-on-top": "error",
        "yoda": "error"
      },
      "index": 44
    },
    {
      "name": "@vanyauhalin/ascii-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "ascii/valid-name": "error"
      },
      "index": 45
    },
    {
      "name": "@vanyauhalin/clsx-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "clsx/forbid-array-expressions": "error",
        "clsx/forbid-false-inside-object-expressions": "error",
        "clsx/forbid-true-inside-object-expressions": "error",
        "clsx/no-redundant-clsx": "error",
        "clsx/no-spreading": "error",
        "clsx/prefer-logical-over-objects": "error",
        "clsx/prefer-merged-neighboring-elements": "error"
      },
      "index": 46
    },
    {
      "name": "@vanyauhalin/de-morgan-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "de-morgan/no-negated-conjunction": "error",
        "de-morgan/no-negated-disjunction": "error"
      },
      "index": 47
    },
    {
      "name": "@vanyauhalin/depend-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "depend/ban-dependencies": "error"
      },
      "index": 48
    },
    {
      "name": "@vanyauhalin/es-x-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "es-x/no-array-of": "error",
        "es-x/no-array-prototype-at": "error",
        "es-x/no-array-prototype-copywithin": "error",
        "es-x/no-array-prototype-every": "error",
        "es-x/no-array-prototype-fill": "error",
        "es-x/no-array-prototype-filter": "error",
        "es-x/no-array-prototype-find": "error",
        "es-x/no-array-prototype-findindex": "error",
        "es-x/no-array-prototype-findlast-findlastindex": "error",
        "es-x/no-array-prototype-flat": "error",
        "es-x/no-array-prototype-foreach": "error",
        "es-x/no-array-prototype-keys": "error",
        "es-x/no-array-prototype-lastindexof": "error",
        "es-x/no-array-prototype-map": "error",
        "es-x/no-array-prototype-reduce": "error",
        "es-x/no-array-prototype-reduceright": "error",
        "es-x/no-array-prototype-some": "error",
        "es-x/no-array-prototype-toreversed": "error",
        "es-x/no-array-prototype-tosorted": "error",
        "es-x/no-array-prototype-tospliced": "error",
        "es-x/no-array-prototype-values": "error",
        "es-x/no-array-prototype-with": "error",
        "es-x/no-class-private-fields": "error",
        "es-x/no-class-private-methods": "error",
        "es-x/no-class-static-block": "error",
        "es-x/no-date-prototype-getyear-setyear": "error",
        "es-x/no-date-prototype-togmtstring": "error",
        "es-x/no-default-parameters": "error",
        "es-x/no-escape-unescape": "error",
        "es-x/no-exponential-operators": "error",
        "es-x/no-function-declarations-in-if-statement-clauses-without-block": "error",
        "es-x/no-initializers-in-for-in": "error",
        "es-x/no-iterator-prototype-every": "error",
        "es-x/no-iterator-prototype-filter": "error",
        "es-x/no-iterator-prototype-find": "error",
        "es-x/no-iterator-prototype-flatmap": "error",
        "es-x/no-iterator-prototype-foreach": "error",
        "es-x/no-iterator-prototype-map": "error",
        "es-x/no-iterator-prototype-reduce": "error",
        "es-x/no-iterator-prototype-some": "error",
        "es-x/no-labelled-function-declarations": "error",
        "es-x/no-legacy-object-prototype-accessor-methods": "error",
        "es-x/no-logical-assignment-operators": "error",
        "es-x/no-map-groupby": "error",
        "es-x/no-new-target": "error",
        "es-x/no-nonstandard-array-properties": "error",
        "es-x/no-nonstandard-arraybuffer-properties": "error",
        "es-x/no-nonstandard-atomics-properties": "error",
        "es-x/no-nonstandard-bigint-properties": "error",
        "es-x/no-nonstandard-boolean-properties": "error",
        "es-x/no-nonstandard-dataview-properties": "error",
        "es-x/no-nonstandard-date-properties": "error",
        "es-x/no-nonstandard-error-properties": "error",
        "es-x/no-nonstandard-finalizationregistry-properties": "error",
        "es-x/no-nonstandard-function-properties": "error",
        "es-x/no-nonstandard-intl-collator-properties": "error",
        "es-x/no-nonstandard-intl-datetimeformat-properties": "error",
        "es-x/no-nonstandard-intl-displaynames-properties": "error",
        "es-x/no-nonstandard-intl-durationformat-properties": "error",
        "es-x/no-nonstandard-intl-listformat-properties": "error",
        "es-x/no-nonstandard-intl-locale-properties": "error",
        "es-x/no-nonstandard-intl-numberformat-properties": "error",
        "es-x/no-nonstandard-intl-pluralrules-properties": "error",
        "es-x/no-nonstandard-intl-properties": "error",
        "es-x/no-nonstandard-intl-relativetimeformat-properties": "error",
        "es-x/no-nonstandard-intl-segmenter-properties": "error",
        "es-x/no-nonstandard-iterator-properties": "error",
        "es-x/no-nonstandard-json-properties": "error",
        "es-x/no-nonstandard-map-properties": "error",
        "es-x/no-nonstandard-math-properties": "error",
        "es-x/no-nonstandard-number-properties": "error",
        "es-x/no-nonstandard-object-properties": "error",
        "es-x/no-nonstandard-promise-properties": "error",
        "es-x/no-nonstandard-proxy-properties": "error",
        "es-x/no-nonstandard-reflect-properties": "error",
        "es-x/no-nonstandard-regexp-properties": "error",
        "es-x/no-nonstandard-set-properties": "error",
        "es-x/no-nonstandard-sharedarraybuffer-properties": "error",
        "es-x/no-nonstandard-string-properties": "error",
        "es-x/no-nonstandard-symbol-properties": "error",
        "es-x/no-nonstandard-typed-array-properties": "error",
        "es-x/no-nonstandard-weakmap-properties": "error",
        "es-x/no-nonstandard-weakref-properties": "error",
        "es-x/no-nonstandard-weakset-properties": "error",
        "es-x/no-nullish-coalescing-operators": "error",
        "es-x/no-numeric-separators": "error",
        "es-x/no-object-assign": "error",
        "es-x/no-object-create": "error",
        "es-x/no-object-defineproperties": "error",
        "es-x/no-object-defineproperty": "error",
        "es-x/no-object-freeze": "error",
        "es-x/no-object-getownpropertydescriptor": "error",
        "es-x/no-object-getownpropertydescriptors": "error",
        "es-x/no-object-getownpropertynames": "error",
        "es-x/no-object-getownpropertysymbols": "error",
        "es-x/no-object-getprototypeof": "error",
        "es-x/no-object-groupby": "error",
        "es-x/no-object-hasown": "error",
        "es-x/no-object-is": "error",
        "es-x/no-object-isextensible": "error",
        "es-x/no-object-isfrozen": "error",
        "es-x/no-object-issealed": "error",
        "es-x/no-object-preventextensions": "error",
        "es-x/no-object-seal": "error",
        "es-x/no-object-setprototypeof": "error",
        "es-x/no-optional-chaining": "error",
        "es-x/no-private-in": "error",
        "es-x/no-regexp-prototype-compile": "error",
        "es-x/no-shadow-catch-param": "error",
        "es-x/no-string-create-html-methods": "error",
        "es-x/no-string-prototype-at": "error",
        "es-x/no-string-prototype-substr": "error",
        "es-x/no-string-prototype-trimleft-trimright": "error",
        "es-x/no-unicode-codepoint-escapes": "error"
      },
      "index": 49
    },
    {
      "name": "@vanyauhalin/eslint-comments-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "eslint-comments/disable-enable-pair": [
          "error",
          {
            "allowWholeFile": true
          }
        ],
        "eslint-comments/no-aggregating-enable": "error",
        "eslint-comments/no-duplicate-disable": "error",
        "eslint-comments/no-unlimited-disable": "error",
        "eslint-comments/no-unused-disable": "error",
        "eslint-comments/no-unused-enable": "error"
      },
      "index": 50
    },
    {
      "name": "@vanyauhalin/github-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "github/a11y-aria-label-is-well-formatted": "error",
        "github/a11y-no-title-attribute": "error",
        "github/a11y-role-supports-aria-props": "error",
        "github/a11y-svg-has-accessible-name": "error",
        "github/array-foreach": "error",
        "github/get-attribute": "error",
        "github/no-blur": "error",
        "github/no-dataset": "error",
        "github/no-dynamic-script-tag": "error",
        "github/no-implicit-buggy-globals": "error",
        "github/no-inner-html": "error",
        "github/no-useless-passive": "error",
        "github/prefer-observers": "error",
        "github/require-passive-events": "error",
        "github/unescaped-html-literal": "error"
      },
      "index": 51
    },
    {
      "name": "@vanyauhalin/html-rules",
      "files": [
        "**/*.html"
      ],
      "rules": {
        "html/element-newline": [
          "error",
          {
            "skip": [
              "pre",
              "code"
            ],
            "inline": [
              "$inline"
            ]
          }
        ],
        "html/id-naming-convention": [
          "error",
          "kebab-case"
        ],
        "html/indent": [
          "error",
          "tab"
        ],
        "html/lowercase": "error",
        "html/no-abstract-roles": "error",
        "html/no-accesskey-attrs": "error",
        "html/no-aria-hidden-body": "error",
        "html/no-aria-hidden-on-focusable": "error",
        "html/no-duplicate-attrs": "error",
        "html/no-duplicate-class": "error",
        "html/no-duplicate-id": "error",
        "html/no-duplicate-in-head": "error",
        "html/no-empty-headings": "error",
        "html/no-extra-spacing-attrs": "error",
        "html/no-extra-spacing-text": "error",
        "html/no-heading-inside-button": "error",
        "html/no-ineffective-attrs": "error",
        "html/no-inline-styles": "error",
        "html/no-invalid-entity": "error",
        "html/no-invalid-role": "error",
        "html/no-multiple-empty-lines": "error",
        "html/no-multiple-h1": "error",
        "html/no-nested-interactive": "error",
        "html/no-non-scalable-viewport": "error",
        "html/no-obsolete-tags": "error",
        "html/no-positive-tabindex": "error",
        "html/no-script-style-type": "error",
        "html/no-skip-heading-levels": "error",
        "html/no-target-blank": "error",
        "html/no-trailing-spaces": "error",
        "html/prefer-https": "error",
        "html/quotes": "error",
        "html/require-button-type": "error",
        "html/require-closing-tags": "error",
        "html/require-explicit-size": "error",
        "html/require-form-method": "error",
        "html/require-frame-title": "error",
        "html/require-img-alt": "error",
        "html/require-input-label": "error",
        "html/require-lang": "error",
        "html/require-li-container": "error",
        "html/require-meta-charset": "error",
        "html/require-meta-description": "error",
        "html/require-meta-viewport": "error",
        "html/require-open-graph-protocol": "error",
        "html/require-title": "error",
        "html/sort-attrs": [
          "error",
          {
            "priority": [
              "id",
              "type",
              "class",
              "style"
            ]
          }
        ],
        "html/use-baseline": "error"
      },
      "index": 52
    },
    {
      "name": "@vanyauhalin/html-script-settings",
      "files": [
        "**/*.html"
      ],
      "settings": {
        "html-script/indent": "0",
        "html-script/report-bad-indent": "error"
      },
      "index": 53
    },
    {
      "name": "@vanyauhalin/import-newlines-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "import-newlines/enforce": [
          "error",
          {
            "items": null,
            "max-len": 120,
            "semi": false
          }
        ]
      },
      "index": 54
    },
    {
      "name": "@vanyauhalin/import-x-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "import-x/order": [
          "error",
          {
            "alphabetize": {
              "order": "asc",
              "orderImportKind": "asc"
            },
            "named": true,
            "newlines-between": "never",
            "warnOnUnassignedImports": true
          }
        ],
        "import-x/consistent-type-specifier-style": "error",
        "import-x/default": "error",
        "import-x/export": "error",
        "import-x/extensions": [
          "error",
          "always",
          {
            "ignorePackages": true
          }
        ],
        "import-x/first": "error",
        "import-x/named": "error",
        "import-x/namespace": "error",
        "import-x/newline-after-import": "error",
        "import-x/no-absolute-path": "error",
        "import-x/no-amd": "error",
        "import-x/no-commonjs": "error",
        "import-x/no-cycle": "error",
        "import-x/no-default-export": "error",
        "import-x/no-deprecated": "error",
        "import-x/no-duplicates": "error",
        "import-x/no-empty-named-blocks": "error",
        "import-x/no-extraneous-dependencies": "error",
        "import-x/no-import-module-exports": "error",
        "import-x/no-mutable-exports": "error",
        "import-x/no-named-as-default-member": "error",
        "import-x/no-named-as-default": "error",
        "import-x/no-named-default": "error",
        "import-x/no-self-import": "error",
        "import-x/no-unassigned-import": "error",
        "import-x/no-unused-modules": "error",
        "import-x/no-useless-path-segments": "error",
        "import-x/no-webpack-loader-syntax": "error"
      },
      "index": 55
    },
    {
      "name": "@vanyauhalin/jsdoc-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "jsdoc/check-access": "error",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-param-names": "error",
        "jsdoc/check-property-names": "error",
        "jsdoc/check-syntax": "error",
        "jsdoc/check-tag-names": "error",
        "jsdoc/check-template-names": "error",
        "jsdoc/check-types": "error",
        "jsdoc/empty-tags": "error",
        "jsdoc/implements-on-classes": "error",
        "jsdoc/imports-as-dependencies": "error",
        "jsdoc/lines-before-block": [
          "error",
          {
            "ignoreSingleLines": false
          }
        ],
        "jsdoc/multiline-blocks": "error",
        "jsdoc/no-bad-blocks": "error",
        "jsdoc/no-blank-block-descriptions": "error",
        "jsdoc/no-blank-blocks": "error",
        "jsdoc/no-defaults": "error",
        "jsdoc/no-multi-asterisks": "error",
        "jsdoc/no-undefined-types": "error",
        "jsdoc/require-asterisk-prefix": "error",
        "jsdoc/require-hyphen-before-param-description": [
          "error",
          "never"
        ],
        "jsdoc/require-param-name": "error",
        "jsdoc/require-param-type": "error",
        "jsdoc/require-param": "error",
        "jsdoc/require-property-name": "error",
        "jsdoc/require-property-type": "error",
        "jsdoc/require-returns-check": "error",
        "jsdoc/require-returns-type": "error",
        "jsdoc/require-returns": "error",
        "jsdoc/require-template": "error",
        "jsdoc/require-throws": "error",
        "jsdoc/require-yields-check": "error",
        "jsdoc/require-yields": "error",
        "jsdoc/valid-types": "error"
      },
      "index": 56
    },
    {
      "name": "@vanyauhalin/jsdoc-rules/typescript-exceptions",
      "files": [
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx"
      ],
      "rules": {
        "jsdoc/no-types": "error",
        "jsdoc/no-undefined-types": "off",
        "jsdoc/require-param-type": "off",
        "jsdoc/require-param": "off",
        "jsdoc/require-property-type": "off",
        "jsdoc/require-returns-type": "off",
        "jsdoc/require-returns": "off",
        "jsdoc/require-template": "off",
        "jsdoc/require-yields": "off"
      },
      "index": 57
    },
    {
      "name": "@vanyauhalin/jsonc-rules",
      "files": [
        "**/*.json",
        "**/*.json5",
        "**/*.jsonc"
      ],
      "rules": {
        "jsonc/array-bracket-newline": "error",
        "jsonc/array-bracket-spacing": "error",
        "jsonc/comma-dangle": "error",
        "jsonc/comma-style": "error",
        "jsonc/indent": [
          "error",
          "tab"
        ],
        "jsonc/key-spacing": "error",
        "jsonc/no-bigint-literals": "error",
        "jsonc/no-binary-expression": "error",
        "jsonc/no-binary-numeric-literals": "error",
        "jsonc/no-comments": "error",
        "jsonc/no-dupe-keys": "error",
        "jsonc/no-escape-sequence-in-identifier": "error",
        "jsonc/no-floating-decimal": "error",
        "jsonc/no-hexadecimal-numeric-literals": "error",
        "jsonc/no-infinity": "error",
        "jsonc/no-irregular-whitespace": "error",
        "jsonc/no-multi-str": "error",
        "jsonc/no-nan": "error",
        "jsonc/no-number-props": "error",
        "jsonc/no-numeric-separators": "error",
        "jsonc/no-octal-escape": "error",
        "jsonc/no-octal-numeric-literals": "error",
        "jsonc/no-octal": "error",
        "jsonc/no-parenthesized": "error",
        "jsonc/no-plus-sign": "error",
        "jsonc/no-regexp-literals": "error",
        "jsonc/no-sparse-arrays": "error",
        "jsonc/no-template-literals": "error",
        "jsonc/no-undefined-value": "error",
        "jsonc/no-unicode-codepoint-escapes": "error",
        "jsonc/no-useless-escape": "error",
        "jsonc/object-curly-newline": "error",
        "jsonc/object-curly-spacing": "error",
        "jsonc/object-property-newline": "error",
        "jsonc/quote-props": "error",
        "jsonc/quotes": "error",
        "jsonc/space-unary-ops": "error",
        "jsonc/valid-json-number": "error"
      },
      "index": 58
    },
    {
      "name": "@vanyauhalin/jsonc-rules/json5-exceptions",
      "files": [
        "**/*.json5"
      ],
      "rules": {
        "jsonc/comma-dangle": [
          "error",
          "always-multiline"
        ],
        "jsonc/no-comments": "off",
        "jsonc/quote-props": [
          "error",
          "consistent"
        ]
      },
      "index": 59
    },
    {
      "name": "@vanyauhalin/jsonc-rules/jsonc-exceptions",
      "files": [
        "**/*.jsonc"
      ],
      "rules": {
        "jsonc/no-comments": "off"
      },
      "index": 60
    },
    {
      "name": "@vanyauhalin/jsx-a11y-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "jsx-a11y/alt-text": "error",
        "jsx-a11y/anchor-has-content": "error",
        "jsx-a11y/anchor-is-valid": "error",
        "jsx-a11y/aria-activedescendant-has-tabindex": "error",
        "jsx-a11y/aria-props": "error",
        "jsx-a11y/aria-proptypes": "error",
        "jsx-a11y/aria-role": "error",
        "jsx-a11y/aria-unsupported-elements": "error",
        "jsx-a11y/autocomplete-valid": "error",
        "jsx-a11y/click-events-have-key-events": "error",
        "jsx-a11y/heading-has-content": "error",
        "jsx-a11y/html-has-lang": "error",
        "jsx-a11y/iframe-has-title": "error",
        "jsx-a11y/img-redundant-alt": "error",
        "jsx-a11y/interactive-supports-focus": "error",
        "jsx-a11y/label-has-associated-control": "error",
        "jsx-a11y/lang": "error",
        "jsx-a11y/media-has-caption": "error",
        "jsx-a11y/mouse-events-have-key-events": "error",
        "jsx-a11y/no-access-key": "error",
        "jsx-a11y/no-aria-hidden-on-focusable": "error",
        "jsx-a11y/no-autofocus": "error",
        "jsx-a11y/no-distracting-elements": "error",
        "jsx-a11y/no-interactive-element-to-noninteractive-role": "error",
        "jsx-a11y/no-noninteractive-element-interactions": "error",
        "jsx-a11y/no-noninteractive-element-to-interactive-role": "error",
        "jsx-a11y/no-noninteractive-tabindex": "error",
        "jsx-a11y/no-redundant-roles": "error",
        "jsx-a11y/no-static-element-interactions": "error",
        "jsx-a11y/prefer-tag-over-role": "error",
        "jsx-a11y/role-has-required-aria-props": "error",
        "jsx-a11y/role-supports-aria-props": "error",
        "jsx-a11y/scope": "error",
        "jsx-a11y/tabindex-no-positive": "error"
      },
      "index": 61
    },
    {
      "name": "@vanyauhalin/math-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "math/abs": [
          "error",
          {
            "prefer": "Math.abs"
          }
        ],
        "math/no-static-infinity-calculations": "error",
        "math/no-static-nan-calculations": "error",
        "math/prefer-math-cbrt": "error",
        "math/prefer-math-e": "error",
        "math/prefer-math-hypot": "error",
        "math/prefer-math-ln10": "error",
        "math/prefer-math-ln2": "error",
        "math/prefer-math-log10": "error",
        "math/prefer-math-log10e": "error",
        "math/prefer-math-log2": "error",
        "math/prefer-math-log2e": "error",
        "math/prefer-math-pi": "error",
        "math/prefer-math-sqrt": "error",
        "math/prefer-math-sqrt1-2": "error",
        "math/prefer-math-sqrt2": "error",
        "math/prefer-math-sum-precise": "error",
        "math/prefer-math-trunc": "error",
        "math/prefer-number-epsilon": "error",
        "math/prefer-number-is-finite": "error",
        "math/prefer-number-is-integer": "error",
        "math/prefer-number-is-nan": "error",
        "math/prefer-number-is-safe-integer": "error",
        "math/prefer-number-max-safe-integer": "error",
        "math/prefer-number-max-value": "error",
        "math/prefer-number-min-safe-integer": "error",
        "math/prefer-number-min-value": "error"
      },
      "index": 62
    },
    {
      "name": "@vanyauhalin/n-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "n/exports-style": "error",
        "n/hashbang": "error",
        "n/no-deprecated-api": "error",
        "n/no-exports-assign": "error",
        "n/no-new-require": "error",
        "n/no-path-concat": "error",
        "n/prefer-global/buffer": "error",
        "n/prefer-global/console": "error",
        "n/prefer-global/process": "error",
        "n/prefer-global/text-decoder": "error",
        "n/prefer-global/text-encoder": "error",
        "n/prefer-global/url": "error",
        "n/prefer-node-protocol": "error",
        "n/process-exit-as-throw": "error"
      },
      "index": 63
    },
    {
      "name": "@vanyauhalin/no-unsanitized-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "no-unsanitized/method": [
          "error",
          {},
          {
            "import": {
              "objectMatches": []
            }
          }
        ],
        "no-unsanitized/property": "error"
      },
      "index": 64
    },
    {
      "name": "@vanyauhalin/node-dependencies-rules",
      "files": [
        "**/package.json"
      ],
      "rules": {
        "node-dependencies/absolute-version": [
          "error",
          {
            "dependencies": "always",
            "peerDependencies": "never",
            "optionalDependencies": "always",
            "devDependencies": "always"
          }
        ],
        "node-dependencies/compat-engines": "error",
        "node-dependencies/no-deprecated": "error",
        "node-dependencies/no-dupe-deps": "error",
        "node-dependencies/prefer-caret-range-version": "error",
        "node-dependencies/prefer-tilde-range-version": "error",
        "node-dependencies/valid-semver": "error"
      },
      "index": 65
    },
    {
      "name": "@vanyauhalin/package-json-rules",
      "files": [
        "**/package.json"
      ],
      "rules": {
        "package-json/no-empty-fields": "error",
        "package-json/no-redundant-files": "error",
        "package-json/order-properties": "error",
        "package-json/repository-shorthand": "error",
        "package-json/require-author": [
          "error",
          {
            "ignorePrivate": true
          }
        ],
        "package-json/require-bugs": [
          "error",
          {
            "ignorePrivate": true
          }
        ],
        "package-json/require-description": [
          "error",
          {
            "ignorePrivate": true
          }
        ],
        "package-json/require-engines": [
          "error",
          {
            "ignorePrivate": true
          }
        ],
        "package-json/require-keywords": [
          "error",
          {
            "ignorePrivate": true
          }
        ],
        "package-json/require-name": "error",
        "package-json/require-type": "error",
        "package-json/require-version": [
          "error",
          {
            "ignorePrivate": true
          }
        ],
        "package-json/sort-collections": "error",
        "package-json/unique-dependencies": "error",
        "package-json/valid-author": "error",
        "package-json/valid-bin": "error",
        "package-json/valid-bundleDependencies": "error",
        "package-json/valid-config": "error",
        "package-json/valid-cpu": "error",
        "package-json/valid-dependencies": "error",
        "package-json/valid-description": "error",
        "package-json/valid-devDependencies": "error",
        "package-json/valid-exports": "error",
        "package-json/valid-license": "error",
        "package-json/valid-name": "error",
        "package-json/valid-optionalDependencies": "error",
        "package-json/valid-package-definition": "error",
        "package-json/valid-peerDependencies": "error",
        "package-json/valid-repository-directory": "error",
        "package-json/valid-scripts": "error",
        "package-json/valid-type": "error",
        "package-json/valid-version": "error"
      },
      "index": 66
    },
    {
      "name": "@vanyauhalin/prefer-let-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "prefer-const": "off",
        "prefer-let/prefer-let": "error"
      },
      "index": 67
    },
    {
      "name": "@vanyauhalin/promise-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "promise/always-return": "error",
        "promise/catch-or-return": "error",
        "promise/no-callback-in-promise": "error",
        "promise/no-multiple-resolved": "error",
        "promise/no-nesting": "error",
        "promise/no-new-statics": "error",
        "promise/no-return-in-finally": "error",
        "promise/no-return-wrap": "error",
        "promise/param-names": [
          "error",
          {
            "rejectPattern": "^(_+|rej|reject)$",
            "resolvePattern": "^(_+|res|resolve)$"
          }
        ],
        "promise/prefer-await-to-then": "error",
        "promise/prefer-catch": "error",
        "promise/spec-only": "error",
        "promise/valid-params": "error"
      },
      "index": 68
    },
    {
      "name": "@vanyauhalin/regexp-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "regexp/confusing-quantifier": "error",
        "regexp/control-character-escape": "error",
        "regexp/hexadecimal-escape": [
          "error",
          "never"
        ],
        "regexp/letter-case": "error",
        "regexp/match-any": "error",
        "regexp/negation": "error",
        "regexp/no-contradiction-with-assertion": "error",
        "regexp/no-dupe-characters-character-class": "error",
        "regexp/no-dupe-disjunctions": "error",
        "regexp/no-empty-alternative": "error",
        "regexp/no-empty-capturing-group": "error",
        "regexp/no-empty-character-class": "error",
        "regexp/no-empty-group": "error",
        "regexp/no-empty-lookarounds-assertion": "error",
        "regexp/no-empty-string-literal": "error",
        "regexp/no-escape-backspace": "error",
        "regexp/no-extra-lookaround-assertions": "error",
        "regexp/no-invalid-regexp": "error",
        "regexp/no-invisible-character": "error",
        "regexp/no-lazy-ends": "error",
        "regexp/no-legacy-features": "error",
        "regexp/no-misleading-capturing-group": "error",
        "regexp/no-misleading-unicode-character": "error",
        "regexp/no-missing-g-flag": "error",
        "regexp/no-non-standard-flag": "error",
        "regexp/no-obscure-range": "error",
        "regexp/no-optional-assertion": "error",
        "regexp/no-potentially-useless-backreference": "error",
        "regexp/no-super-linear-backtracking": "error",
        "regexp/no-trivially-nested-assertion": "error",
        "regexp/no-trivially-nested-quantifier": "error",
        "regexp/no-unused-capturing-group": "error",
        "regexp/no-useless-assertions": "error",
        "regexp/no-useless-backreference": "error",
        "regexp/no-useless-character-class": "error",
        "regexp/no-useless-dollar-replacements": "error",
        "regexp/no-useless-escape": "error",
        "regexp/no-useless-flag": "error",
        "regexp/no-useless-lazy": "error",
        "regexp/no-useless-non-capturing-group": "error",
        "regexp/no-useless-quantifier": "error",
        "regexp/no-useless-range": "error",
        "regexp/no-useless-set-operand": "error",
        "regexp/no-useless-string-literal": "error",
        "regexp/no-useless-two-nums-quantifier": "error",
        "regexp/no-zero-quantifier": "error",
        "regexp/optimal-lookaround-quantifier": "error",
        "regexp/optimal-quantifier-concatenation": "error",
        "regexp/prefer-character-class": "error",
        "regexp/prefer-d": "error",
        "regexp/prefer-lookaround": "error",
        "regexp/prefer-plus-quantifier": "error",
        "regexp/prefer-predefined-assertion": "error",
        "regexp/prefer-quantifier": "error",
        "regexp/prefer-question-quantifier": "error",
        "regexp/prefer-range": "error",
        "regexp/prefer-regexp-exec": "error",
        "regexp/prefer-regexp-test": "error",
        "regexp/prefer-set-operation": "error",
        "regexp/prefer-star-quantifier": "error",
        "regexp/prefer-w": "error",
        "regexp/simplify-set-operations": "error",
        "regexp/sort-flags": "error",
        "regexp/strict": "error",
        "regexp/unicode-escape": [
          "error",
          "unicodeEscape"
        ],
        "regexp/use-ignore-case": "error"
      },
      "index": 69
    },
    {
      "name": "@vanyauhalin/security-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "security/detect-bidi-characters": "error",
        "security/detect-buffer-noassert": "error",
        "security/detect-child-process": "error",
        "security/detect-disable-mustache-escape": "error",
        "security/detect-eval-with-expression": "error",
        "security/detect-new-buffer": "error",
        "security/detect-no-csrf-before-method-override": "error",
        "security/detect-non-literal-require": "error",
        "security/detect-possible-timing-attacks": "error",
        "security/detect-pseudoRandomBytes": "error"
      },
      "index": 70
    },
    {
      "name": "@vanyauhalin/stylistic-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "stylistic/array-bracket-newline": [
          "error",
          "consistent"
        ],
        "stylistic/array-bracket-spacing": "error",
        "stylistic/array-element-newline": [
          "error",
          "consistent"
        ],
        "stylistic/arrow-parens": "error",
        "stylistic/arrow-spacing": "error",
        "stylistic/block-spacing": [
          "error",
          "never"
        ],
        "stylistic/brace-style": "error",
        "stylistic/comma-dangle": [
          "error",
          "always-multiline"
        ],
        "stylistic/comma-spacing": "error",
        "stylistic/comma-style": "error",
        "stylistic/computed-property-spacing": "error",
        "stylistic/dot-location": "error",
        "stylistic/eol-last": "error",
        "stylistic/function-call-argument-newline": [
          "error",
          "consistent"
        ],
        "stylistic/function-call-spacing": "error",
        "stylistic/function-paren-newline": [
          "error",
          "consistent"
        ],
        "stylistic/generator-star-spacing": "error",
        "stylistic/implicit-arrow-linebreak": "error",
        "stylistic/indent-binary-ops": [
          "error",
          "tab"
        ],
        "stylistic/indent": [
          "error",
          "tab",
          {
            "SwitchCase": 0
          }
        ],
        "stylistic/jsx-child-element-spacing": "error",
        "stylistic/jsx-closing-bracket-location": [
          "error",
          "line-aligned"
        ],
        "stylistic/jsx-closing-tag-location": [
          "error",
          "line-aligned"
        ],
        "stylistic/jsx-curly-brace-presence": [
          "error",
          {
            "props": "never",
            "children": "never",
            "propElementValues": "always"
          }
        ],
        "stylistic/jsx-curly-newline": "error",
        "stylistic/jsx-curly-spacing": "error",
        "stylistic/jsx-equals-spacing": "error",
        "stylistic/jsx-first-prop-new-line": "error",
        "stylistic/jsx-indent-props": [
          "error",
          "tab"
        ],
        "stylistic/jsx-newline": [
          "error",
          {
            "prevent": true
          }
        ],
        "stylistic/jsx-pascal-case": "error",
        "stylistic/jsx-props-no-multi-spaces": "error",
        "stylistic/jsx-quotes": "error",
        "stylistic/jsx-tag-spacing": "error",
        "stylistic/key-spacing": "error",
        "stylistic/keyword-spacing": "error",
        "stylistic/linebreak-style": "error",
        "stylistic/max-len": [
          "error",
          {
            "code": 100,
            "tabWidth": 2,
            "ignorePattern": "(?:^[\\t ]*(?:export *)?(?:default *)?(?:async *)?function *\\w*\\([^\\n\\r)\\u2028\\u2029]*\\)[^\\n\\r)\\u2028\\u2029]*\\{$)|(?:^[\\t ]*(?:async *)?\\w*\\([^\\n\\r)\\u2028\\u2029]*\\)[^\\n\\r)\\u2028\\u2029]*$)|(?:^\\/\\/ eslint-disable-next-line[^\\n\\r)\\u2028\\u2029]*$)",
            "ignoreComments": false,
            "ignoreTrailingComments": true,
            "ignoreUrls": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true
          }
        ],
        "stylistic/max-statements-per-line": "error",
        "stylistic/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "none",
              "requireLast": false
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            },
            "multilineDetection": "brackets"
          }
        ],
        "stylistic/multiline-ternary": "error",
        "stylistic/new-parens": "error",
        "stylistic/no-confusing-arrow": "error",
        "stylistic/no-extra-parens": "error",
        "stylistic/no-extra-semi": "error",
        "stylistic/no-floating-decimal": "error",
        "stylistic/no-mixed-spaces-and-tabs": "error",
        "stylistic/no-multi-spaces": "error",
        "stylistic/no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxBOF": 0,
            "maxEOF": 0
          }
        ],
        "stylistic/no-trailing-spaces": "error",
        "stylistic/no-whitespace-before-property": "error",
        "stylistic/nonblock-statement-body-position": "error",
        "stylistic/object-curly-newline": "error",
        "stylistic/object-curly-spacing": "error",
        "stylistic/object-property-newline": [
          "error",
          {
            "allowAllPropertiesOnSameLine": true
          }
        ],
        "stylistic/one-var-declaration-per-line": "error",
        "stylistic/operator-linebreak": [
          "error",
          "after"
        ],
        "stylistic/padded-blocks": [
          "error",
          "never"
        ],
        "stylistic/quote-props": [
          "error",
          "consistent-as-needed"
        ],
        "stylistic/quotes": [
          "error",
          "double",
          {
            "avoidEscape": true,
            "allowTemplateLiterals": "avoidEscape"
          }
        ],
        "stylistic/rest-spread-spacing": "error",
        "stylistic/semi-spacing": "error",
        "stylistic/semi-style": [
          "error",
          "first"
        ],
        "stylistic/semi": [
          "error",
          "never"
        ],
        "stylistic/space-before-blocks": "error",
        "stylistic/space-before-function-paren": [
          "error",
          "never"
        ],
        "stylistic/space-in-parens": "error",
        "stylistic/space-infix-ops": "error",
        "stylistic/space-unary-ops": "error",
        "stylistic/spaced-comment": "error",
        "stylistic/switch-colon-spacing": "error",
        "stylistic/template-curly-spacing": "error",
        "stylistic/template-tag-spacing": "error",
        "stylistic/type-annotation-spacing": "error",
        "stylistic/type-generic-spacing": "error",
        "stylistic/type-named-tuple-spacing": "error",
        "stylistic/wrap-iife": [
          "error",
          "inside"
        ],
        "stylistic/yield-star-spacing": "error"
      },
      "index": 71
    },
    {
      "name": "@vanyauhalin/toml-rules",
      "files": [
        "**/*.toml"
      ],
      "rules": {
        "toml/array-bracket-newline": "error",
        "toml/array-bracket-spacing": [
          "error",
          "never"
        ],
        "toml/array-element-newline": "error",
        "toml/comma-style": "error",
        "toml/indent": [
          "error",
          "tab"
        ],
        "toml/inline-table-curly-spacing": [
          "error",
          "never",
          {
            "arraysInObjects": false,
            "objectsInObjects": false
          }
        ],
        "toml/key-spacing": "error",
        "toml/keys-order": "error",
        "toml/no-mixed-type-in-array": "error",
        "toml/no-non-decimal-integer": "error",
        "toml/no-space-dots": "error",
        "toml/no-unreadable-number-separator": "error",
        "toml/padding-line-between-pairs": "error",
        "toml/padding-line-between-tables": "error",
        "toml/precision-of-fractional-seconds": "error",
        "toml/precision-of-integer": "error",
        "toml/quoted-keys": "error",
        "toml/spaced-comment": "error",
        "toml/table-bracket-spacing": "error",
        "toml/tables-order": "error"
      },
      "index": 72
    },
    {
      "name": "@vanyauhalin/typescript-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "typescript/adjacent-overload-signatures": "error",
        "typescript/array-type": "error",
        "typescript/await-thenable": "error",
        "typescript/ban-tslint-comment": "error",
        "typescript/class-literal-property-style": [
          "error",
          "getters"
        ],
        "typescript/consistent-generic-constructors": "error",
        "typescript/consistent-indexed-object-style": "error",
        "typescript/consistent-type-assertions": "error",
        "typescript/consistent-type-definitions": [
          "error",
          "type"
        ],
        "typescript/consistent-type-imports": "error",
        "typescript/default-param-last": "error",
        "typescript/dot-notation": "error",
        "typescript/explicit-function-return-type": [
          "error",
          {
            "allowConciseArrowFunctionExpressionsStartingWithVoid": false,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowExpressions": true,
            "allowFunctionsWithoutTypeParameters": false,
            "allowHigherOrderFunctions": true,
            "allowIIFEs": false,
            "allowTypedFunctionExpressions": true
          }
        ],
        "typescript/explicit-module-boundary-types": "error",
        "typescript/method-signature-style": [
          "error",
          "method"
        ],
        "typescript/no-array-constructor": "error",
        "typescript/no-array-delete": "error",
        "typescript/no-base-to-string": [
          "error",
          {
            "checkUnknown": true
          }
        ],
        "typescript/no-confusing-non-null-assertion": "error",
        "typescript/no-confusing-void-expression": "error",
        "typescript/no-deprecated": "error",
        "typescript/no-dupe-class-members": "error",
        "typescript/no-duplicate-enum-values": "error",
        "typescript/no-duplicate-type-constituents": "error",
        "typescript/no-empty-object-type": [
          "error",
          {
            "allowInterfaces": "always"
          }
        ],
        "typescript/no-explicit-any": "error",
        "typescript/no-extra-non-null-assertion": "error",
        "typescript/no-floating-promises": "error",
        "typescript/no-for-in-array": "error",
        "typescript/no-implied-eval": "error",
        "typescript/no-inferrable-types": "error",
        "typescript/no-invalid-this": "error",
        "typescript/no-invalid-void-type": [
          "error",
          {
            "allowAsThisParameter": true,
            "allowInGenericTypeArguments": true
          }
        ],
        "typescript/no-loop-func": "error",
        "typescript/no-meaningless-void-operator": "error",
        "typescript/no-misused-new": "error",
        "typescript/no-misused-promises": "error",
        "typescript/no-misused-spread": "error",
        "typescript/no-mixed-enums": "error",
        "typescript/no-namespace": [
          "error",
          {
            "allowDeclarations": true
          }
        ],
        "typescript/no-non-null-asserted-nullish-coalescing": "error",
        "typescript/no-non-null-asserted-optional-chain": "error",
        "typescript/no-non-null-assertion": "error",
        "typescript/no-redeclare": "error",
        "typescript/no-redundant-type-constituents": "error",
        "typescript/no-require-imports": "error",
        "typescript/no-this-alias": "error",
        "typescript/no-unnecessary-boolean-literal-compare": "error",
        "typescript/no-unnecessary-parameter-property-assignment": "error",
        "typescript/no-unnecessary-qualifier": "error",
        "typescript/no-unnecessary-template-expression": "error",
        "typescript/no-unnecessary-type-arguments": "error",
        "typescript/no-unnecessary-type-assertion": "error",
        "typescript/no-unnecessary-type-constraint": "error",
        "typescript/no-unnecessary-type-conversion": "error",
        "typescript/no-unsafe-declaration-merging": "error",
        "typescript/no-unsafe-enum-comparison": "error",
        "typescript/no-unsafe-function-type": "error",
        "typescript/no-unsafe-unary-minus": "error",
        "typescript/no-unused-expressions": "error",
        "typescript/no-unused-vars": [
          "error",
          {
            "args": "all",
            "argsIgnorePattern": "^_+",
            "caughtErrors": "all",
            "caughtErrorsIgnorePattern": "^_+",
            "destructuredArrayIgnorePattern": "^_+",
            "ignoreRestSiblings": true,
            "varsIgnorePattern": "^_+"
          }
        ],
        "typescript/no-useless-constructor": "error",
        "typescript/no-useless-empty-export": "error",
        "typescript/no-wrapper-object-types": "error",
        "typescript/non-nullable-type-assertion-style": "error",
        "typescript/only-throw-error": "error",
        "typescript/parameter-properties": "error",
        "typescript/prefer-as-const": "error",
        "typescript/prefer-enum-initializers": "error",
        "typescript/prefer-find": "error",
        "typescript/prefer-for-of": "error",
        "typescript/prefer-function-type": "error",
        "typescript/prefer-includes": "error",
        "typescript/prefer-literal-enum-member": "error",
        "typescript/prefer-namespace-keyword": "error",
        "typescript/prefer-promise-reject-errors": "error",
        "typescript/prefer-reduce-type-parameter": "error",
        "typescript/prefer-regexp-exec": "error",
        "typescript/prefer-return-this-type": "error",
        "typescript/prefer-string-starts-ends-with": "error",
        "typescript/promise-function-async": "error",
        "typescript/related-getter-setter-pairs": "error",
        "typescript/require-array-sort-compare": "error",
        "typescript/require-await": "error",
        "typescript/restrict-plus-operands": "error",
        "typescript/restrict-template-expressions": "error",
        "typescript/return-await": [
          "error",
          "always"
        ],
        "typescript/switch-exhaustiveness-check": [
          "error",
          {
            "allowDefaultCaseForExhaustiveSwitch": true,
            "considerDefaultExhaustiveForUnions": true,
            "requireDefaultForNonUnion": false
          }
        ],
        "typescript/triple-slash-reference": "error",
        "typescript/unbound-method": "error",
        "typescript/unified-signatures": "error",
        "typescript/use-unknown-in-catch-callback-variable": "error"
      },
      "index": 73
    },
    {
      "name": "@vanyauhalin/typescript-rules/builtin-conflicts",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "default-param-last": "off",
        "dot-notation": "off",
        "no-array-constructor": "off",
        "no-dupe-class-members": "off",
        "no-invalid-this": "off",
        "no-loop-func": "off",
        "no-redeclare": "off",
        "no-throw-literal": "off",
        "no-unused-expressions": "off",
        "no-unused-vars": "off",
        "require-await": "off"
      },
      "index": 74
    },
    {
      "name": "@vanyauhalin/typescript-rules/javascript-exceptions",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs"
      ],
      "rules": {
        "typescript/explicit-function-return-type": "off",
        "typescript/explicit-module-boundary-types": "off"
      },
      "index": 75
    },
    {
      "name": "@vanyauhalin/typescript-rules/html-script-exceptions",
      "files": [
        "**/*.html"
      ],
      "rules": {
        "typescript/await-thenable": "off",
        "typescript/consistent-type-imports": "off",
        "typescript/dot-notation": "off",
        "typescript/no-array-delete": "off",
        "typescript/no-base-to-string": "off",
        "typescript/no-confusing-void-expression": "off",
        "typescript/no-deprecated": "off",
        "typescript/no-duplicate-type-constituents": "off",
        "typescript/no-floating-promises": "off",
        "typescript/no-for-in-array": "off",
        "typescript/no-implied-eval": "off",
        "typescript/no-meaningless-void-operator": "off",
        "typescript/no-misused-promises": "off",
        "typescript/no-misused-spread": "off",
        "typescript/no-mixed-enums": "off",
        "typescript/no-redundant-type-constituents": "off",
        "typescript/no-unnecessary-boolean-literal-compare": "off",
        "typescript/no-unnecessary-qualifier": "off",
        "typescript/no-unnecessary-template-expression": "off",
        "typescript/no-unnecessary-type-arguments": "off",
        "typescript/no-unnecessary-type-assertion": "off",
        "typescript/no-unnecessary-type-conversion": "off",
        "typescript/no-unsafe-enum-comparison": "off",
        "typescript/no-unsafe-unary-minus": "off",
        "typescript/non-nullable-type-assertion-style": "off",
        "typescript/only-throw-error": "off",
        "typescript/prefer-find": "off",
        "typescript/prefer-includes": "off",
        "typescript/prefer-promise-reject-errors": "off",
        "typescript/prefer-reduce-type-parameter": "off",
        "typescript/prefer-regexp-exec": "off",
        "typescript/prefer-return-this-type": "off",
        "typescript/prefer-string-starts-ends-with": "off",
        "typescript/promise-function-async": "off",
        "typescript/related-getter-setter-pairs": "off",
        "typescript/require-array-sort-compare": "off",
        "typescript/require-await": "off",
        "typescript/restrict-plus-operands": "off",
        "typescript/restrict-template-expressions": "off",
        "typescript/return-await": "off",
        "typescript/switch-exhaustiveness-check": "off",
        "typescript/unbound-method": "off",
        "typescript/use-unknown-in-catch-callback-variable": "off"
      },
      "index": 76
    },
    {
      "name": "@vanyauhalin/unicorn-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "unicorn/better-regex": "error",
        "unicorn/catch-error-name": [
          "error",
          {
            "name": "err"
          }
        ],
        "unicorn/consistent-assert": "error",
        "unicorn/consistent-date-clone": "error",
        "unicorn/consistent-empty-array-spread": "error",
        "unicorn/consistent-existence-index-check": "error",
        "unicorn/custom-error-definition": "error",
        "unicorn/empty-brace-spaces": "error",
        "unicorn/error-message": "error",
        "unicorn/expiring-todo-comments": "error",
        "unicorn/explicit-length-check": [
          "error",
          {
            "non-zero": "not-equal"
          }
        ],
        "unicorn/filename-case": "error",
        "unicorn/import-style": "error",
        "unicorn/new-for-builtins": "error",
        "unicorn/no-accessor-recursion": "error",
        "unicorn/no-anonymous-default-export": "error",
        "unicorn/no-array-for-each": "error",
        "unicorn/no-array-method-this-argument": "error",
        "unicorn/no-array-reduce": "error",
        "unicorn/no-await-expression-member": "error",
        "unicorn/no-await-in-promise-methods": "error",
        "unicorn/no-console-spaces": "error",
        "unicorn/no-document-cookie": "error",
        "unicorn/no-empty-file": "error",
        "unicorn/no-for-loop": "error",
        "unicorn/no-hex-escape": "error",
        "unicorn/no-instanceof-builtins": "error",
        "unicorn/no-invalid-fetch-options": "error",
        "unicorn/no-invalid-remove-event-listener": "error",
        "unicorn/no-lonely-if": "error",
        "unicorn/no-named-default": "error",
        "unicorn/no-negation-in-equality-check": "error",
        "unicorn/no-nested-ternary": "error",
        "unicorn/no-new-array": "error",
        "unicorn/no-new-buffer": "error",
        "unicorn/no-object-as-default-parameter": "error",
        "unicorn/no-process-exit": "error",
        "unicorn/no-single-promise-in-promise-methods": "error",
        "unicorn/no-thenable": "error",
        "unicorn/no-this-assignment": "error",
        "unicorn/no-typeof-undefined": "error",
        "unicorn/no-unnecessary-array-flat-depth": "error",
        "unicorn/no-unnecessary-array-splice-count": "error",
        "unicorn/no-unnecessary-await": "error",
        "unicorn/no-unnecessary-polyfills": "error",
        "unicorn/no-unnecessary-slice-end": "error",
        "unicorn/no-unreadable-array-destructuring": "error",
        "unicorn/no-unreadable-iife": "error",
        "unicorn/no-useless-error-capture-stack-trace": "error",
        "unicorn/no-useless-fallback-in-spread": "error",
        "unicorn/no-useless-length-check": "error",
        "unicorn/no-useless-promise-resolve-reject": "error",
        "unicorn/no-useless-spread": "error",
        "unicorn/no-useless-switch-case": "error",
        "unicorn/no-useless-undefined": [
          "error",
          {
            "checkArguments": false,
            "checkArrowFunctionBody": false
          }
        ],
        "unicorn/no-zero-fractions": "error",
        "unicorn/number-literal-case": "error",
        "unicorn/prefer-array-find": "error",
        "unicorn/prefer-array-flat-map": "error",
        "unicorn/prefer-array-flat": "error",
        "unicorn/prefer-array-index-of": "error",
        "unicorn/prefer-array-some": "error",
        "unicorn/prefer-blob-reading-methods": "error",
        "unicorn/prefer-code-point": "error",
        "unicorn/prefer-date-now": "error",
        "unicorn/prefer-dom-node-append": "error",
        "unicorn/prefer-dom-node-remove": "error",
        "unicorn/prefer-dom-node-text-content": "error",
        "unicorn/prefer-event-target": "error",
        "unicorn/prefer-export-from": "error",
        "unicorn/prefer-global-this": "error",
        "unicorn/prefer-import-meta-properties": "error",
        "unicorn/prefer-includes": "error",
        "unicorn/prefer-keyboard-event-key": "error",
        "unicorn/prefer-logical-operator-over-ternary": "error",
        "unicorn/prefer-math-min-max": "error",
        "unicorn/prefer-math-trunc": "error",
        "unicorn/prefer-modern-dom-apis": "error",
        "unicorn/prefer-modern-math-apis": "error",
        "unicorn/prefer-module": "error",
        "unicorn/prefer-native-coercion-functions": "error",
        "unicorn/prefer-negative-index": "error",
        "unicorn/prefer-node-protocol": "error",
        "unicorn/prefer-number-properties": "error",
        "unicorn/prefer-object-from-entries": "error",
        "unicorn/prefer-optional-catch-binding": "error",
        "unicorn/prefer-prototype-methods": "error",
        "unicorn/prefer-query-selector": "error",
        "unicorn/prefer-reflect-apply": "error",
        "unicorn/prefer-regexp-test": "error",
        "unicorn/prefer-set-size": "error",
        "unicorn/prefer-spread": "error",
        "unicorn/prefer-string-raw": "error",
        "unicorn/prefer-string-replace-all": "error",
        "unicorn/prefer-string-slice": "error",
        "unicorn/prefer-string-starts-ends-with": "error",
        "unicorn/prefer-string-trim-start-end": "error",
        "unicorn/prefer-structured-clone": "error",
        "unicorn/prefer-top-level-await": "error",
        "unicorn/relative-url-style": "error",
        "unicorn/require-array-join-separator": "error",
        "unicorn/require-number-to-fixed-digits-argument": "error",
        "unicorn/switch-case-braces": [
          "error",
          "avoid"
        ],
        "unicorn/text-encoding-identifier-case": "error",
        "unicorn/throw-new-error": "error"
      },
      "index": 77
    },
    {
      "name": "@vanyauhalin/wc-rules",
      "files": [
        "**/*.cjs",
        "**/*.js",
        "**/*.jsx",
        "**/*.mjs",
        "**/*.cts",
        "**/*.mts",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html"
      ],
      "rules": {
        "wc/attach-shadow-constructor": "error",
        "wc/guard-define-call": "error",
        "wc/guard-super-call": "error",
        "wc/no-child-traversal-in-attributechangedcallback": "error",
        "wc/no-child-traversal-in-connectedcallback": "error",
        "wc/no-closed-shadow-root": "error",
        "wc/no-constructor-attributes": "error",
        "wc/no-constructor-params": "error",
        "wc/no-customized-built-in-elements": "error",
        "wc/no-invalid-element-name": "error",
        "wc/no-invalid-extends": "error",
        "wc/no-self-class": "error",
        "wc/no-typos": "error",
        "wc/require-listener-teardown": "error",
        "wc/tag-name-matches-class": "error"
      },
      "index": 78
    },
    {
      "name": "@vanyauhalin/yml-rules",
      "files": [
        "**/*.yaml",
        "**/*.yml"
      ],
      "rules": {
        "yml/block-mapping-colon-indicator-newline": "error",
        "yml/block-mapping-question-indicator-newline": "error",
        "yml/block-mapping": "error",
        "yml/block-sequence-hyphen-indicator-newline": "error",
        "yml/block-sequence": "error",
        "yml/flow-mapping-curly-newline": "error",
        "yml/flow-mapping-curly-spacing": "error",
        "yml/flow-sequence-bracket-newline": "error",
        "yml/flow-sequence-bracket-spacing": "error",
        "yml/indent": [
          "error",
          2,
          {
            "indentBlockSequences": false,
            "indicatorValueIndent": 2
          }
        ],
        "yml/key-spacing": "error",
        "yml/no-empty-document": "error",
        "yml/no-empty-key": "error",
        "yml/no-empty-sequence-entry": "error",
        "yml/no-irregular-whitespace": "error",
        "yml/no-multiple-empty-lines": "error",
        "yml/no-tab-indent": "error",
        "yml/no-trailing-zeros": "error",
        "yml/plain-scalar": "error",
        "yml/quotes": "error",
        "yml/require-string-key": "error",
        "yml/spaced-comment": "error"
      },
      "index": 79
    },
    {
      "name": "@vanyauhalin/markdown-rules/typescript-integration",
      "files": [
        "**/*.md/*.cjs",
        "**/*.md/*.js",
        "**/*.md/*.jsx",
        "**/*.md/*.mjs",
        "**/*.md/*.cts",
        "**/*.md/*.mts",
        "**/*.md/*.ts",
        "**/*.md/*.tsx",
        "**/*.md/*.html"
      ],
      "rules": {
        "typescript/await-thenable": "off",
        "typescript/consistent-type-imports": "off",
        "typescript/dot-notation": "off",
        "typescript/no-array-delete": "off",
        "typescript/no-base-to-string": "off",
        "typescript/no-confusing-void-expression": "off",
        "typescript/no-deprecated": "off",
        "typescript/no-duplicate-type-constituents": "off",
        "typescript/no-floating-promises": "off",
        "typescript/no-for-in-array": "off",
        "typescript/no-implied-eval": "off",
        "typescript/no-meaningless-void-operator": "off",
        "typescript/no-misused-promises": "off",
        "typescript/no-misused-spread": "off",
        "typescript/no-mixed-enums": "off",
        "typescript/no-redundant-type-constituents": "off",
        "typescript/no-unnecessary-boolean-literal-compare": "off",
        "typescript/no-unnecessary-qualifier": "off",
        "typescript/no-unnecessary-template-expression": "off",
        "typescript/no-unnecessary-type-arguments": "off",
        "typescript/no-unnecessary-type-assertion": "off",
        "typescript/no-unnecessary-type-conversion": "off",
        "typescript/no-unsafe-enum-comparison": "off",
        "typescript/no-unsafe-unary-minus": "off",
        "typescript/non-nullable-type-assertion-style": "off",
        "typescript/only-throw-error": "off",
        "typescript/prefer-find": "off",
        "typescript/prefer-includes": "off",
        "typescript/prefer-promise-reject-errors": "off",
        "typescript/prefer-reduce-type-parameter": "off",
        "typescript/prefer-regexp-exec": "off",
        "typescript/prefer-return-this-type": "off",
        "typescript/prefer-string-starts-ends-with": "off",
        "typescript/promise-function-async": "off",
        "typescript/related-getter-setter-pairs": "off",
        "typescript/require-array-sort-compare": "off",
        "typescript/require-await": "off",
        "typescript/restrict-plus-operands": "off",
        "typescript/restrict-template-expressions": "off",
        "typescript/return-await": "off",
        "typescript/switch-exhaustiveness-check": "off",
        "typescript/unbound-method": "off",
        "typescript/use-unknown-in-catch-callback-variable": "off"
      },
      "index": 80
    },
    {
      "name": "@vanyauhalin/markdown-rules/unicorn-integration",
      "files": [
        "**/*.md/*"
      ],
      "rules": {
        "unicorn/filename-case": "off"
      },
      "index": 81
    },
    {
      "name": "@vanyauhalin/c8-config-file",
      "files": [
        "**/c8.config.json"
      ],
      "rules": {
        "jsonc/sort-array-values": [
          "error",
          {
            "pathPattern": "^reporter$",
            "order": {
              "type": "asc"
            }
          }
        ],
        "jsonc/sort-keys": [
          "error",
          {
            "pathPattern": "^$",
            "order": {
              "type": "asc"
            }
          }
        ]
      },
      "index": 82
    },
    {
      "name": "@vanyauhalin/eslint-config-file",
      "files": [
        "**/eslint.config.cjs",
        "**/eslint.config.js",
        "**/eslint.config.mjs",
        "**/eslint.config.cts",
        "**/eslint.config.mts",
        "**/eslint.config.ts"
      ],
      "rules": {
        "import-x/no-default-export": "off"
      },
      "index": 83
    },
    {
      "name": "@vanyauhalin/package-file",
      "files": [
        "**/package.json"
      ],
      "rules": {
        "jsonc/array-bracket-newline": [
          "error",
          "always"
        ]
      },
      "index": 84
    },
    {
      "name": "@vanyauhalin/tsconfig-file",
      "files": [
        "**/jsconfig.json",
        "**/jsconfig.*.json",
        "**/tsconfig.json",
        "**/tsconfig.*.json"
      ],
      "rules": {
        "jsonc/no-comments": "off",
        "jsonc/sort-keys": [
          "error",
          {
            "pathPattern": "^$",
            "order": [
              "extends",
              "compilerOptions",
              "references",
              "files",
              "include",
              "exclude"
            ]
          },
          {
            "pathPattern": "^compilerOptions$",
            "order": {
              "type": "asc"
            }
          }
        ]
      },
      "index": 85
    },
    {
      "name": "@vanyauhalin/typedoc-file",
      "files": [
        "**/typedoc.json"
      ],
      "rules": {
        "jsonc/no-comments": "off"
      },
      "index": 86
    }
  ],
  "rules": {
    "accessor-pairs": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForTSTypes": false,
          "enforceForClassMembers": true,
          "getWithoutSet": false,
          "setWithoutGet": true
        }
      ],
      "docs": {
        "description": "Enforce getter and setter pairs in objects and classes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/accessor-pairs"
      },
      "name": "accessor-pairs",
      "plugin": "eslint"
    },
    "array-bracket-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "array-bracket-newline",
              "url": "https://eslint.style/rules/array-bracket-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce linebreaks after opening and before closing array brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-bracket-newline"
      },
      "fixable": "whitespace",
      "name": "array-bracket-newline",
      "plugin": "eslint"
    },
    "array-bracket-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "array-bracket-spacing",
              "url": "https://eslint.style/rules/array-bracket-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside array brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-bracket-spacing"
      },
      "fixable": "whitespace",
      "name": "array-bracket-spacing",
      "plugin": "eslint"
    },
    "array-callback-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowImplicit": false,
          "checkForEach": false,
          "allowVoid": false
        }
      ],
      "docs": {
        "description": "Enforce `return` statements in callbacks of array methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-callback-return"
      },
      "hasSuggestions": true,
      "name": "array-callback-return",
      "plugin": "eslint"
    },
    "array-element-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "array-element-newline",
              "url": "https://eslint.style/rules/array-element-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks after each array element",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/array-element-newline"
      },
      "fixable": "whitespace",
      "name": "array-element-newline",
      "plugin": "eslint"
    },
    "arrow-body-style": {
      "type": "suggestion",
      "defaultOptions": [
        "as-needed"
      ],
      "docs": {
        "description": "Require braces around arrow function bodies",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/arrow-body-style"
      },
      "fixable": "code",
      "name": "arrow-body-style",
      "plugin": "eslint"
    },
    "arrow-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "arrow-parens",
              "url": "https://eslint.style/rules/arrow-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require parentheses around arrow function arguments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/arrow-parens"
      },
      "fixable": "code",
      "name": "arrow-parens",
      "plugin": "eslint"
    },
    "arrow-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "arrow-spacing",
              "url": "https://eslint.style/rules/arrow-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after the arrow in arrow functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/arrow-spacing"
      },
      "fixable": "whitespace",
      "name": "arrow-spacing",
      "plugin": "eslint"
    },
    "block-scoped-var": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of variables within the scope they are defined",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/block-scoped-var"
      },
      "name": "block-scoped-var",
      "plugin": "eslint"
    },
    "block-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "block-spacing",
              "url": "https://eslint.style/rules/block-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow or enforce spaces inside of blocks after opening block and before closing block",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/block-spacing"
      },
      "fixable": "whitespace",
      "name": "block-spacing",
      "plugin": "eslint"
    },
    "brace-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "brace-style",
              "url": "https://eslint.style/rules/brace-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent brace style for blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/brace-style"
      },
      "fixable": "whitespace",
      "name": "brace-style",
      "plugin": "eslint"
    },
    "callback-return": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "callback-return",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/callback-return.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require `return` statements after callbacks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/callback-return"
      },
      "name": "callback-return",
      "plugin": "eslint"
    },
    "camelcase": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "ignoreDestructuring": false,
          "ignoreGlobals": false,
          "ignoreImports": false,
          "properties": "always"
        }
      ],
      "docs": {
        "description": "Enforce camelcase naming convention",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/camelcase"
      },
      "name": "camelcase",
      "plugin": "eslint"
    },
    "capitalized-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce or disallow capitalization of the first letter of a comment",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/capitalized-comments"
      },
      "fixable": "code",
      "name": "capitalized-comments",
      "plugin": "eslint"
    },
    "class-methods-use-this": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassFields": true,
          "exceptMethods": [],
          "ignoreOverrideMethods": false
        }
      ],
      "docs": {
        "description": "Enforce that class methods utilize `this`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/class-methods-use-this"
      },
      "name": "class-methods-use-this",
      "plugin": "eslint"
    },
    "comma-dangle": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "comma-dangle",
              "url": "https://eslint.style/rules/comma-dangle"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow trailing commas",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-dangle"
      },
      "fixable": "code",
      "name": "comma-dangle",
      "plugin": "eslint"
    },
    "comma-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "comma-spacing",
              "url": "https://eslint.style/rules/comma-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after commas",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-spacing"
      },
      "fixable": "whitespace",
      "name": "comma-spacing",
      "plugin": "eslint"
    },
    "comma-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "comma-style",
              "url": "https://eslint.style/rules/comma-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent comma style",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/comma-style"
      },
      "fixable": "code",
      "name": "comma-style",
      "plugin": "eslint"
    },
    "complexity": {
      "type": "suggestion",
      "defaultOptions": [
        20
      ],
      "docs": {
        "description": "Enforce a maximum cyclomatic complexity allowed in a program",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/complexity"
      },
      "name": "complexity",
      "plugin": "eslint"
    },
    "computed-property-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "computed-property-spacing",
              "url": "https://eslint.style/rules/computed-property-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside computed property brackets",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/computed-property-spacing"
      },
      "fixable": "whitespace",
      "name": "computed-property-spacing",
      "plugin": "eslint"
    },
    "consistent-return": {
      "type": "suggestion",
      "docs": {
        "description": "Require `return` statements to either always or never specify values",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/consistent-return"
      },
      "defaultOptions": [
        {
          "treatUndefinedAsUnspecified": false
        }
      ],
      "name": "consistent-return",
      "plugin": "eslint"
    },
    "consistent-this": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent naming when capturing the current execution context",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/consistent-this"
      },
      "defaultOptions": [
        "that"
      ],
      "name": "consistent-this",
      "plugin": "eslint"
    },
    "constructor-super": {
      "type": "problem",
      "docs": {
        "description": "Require `super()` calls in constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/constructor-super"
      },
      "name": "constructor-super",
      "plugin": "eslint"
    },
    "curly": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent brace style for all control statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/curly"
      },
      "defaultOptions": [
        "all"
      ],
      "fixable": "code",
      "name": "curly",
      "plugin": "eslint"
    },
    "default-case": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Require `default` cases in `switch` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/default-case"
      },
      "name": "default-case",
      "plugin": "eslint"
    },
    "default-case-last": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `default` clauses in `switch` statements to be last",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/default-case-last"
      },
      "name": "default-case-last",
      "plugin": "eslint"
    },
    "default-param-last": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Enforce default parameters to be last",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/default-param-last"
      },
      "name": "default-param-last",
      "plugin": "eslint"
    },
    "dot-location": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "dot-location",
              "url": "https://eslint.style/rules/dot-location"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent newlines before and after dots",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/dot-location"
      },
      "fixable": "code",
      "name": "dot-location",
      "plugin": "eslint"
    },
    "dot-notation": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowKeywords": true,
          "allowPattern": ""
        }
      ],
      "docs": {
        "description": "Enforce dot notation whenever possible",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/dot-notation"
      },
      "fixable": "code",
      "name": "dot-notation",
      "plugin": "eslint"
    },
    "eol-last": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "eol-last",
              "url": "https://eslint.style/rules/eol-last"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow newline at the end of files",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/eol-last"
      },
      "fixable": "whitespace",
      "name": "eol-last",
      "plugin": "eslint"
    },
    "eqeqeq": {
      "type": "suggestion",
      "hasSuggestions": true,
      "docs": {
        "description": "Require the use of `===` and `!==`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/eqeqeq"
      },
      "fixable": "code",
      "name": "eqeqeq",
      "plugin": "eslint"
    },
    "for-direction": {
      "type": "problem",
      "docs": {
        "description": "Enforce `for` loop update clause moving the counter in the right direction",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/for-direction"
      },
      "fixable": null,
      "name": "for-direction",
      "plugin": "eslint"
    },
    "func-call-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-call-spacing",
              "url": "https://eslint.style/rules/function-call-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between function identifiers and their invocations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-call-spacing"
      },
      "fixable": "whitespace",
      "name": "func-call-spacing",
      "plugin": "eslint"
    },
    "func-name-matching": {
      "type": "suggestion",
      "docs": {
        "description": "Require function names to match the name of the variable or property to which they are assigned",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/func-name-matching"
      },
      "name": "func-name-matching",
      "plugin": "eslint"
    },
    "func-names": {
      "type": "suggestion",
      "defaultOptions": [
        "always",
        {}
      ],
      "docs": {
        "description": "Require or disallow named `function` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/func-names"
      },
      "name": "func-names",
      "plugin": "eslint"
    },
    "func-style": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        "expression",
        {
          "allowArrowFunctions": false,
          "allowTypeAnnotation": false,
          "overrides": {}
        }
      ],
      "docs": {
        "description": "Enforce the consistent use of either `function` declarations or expressions assigned to variables",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/func-style"
      },
      "name": "func-style",
      "plugin": "eslint"
    },
    "function-call-argument-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-call-argument-newline",
              "url": "https://eslint.style/rules/function-call-argument-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks between arguments of a function call",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/function-call-argument-newline"
      },
      "fixable": "whitespace",
      "name": "function-call-argument-newline",
      "plugin": "eslint"
    },
    "function-paren-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-paren-newline",
              "url": "https://eslint.style/rules/function-paren-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks inside function parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/function-paren-newline"
      },
      "fixable": "whitespace",
      "name": "function-paren-newline",
      "plugin": "eslint"
    },
    "generator-star-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "generator-star-spacing",
              "url": "https://eslint.style/rules/generator-star-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing around `*` operators in generator functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/generator-star-spacing"
      },
      "fixable": "whitespace",
      "name": "generator-star-spacing",
      "plugin": "eslint"
    },
    "getter-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowImplicit": false
        }
      ],
      "docs": {
        "description": "Enforce `return` statements in getters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/getter-return"
      },
      "fixable": null,
      "name": "getter-return",
      "plugin": "eslint"
    },
    "global-require": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "global-require",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/global-require.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require `require()` calls to be placed at top-level module scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/global-require"
      },
      "name": "global-require",
      "plugin": "eslint"
    },
    "grouped-accessor-pairs": {
      "type": "suggestion",
      "defaultOptions": [
        "anyOrder"
      ],
      "docs": {
        "description": "Require grouped accessor pairs in object literals and classes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/grouped-accessor-pairs"
      },
      "name": "grouped-accessor-pairs",
      "plugin": "eslint"
    },
    "guard-for-in": {
      "type": "suggestion",
      "docs": {
        "description": "Require `for-in` loops to include an `if` statement",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/guard-for-in"
      },
      "name": "guard-for-in",
      "plugin": "eslint"
    },
    "handle-callback-err": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "handle-callback-err",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/handle-callback-err.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require error handling in callbacks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/handle-callback-err"
      },
      "name": "handle-callback-err",
      "plugin": "eslint"
    },
    "id-blacklist": {
      "deprecated": {
        "message": "The rule was renamed.",
        "url": "https://eslint.org/blog/2020/07/eslint-v7.5.0-released/#deprecating-id-blacklist",
        "deprecatedSince": "7.5.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "id-denylist",
              "url": "https://eslint.org/docs/rules/id-denylist"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified identifiers",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/id-blacklist"
      },
      "name": "id-blacklist",
      "plugin": "eslint"
    },
    "id-denylist": {
      "type": "suggestion",
      "defaultOptions": [],
      "docs": {
        "description": "Disallow specified identifiers",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/id-denylist"
      },
      "name": "id-denylist",
      "plugin": "eslint"
    },
    "id-length": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptionPatterns": [],
          "exceptions": [],
          "min": 2,
          "properties": "always"
        }
      ],
      "docs": {
        "description": "Enforce minimum and maximum identifier lengths",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/id-length"
      },
      "name": "id-length",
      "plugin": "eslint"
    },
    "id-match": {
      "type": "suggestion",
      "defaultOptions": [
        "^.+$",
        {
          "classFields": false,
          "ignoreDestructuring": false,
          "onlyDeclarations": false,
          "properties": false
        }
      ],
      "docs": {
        "description": "Require identifiers to match a specified regular expression",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/id-match"
      },
      "name": "id-match",
      "plugin": "eslint"
    },
    "implicit-arrow-linebreak": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "implicit-arrow-linebreak",
              "url": "https://eslint.style/rules/implicit-arrow-linebreak"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the location of arrow function bodies",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/implicit-arrow-linebreak"
      },
      "fixable": "whitespace",
      "name": "implicit-arrow-linebreak",
      "plugin": "eslint"
    },
    "indent": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "indent",
              "url": "https://eslint.style/rules/indent"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/indent"
      },
      "fixable": "whitespace",
      "name": "indent",
      "plugin": "eslint"
    },
    "indent-legacy": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/indent-legacy"
      },
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "4.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "indent",
              "url": "https://eslint.style/rules/indent"
            }
          }
        ]
      },
      "fixable": "whitespace",
      "name": "indent-legacy",
      "plugin": "eslint"
    },
    "init-declarations": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Require or disallow initialization in variable declarations",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/init-declarations"
      },
      "name": "init-declarations",
      "plugin": "eslint"
    },
    "jsx-quotes": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "jsx-quotes",
              "url": "https://eslint.style/rules/jsx-quotes"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either double or single quotes in JSX attributes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/jsx-quotes"
      },
      "fixable": "whitespace",
      "name": "jsx-quotes",
      "plugin": "eslint"
    },
    "key-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "key-spacing",
              "url": "https://eslint.style/rules/key-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing between keys and values in object literal properties",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/key-spacing"
      },
      "fixable": "whitespace",
      "name": "key-spacing",
      "plugin": "eslint"
    },
    "keyword-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "keyword-spacing",
              "url": "https://eslint.style/rules/keyword-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after keywords",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/keyword-spacing"
      },
      "fixable": "whitespace",
      "name": "keyword-spacing",
      "plugin": "eslint"
    },
    "line-comment-position": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "9.3.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "line-comment-position",
              "url": "https://eslint.style/rules/line-comment-position"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce position of line comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/line-comment-position"
      },
      "name": "line-comment-position",
      "plugin": "eslint"
    },
    "linebreak-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "linebreak-style",
              "url": "https://eslint.style/rules/linebreak-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/linebreak-style"
      },
      "fixable": "whitespace",
      "name": "linebreak-style",
      "plugin": "eslint"
    },
    "lines-around-comment": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "lines-around-comment",
              "url": "https://eslint.style/rules/lines-around-comment"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require empty lines around comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-around-comment"
      },
      "fixable": "whitespace",
      "name": "lines-around-comment",
      "plugin": "eslint"
    },
    "lines-around-directive": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow newlines around directives",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-around-directive"
      },
      "fixable": "whitespace",
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/blog/2017/06/eslint-v4.0.0-released/",
        "deprecatedSince": "4.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "The new rule moved to a plugin.",
            "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements#examples",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "name": "lines-around-directive",
      "plugin": "eslint"
    },
    "lines-between-class-members": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "lines-between-class-members",
              "url": "https://eslint.style/rules/lines-between-class-members"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow an empty line between class members",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/lines-between-class-members"
      },
      "fixable": "whitespace",
      "name": "lines-between-class-members",
      "plugin": "eslint"
    },
    "logical-assignment-operators": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow logical assignment operator shorthand",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/logical-assignment-operators"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "logical-assignment-operators",
      "plugin": "eslint"
    },
    "max-classes-per-file": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of classes per file",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-classes-per-file"
      },
      "name": "max-classes-per-file",
      "plugin": "eslint"
    },
    "max-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum depth that blocks can be nested",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-depth"
      },
      "name": "max-depth",
      "plugin": "eslint"
    },
    "max-len": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "max-len",
              "url": "https://eslint.style/rules/max-len"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum line length",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-len"
      },
      "name": "max-len",
      "plugin": "eslint"
    },
    "max-lines": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of lines per file",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-lines"
      },
      "name": "max-lines",
      "plugin": "eslint"
    },
    "max-lines-per-function": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of lines of code in a function",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-lines-per-function"
      },
      "name": "max-lines-per-function",
      "plugin": "eslint"
    },
    "max-nested-callbacks": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum depth that callbacks can be nested",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-nested-callbacks"
      },
      "name": "max-nested-callbacks",
      "plugin": "eslint"
    },
    "max-params": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Enforce a maximum number of parameters in function definitions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-params"
      },
      "name": "max-params",
      "plugin": "eslint"
    },
    "max-statements": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of statements allowed in function blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-statements"
      },
      "name": "max-statements",
      "plugin": "eslint"
    },
    "max-statements-per-line": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "max-statements-per-line",
              "url": "https://eslint.style/rules/max-statements-per-line"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum number of statements allowed per line",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/max-statements-per-line"
      },
      "name": "max-statements-per-line",
      "plugin": "eslint"
    },
    "multiline-comment-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "9.3.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "multiline-comment-style",
              "url": "https://eslint.style/rules/multiline-comment-style"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Enforce a particular style for multiline comments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/multiline-comment-style"
      },
      "fixable": "whitespace",
      "name": "multiline-comment-style",
      "plugin": "eslint"
    },
    "multiline-ternary": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "multiline-ternary",
              "url": "https://eslint.style/rules/multiline-ternary"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce newlines between operands of ternary expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/multiline-ternary"
      },
      "fixable": "whitespace",
      "name": "multiline-ternary",
      "plugin": "eslint"
    },
    "new-cap": {
      "type": "suggestion",
      "docs": {
        "description": "Require constructor names to begin with a capital letter",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/new-cap"
      },
      "defaultOptions": [
        {
          "capIsNew": true,
          "capIsNewExceptions": [
            "Array",
            "Boolean",
            "Date",
            "Error",
            "Function",
            "Number",
            "Object",
            "RegExp",
            "String",
            "Symbol",
            "BigInt"
          ],
          "newIsCap": true,
          "newIsCapExceptions": [],
          "properties": true
        }
      ],
      "name": "new-cap",
      "plugin": "eslint"
    },
    "new-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "new-parens",
              "url": "https://eslint.style/rules/new-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce or disallow parentheses when invoking a constructor with no arguments",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/new-parens"
      },
      "fixable": "code",
      "name": "new-parens",
      "plugin": "eslint"
    },
    "newline-after-var": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow an empty line after variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-after-var"
      },
      "fixable": "whitespace",
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/blog/2017/06/eslint-v4.0.0-released/",
        "deprecatedSince": "4.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "The new rule moved to a plugin.",
            "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements#examples",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "name": "newline-after-var",
      "plugin": "eslint"
    },
    "newline-before-return": {
      "type": "layout",
      "docs": {
        "description": "Require an empty line before `return` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-before-return"
      },
      "fixable": "whitespace",
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/blog/2017/06/eslint-v4.0.0-released/",
        "deprecatedSince": "4.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "The new rule moved to a plugin.",
            "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements#examples",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "name": "newline-before-return",
      "plugin": "eslint"
    },
    "newline-per-chained-call": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "newline-per-chained-call",
              "url": "https://eslint.style/rules/newline-per-chained-call"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require a newline after each call in a method chain",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/newline-per-chained-call"
      },
      "fixable": "whitespace",
      "name": "newline-per-chained-call",
      "plugin": "eslint"
    },
    "no-alert": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `alert`, `confirm`, and `prompt`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-alert"
      },
      "name": "no-alert",
      "plugin": "eslint"
    },
    "no-array-constructor": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Array` constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-array-constructor"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "no-array-constructor",
      "plugin": "eslint"
    },
    "no-async-promise-executor": {
      "type": "problem",
      "docs": {
        "description": "Disallow using an async function as a Promise executor",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-async-promise-executor"
      },
      "fixable": null,
      "name": "no-async-promise-executor",
      "plugin": "eslint"
    },
    "no-await-in-loop": {
      "type": "problem",
      "docs": {
        "description": "Disallow `await` inside of loops",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-await-in-loop"
      },
      "name": "no-await-in-loop",
      "plugin": "eslint"
    },
    "no-bitwise": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "int32Hint": false
        }
      ],
      "docs": {
        "description": "Disallow bitwise operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-bitwise"
      },
      "name": "no-bitwise",
      "plugin": "eslint"
    },
    "no-buffer-constructor": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-deprecated-api",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-deprecated-api.md"
            }
          }
        ]
      },
      "type": "problem",
      "docs": {
        "description": "Disallow use of the `Buffer()` constructor",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-buffer-constructor"
      },
      "name": "no-buffer-constructor",
      "plugin": "eslint"
    },
    "no-caller": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `arguments.caller` or `arguments.callee`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-caller"
      },
      "name": "no-caller",
      "plugin": "eslint"
    },
    "no-case-declarations": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow lexical declarations in case clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-case-declarations"
      },
      "hasSuggestions": true,
      "name": "no-case-declarations",
      "plugin": "eslint"
    },
    "no-catch-shadow": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `catch` clause parameters from shadowing variables in the outer scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-catch-shadow"
      },
      "deprecated": {
        "message": "This rule was renamed.",
        "url": "https://eslint.org/blog/2018/07/eslint-v5.1.0-released/",
        "deprecatedSince": "5.1.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-shadow",
              "url": "https://eslint.org/docs/rules/no-shadow"
            }
          }
        ]
      },
      "name": "no-catch-shadow",
      "plugin": "eslint"
    },
    "no-class-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-class-assign"
      },
      "name": "no-class-assign",
      "plugin": "eslint"
    },
    "no-compare-neg-zero": {
      "type": "problem",
      "docs": {
        "description": "Disallow comparing against `-0`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-compare-neg-zero"
      },
      "fixable": null,
      "name": "no-compare-neg-zero",
      "plugin": "eslint"
    },
    "no-cond-assign": {
      "type": "problem",
      "defaultOptions": [
        "except-parens"
      ],
      "docs": {
        "description": "Disallow assignment operators in conditional expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-cond-assign"
      },
      "name": "no-cond-assign",
      "plugin": "eslint"
    },
    "no-confusing-arrow": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-confusing-arrow",
              "url": "https://eslint.style/rules/no-confusing-arrow"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow arrow functions where they could be confused with comparisons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-confusing-arrow"
      },
      "fixable": "code",
      "name": "no-confusing-arrow",
      "plugin": "eslint"
    },
    "no-console": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow the use of `console`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-console"
      },
      "hasSuggestions": true,
      "name": "no-console",
      "plugin": "eslint"
    },
    "no-const-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning `const`, `using`, and `await using` variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-const-assign"
      },
      "name": "no-const-assign",
      "plugin": "eslint"
    },
    "no-constant-binary-expression": {
      "type": "problem",
      "docs": {
        "description": "Disallow expressions where the operation doesn't affect the value",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-constant-binary-expression"
      },
      "name": "no-constant-binary-expression",
      "plugin": "eslint"
    },
    "no-constant-condition": {
      "type": "problem",
      "defaultOptions": [
        {
          "checkLoops": "allExceptWhileTrue"
        }
      ],
      "docs": {
        "description": "Disallow constant expressions in conditions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-constant-condition"
      },
      "name": "no-constant-condition",
      "plugin": "eslint"
    },
    "no-constructor-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning value from constructor",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-constructor-return"
      },
      "fixable": null,
      "name": "no-constructor-return",
      "plugin": "eslint"
    },
    "no-continue": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `continue` statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-continue"
      },
      "name": "no-continue",
      "plugin": "eslint"
    },
    "no-control-regex": {
      "type": "problem",
      "docs": {
        "description": "Disallow control characters in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-control-regex"
      },
      "name": "no-control-regex",
      "plugin": "eslint"
    },
    "no-debugger": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of `debugger`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-debugger"
      },
      "fixable": null,
      "name": "no-debugger",
      "plugin": "eslint"
    },
    "no-delete-var": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow deleting variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-delete-var"
      },
      "name": "no-delete-var",
      "plugin": "eslint"
    },
    "no-div-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow equal signs explicitly at the beginning of regular expressions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-div-regex"
      },
      "fixable": "code",
      "name": "no-div-regex",
      "plugin": "eslint"
    },
    "no-dupe-args": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate arguments in `function` definitions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-args"
      },
      "name": "no-dupe-args",
      "plugin": "eslint"
    },
    "no-dupe-class-members": {
      "type": "problem",
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow duplicate class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-class-members"
      },
      "name": "no-dupe-class-members",
      "plugin": "eslint"
    },
    "no-dupe-else-if": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate conditions in if-else-if chains",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-else-if"
      },
      "name": "no-dupe-else-if",
      "plugin": "eslint"
    },
    "no-dupe-keys": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate keys in object literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-dupe-keys"
      },
      "name": "no-dupe-keys",
      "plugin": "eslint"
    },
    "no-duplicate-case": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate case labels",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-duplicate-case"
      },
      "name": "no-duplicate-case",
      "plugin": "eslint"
    },
    "no-duplicate-imports": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "problem",
      "defaultOptions": [
        {
          "includeExports": false,
          "allowSeparateTypeImports": false
        }
      ],
      "docs": {
        "description": "Disallow duplicate module imports",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-duplicate-imports"
      },
      "name": "no-duplicate-imports",
      "plugin": "eslint"
    },
    "no-else-return": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowElseIf": true
        }
      ],
      "docs": {
        "description": "Disallow `else` blocks after `return` statements in `if` statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-else-return"
      },
      "fixable": "code",
      "name": "no-else-return",
      "plugin": "eslint"
    },
    "no-empty": {
      "hasSuggestions": true,
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowEmptyCatch": false
        }
      ],
      "docs": {
        "description": "Disallow empty block statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty"
      },
      "name": "no-empty",
      "plugin": "eslint"
    },
    "no-empty-character-class": {
      "type": "problem",
      "docs": {
        "description": "Disallow empty character classes in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-character-class"
      },
      "name": "no-empty-character-class",
      "plugin": "eslint"
    },
    "no-empty-function": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": []
        }
      ],
      "docs": {
        "description": "Disallow empty functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-empty-function"
      },
      "name": "no-empty-function",
      "plugin": "eslint"
    },
    "no-empty-pattern": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowObjectPatternsAsParameters": false
        }
      ],
      "docs": {
        "description": "Disallow empty destructuring patterns",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-pattern"
      },
      "name": "no-empty-pattern",
      "plugin": "eslint"
    },
    "no-empty-static-block": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty static blocks",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-empty-static-block"
      },
      "name": "no-empty-static-block",
      "plugin": "eslint"
    },
    "no-eq-null": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `null` comparisons without type-checking operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-eq-null"
      },
      "name": "no-eq-null",
      "plugin": "eslint"
    },
    "no-eval": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowIndirect": false
        }
      ],
      "docs": {
        "description": "Disallow the use of `eval()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-eval"
      },
      "name": "no-eval",
      "plugin": "eslint"
    },
    "no-ex-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning exceptions in `catch` clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-ex-assign"
      },
      "name": "no-ex-assign",
      "plugin": "eslint"
    },
    "no-extend-native": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptions": []
        }
      ],
      "docs": {
        "description": "Disallow extending native types",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extend-native"
      },
      "name": "no-extend-native",
      "plugin": "eslint"
    },
    "no-extra-bind": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary calls to `.bind()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-bind"
      },
      "fixable": "code",
      "name": "no-extra-bind",
      "plugin": "eslint"
    },
    "no-extra-boolean-cast": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow unnecessary boolean casts",
        "recommended": true,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-extra-boolean-cast"
      },
      "fixable": "code",
      "name": "no-extra-boolean-cast",
      "plugin": "eslint"
    },
    "no-extra-label": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary labels",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-extra-label"
      },
      "fixable": "code",
      "name": "no-extra-label",
      "plugin": "eslint"
    },
    "no-extra-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-extra-parens",
              "url": "https://eslint.style/rules/no-extra-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow unnecessary parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-parens"
      },
      "fixable": "code",
      "name": "no-extra-parens",
      "plugin": "eslint"
    },
    "no-extra-semi": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-extra-semi",
              "url": "https://eslint.style/rules/no-extra-semi"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-extra-semi"
      },
      "fixable": "code",
      "name": "no-extra-semi",
      "plugin": "eslint"
    },
    "no-fallthrough": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowEmptyCase": false,
          "reportUnusedFallthroughComment": false
        }
      ],
      "docs": {
        "description": "Disallow fallthrough of `case` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-fallthrough"
      },
      "name": "no-fallthrough",
      "plugin": "eslint"
    },
    "no-floating-decimal": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-floating-decimal",
              "url": "https://eslint.style/rules/no-floating-decimal"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow leading or trailing decimal points in numeric literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-floating-decimal"
      },
      "fixable": "code",
      "name": "no-floating-decimal",
      "plugin": "eslint"
    },
    "no-func-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow reassigning `function` declarations",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-func-assign"
      },
      "name": "no-func-assign",
      "plugin": "eslint"
    },
    "no-global-assign": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "exceptions": []
        }
      ],
      "docs": {
        "description": "Disallow assignments to native objects or read-only global variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-global-assign"
      },
      "name": "no-global-assign",
      "plugin": "eslint"
    },
    "no-implicit-coercion": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Disallow shorthand type conversions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-implicit-coercion"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "allow": [],
          "boolean": true,
          "disallowTemplateShorthand": false,
          "number": true,
          "string": true
        }
      ],
      "name": "no-implicit-coercion",
      "plugin": "eslint"
    },
    "no-implicit-globals": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "lexicalBindings": false
        }
      ],
      "docs": {
        "description": "Disallow declarations in the global scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-implicit-globals"
      },
      "name": "no-implicit-globals",
      "plugin": "eslint"
    },
    "no-implied-eval": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `eval()`-like methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-implied-eval"
      },
      "name": "no-implied-eval",
      "plugin": "eslint"
    },
    "no-import-assign": {
      "type": "problem",
      "docs": {
        "description": "Disallow assigning to imported bindings",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-import-assign"
      },
      "name": "no-import-assign",
      "plugin": "eslint"
    },
    "no-inline-comments": {
      "type": "suggestion",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow inline comments after code",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-inline-comments"
      },
      "name": "no-inline-comments",
      "plugin": "eslint"
    },
    "no-inner-declarations": {
      "type": "problem",
      "defaultOptions": [
        "functions",
        {
          "blockScopedFunctions": "allow"
        }
      ],
      "docs": {
        "description": "Disallow variable or `function` declarations in nested blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-inner-declarations"
      },
      "name": "no-inner-declarations",
      "plugin": "eslint"
    },
    "no-invalid-regexp": {
      "type": "problem",
      "defaultOptions": [
        {}
      ],
      "docs": {
        "description": "Disallow invalid regular expression strings in `RegExp` constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-invalid-regexp"
      },
      "name": "no-invalid-regexp",
      "plugin": "eslint"
    },
    "no-invalid-this": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "defaultOptions": [
        {
          "capIsConstructor": true
        }
      ],
      "docs": {
        "description": "Disallow use of `this` in contexts where the value of `this` is `undefined`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-invalid-this"
      },
      "name": "no-invalid-this",
      "plugin": "eslint"
    },
    "no-irregular-whitespace": {
      "type": "problem",
      "defaultOptions": [
        {
          "skipComments": false,
          "skipJSXText": false,
          "skipRegExps": false,
          "skipStrings": true,
          "skipTemplates": false
        }
      ],
      "docs": {
        "description": "Disallow irregular whitespace",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-irregular-whitespace"
      },
      "name": "no-irregular-whitespace",
      "plugin": "eslint"
    },
    "no-iterator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `__iterator__` property",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-iterator"
      },
      "name": "no-iterator",
      "plugin": "eslint"
    },
    "no-label-var": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow labels that share a name with a variable",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-label-var"
      },
      "name": "no-label-var",
      "plugin": "eslint"
    },
    "no-labels": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowLoop": false,
          "allowSwitch": false
        }
      ],
      "docs": {
        "description": "Disallow labeled statements",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-labels"
      },
      "name": "no-labels",
      "plugin": "eslint"
    },
    "no-lone-blocks": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary nested blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-lone-blocks"
      },
      "name": "no-lone-blocks",
      "plugin": "eslint"
    },
    "no-lonely-if": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `if` statements as the only statement in `else` blocks",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-lonely-if"
      },
      "fixable": "code",
      "name": "no-lonely-if",
      "plugin": "eslint"
    },
    "no-loop-func": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow function declarations that contain unsafe references inside loop statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-loop-func"
      },
      "name": "no-loop-func",
      "plugin": "eslint"
    },
    "no-loss-of-precision": {
      "type": "problem",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow literal numbers that lose precision",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-loss-of-precision"
      },
      "name": "no-loss-of-precision",
      "plugin": "eslint"
    },
    "no-magic-numbers": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow magic numbers",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-magic-numbers"
      },
      "name": "no-magic-numbers",
      "plugin": "eslint"
    },
    "no-misleading-character-class": {
      "type": "problem",
      "docs": {
        "description": "Disallow characters which are made with multiple code points in character class syntax",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-misleading-character-class"
      },
      "hasSuggestions": true,
      "name": "no-misleading-character-class",
      "plugin": "eslint"
    },
    "no-mixed-operators": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-mixed-operators",
              "url": "https://eslint.style/rules/no-mixed-operators"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow mixed binary operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-operators"
      },
      "name": "no-mixed-operators",
      "plugin": "eslint"
    },
    "no-mixed-requires": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-mixed-requires",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-mixed-requires.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow `require` calls to be mixed with regular variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-requires"
      },
      "name": "no-mixed-requires",
      "plugin": "eslint"
    },
    "no-mixed-spaces-and-tabs": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-mixed-spaces-and-tabs",
              "url": "https://eslint.style/rules/no-mixed-spaces-and-tabs"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow mixed spaces and tabs for indentation",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-mixed-spaces-and-tabs"
      },
      "name": "no-mixed-spaces-and-tabs",
      "plugin": "eslint"
    },
    "no-multi-assign": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreNonDeclaration": false
        }
      ],
      "docs": {
        "description": "Disallow use of chained assignment expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multi-assign"
      },
      "name": "no-multi-assign",
      "plugin": "eslint"
    },
    "no-multi-spaces": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-multi-spaces",
              "url": "https://eslint.style/rules/no-multi-spaces"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow multiple spaces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multi-spaces"
      },
      "fixable": "whitespace",
      "name": "no-multi-spaces",
      "plugin": "eslint"
    },
    "no-multi-str": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow multiline strings",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-multi-str"
      },
      "name": "no-multi-str",
      "plugin": "eslint"
    },
    "no-multiple-empty-lines": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-multiple-empty-lines",
              "url": "https://eslint.style/rules/no-multiple-empty-lines"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow multiple empty lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-multiple-empty-lines"
      },
      "fixable": "whitespace",
      "name": "no-multiple-empty-lines",
      "plugin": "eslint"
    },
    "no-native-reassign": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow assignments to native objects or read-only global variables",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-native-reassign"
      },
      "deprecated": {
        "message": "Renamed rule.",
        "url": "https://eslint.org/blog/2016/08/eslint-v3.3.0-released/#deprecated-rules",
        "deprecatedSince": "3.3.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-global-assign",
              "url": "https://eslint.org/docs/rules/no-global-assign"
            }
          }
        ]
      },
      "name": "no-native-reassign",
      "plugin": "eslint"
    },
    "no-negated-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow negated conditions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-negated-condition"
      },
      "name": "no-negated-condition",
      "plugin": "eslint"
    },
    "no-negated-in-lhs": {
      "type": "problem",
      "docs": {
        "description": "Disallow negating the left operand in `in` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-negated-in-lhs"
      },
      "deprecated": {
        "message": "Renamed rule.",
        "url": "https://eslint.org/blog/2016/08/eslint-v3.3.0-released/#deprecated-rules",
        "deprecatedSince": "3.3.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-unsafe-negation",
              "url": "https://eslint.org/docs/rules/no-unsafe-negation"
            }
          }
        ]
      },
      "name": "no-negated-in-lhs",
      "plugin": "eslint"
    },
    "no-nested-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested ternary expressions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-nested-ternary"
      },
      "name": "no-nested-ternary",
      "plugin": "eslint"
    },
    "no-new": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators outside of assignments or comparisons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new"
      },
      "name": "no-new",
      "plugin": "eslint"
    },
    "no-new-func": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with the `Function` object",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-func"
      },
      "name": "no-new-func",
      "plugin": "eslint"
    },
    "no-new-native-nonconstructor": {
      "type": "problem",
      "docs": {
        "description": "Disallow `new` operators with global non-constructor functions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"
      },
      "name": "no-new-native-nonconstructor",
      "plugin": "eslint"
    },
    "no-new-object": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Object` constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-object"
      },
      "deprecated": {
        "message": "The new rule flags more situations where object literal syntax can be used, and it does not report a problem when the `Object` constructor is invoked with an argument.",
        "url": "https://eslint.org/blog/2023/09/eslint-v8.50.0-released/",
        "deprecatedSince": "8.50.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-object-constructor",
              "url": "https://eslint.org/docs/rules/no-object-constructor"
            }
          }
        ]
      },
      "name": "no-new-object",
      "plugin": "eslint"
    },
    "no-new-require": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-new-require",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-new-require.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with calls to `require`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-require"
      },
      "name": "no-new-require",
      "plugin": "eslint"
    },
    "no-new-symbol": {
      "type": "problem",
      "docs": {
        "description": "Disallow `new` operators with the `Symbol` object",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-symbol"
      },
      "deprecated": {
        "message": "The rule was replaced with a more general rule.",
        "url": "https://eslint.org/docs/latest/use/migrate-to-9.0.0#eslint-recommended",
        "deprecatedSince": "9.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "rule": {
              "name": "no-new-native-nonconstructor",
              "url": "https://eslint.org/docs/latest/rules/no-new-native-nonconstructor"
            }
          }
        ]
      },
      "name": "no-new-symbol",
      "plugin": "eslint"
    },
    "no-new-wrappers": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new` operators with the `String`, `Number`, and `Boolean` objects",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-new-wrappers"
      },
      "name": "no-new-wrappers",
      "plugin": "eslint"
    },
    "no-nonoctal-decimal-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `\\8` and `\\9` escape sequences in string literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape"
      },
      "hasSuggestions": true,
      "name": "no-nonoctal-decimal-escape",
      "plugin": "eslint"
    },
    "no-obj-calls": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling global object properties as functions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-obj-calls"
      },
      "name": "no-obj-calls",
      "plugin": "eslint"
    },
    "no-object-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow calls to the `Object` constructor without an argument",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-object-constructor"
      },
      "hasSuggestions": true,
      "name": "no-object-constructor",
      "plugin": "eslint"
    },
    "no-octal": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow octal literals",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-octal"
      },
      "name": "no-octal",
      "plugin": "eslint"
    },
    "no-octal-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow octal escape sequences in string literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-octal-escape"
      },
      "name": "no-octal-escape",
      "plugin": "eslint"
    },
    "no-param-reassign": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow reassigning function parameters",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-param-reassign"
      },
      "name": "no-param-reassign",
      "plugin": "eslint"
    },
    "no-path-concat": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-path-concat",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-path-concat.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow string concatenation with `__dirname` and `__filename`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-path-concat"
      },
      "name": "no-path-concat",
      "plugin": "eslint"
    },
    "no-plusplus": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowForLoopAfterthoughts": false
        }
      ],
      "docs": {
        "description": "Disallow the unary operators `++` and `--`",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-plusplus"
      },
      "name": "no-plusplus",
      "plugin": "eslint"
    },
    "no-process-env": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-process-env",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-process-env.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `process.env`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-process-env"
      },
      "name": "no-process-env",
      "plugin": "eslint"
    },
    "no-process-exit": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-process-exit",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-process-exit.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `process.exit()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-process-exit"
      },
      "name": "no-process-exit",
      "plugin": "eslint"
    },
    "no-promise-executor-return": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowVoid": false
        }
      ],
      "docs": {
        "description": "Disallow returning values from Promise executor functions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-promise-executor-return"
      },
      "hasSuggestions": true,
      "name": "no-promise-executor-return",
      "plugin": "eslint"
    },
    "no-proto": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `__proto__` property",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-proto"
      },
      "name": "no-proto",
      "plugin": "eslint"
    },
    "no-prototype-builtins": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling some `Object.prototype` methods directly on objects",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-prototype-builtins"
      },
      "hasSuggestions": true,
      "name": "no-prototype-builtins",
      "plugin": "eslint"
    },
    "no-redeclare": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "builtinGlobals": true
        }
      ],
      "docs": {
        "description": "Disallow variable redeclaration",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-redeclare"
      },
      "name": "no-redeclare",
      "plugin": "eslint"
    },
    "no-regex-spaces": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow multiple spaces in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-regex-spaces"
      },
      "fixable": "code",
      "name": "no-regex-spaces",
      "plugin": "eslint"
    },
    "no-restricted-exports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified names in exports",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-exports"
      },
      "name": "no-restricted-exports",
      "plugin": "eslint"
    },
    "no-restricted-globals": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified global variables",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-globals"
      },
      "name": "no-restricted-globals",
      "plugin": "eslint"
    },
    "no-restricted-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `import`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-imports"
      },
      "name": "no-restricted-imports",
      "plugin": "eslint"
    },
    "no-restricted-modules": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-restricted-require",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-restricted-require.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `require`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-modules"
      },
      "name": "no-restricted-modules",
      "plugin": "eslint"
    },
    "no-restricted-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain properties on certain objects",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-properties"
      },
      "name": "no-restricted-properties",
      "plugin": "eslint"
    },
    "no-restricted-syntax": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified syntax",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-restricted-syntax"
      },
      "name": "no-restricted-syntax",
      "plugin": "eslint"
    },
    "no-return-assign": {
      "type": "suggestion",
      "defaultOptions": [
        "except-parens"
      ],
      "docs": {
        "description": "Disallow assignment operators in `return` statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-return-assign"
      },
      "name": "no-return-assign",
      "plugin": "eslint"
    },
    "no-return-await": {
      "hasSuggestions": true,
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `return await`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-return-await"
      },
      "fixable": null,
      "deprecated": {
        "message": "The original assumption of the rule no longer holds true because of engine optimization.",
        "deprecatedSince": "8.46.0",
        "availableUntil": null,
        "replacedBy": []
      },
      "name": "no-return-await",
      "plugin": "eslint"
    },
    "no-script-url": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `javascript:` URLs",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-script-url"
      },
      "name": "no-script-url",
      "plugin": "eslint"
    },
    "no-self-assign": {
      "type": "problem",
      "defaultOptions": [
        {
          "props": true
        }
      ],
      "docs": {
        "description": "Disallow assignments where both sides are exactly the same",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-self-assign"
      },
      "name": "no-self-assign",
      "plugin": "eslint"
    },
    "no-self-compare": {
      "type": "problem",
      "docs": {
        "description": "Disallow comparisons where both sides are exactly the same",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-self-compare"
      },
      "name": "no-self-compare",
      "plugin": "eslint"
    },
    "no-sequences": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comma operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-sequences"
      },
      "defaultOptions": [
        {
          "allowInParentheses": true
        }
      ],
      "name": "no-sequences",
      "plugin": "eslint"
    },
    "no-setter-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning values from setters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-setter-return"
      },
      "name": "no-setter-return",
      "plugin": "eslint"
    },
    "no-shadow": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "defaultOptions": [
        {
          "allow": [],
          "builtinGlobals": false,
          "hoist": "functions",
          "ignoreOnInitialization": false,
          "ignoreTypeValueShadow": true,
          "ignoreFunctionTypeParameterNameValueShadow": true
        }
      ],
      "docs": {
        "description": "Disallow variable declarations from shadowing variables declared in the outer scope",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-shadow"
      },
      "name": "no-shadow",
      "plugin": "eslint"
    },
    "no-shadow-restricted-names": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "reportGlobalThis": false
        }
      ],
      "docs": {
        "description": "Disallow identifiers from shadowing restricted names",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-shadow-restricted-names"
      },
      "name": "no-shadow-restricted-names",
      "plugin": "eslint"
    },
    "no-spaced-func": {
      "type": "layout",
      "docs": {
        "description": "Disallow spacing between function identifiers and their applications (deprecated)",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-spaced-func"
      },
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2016/08/eslint-v3.3.0-released/#deprecated-rules",
        "deprecatedSince": "3.3.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "function-call-spacing",
              "url": "https://eslint.style/rules/function-call-spacing"
            }
          }
        ]
      },
      "fixable": "whitespace",
      "name": "no-spaced-func",
      "plugin": "eslint"
    },
    "no-sparse-arrays": {
      "type": "problem",
      "docs": {
        "description": "Disallow sparse arrays",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-sparse-arrays"
      },
      "name": "no-sparse-arrays",
      "plugin": "eslint"
    },
    "no-sync": {
      "deprecated": {
        "message": "Node.js rules were moved out of ESLint core.",
        "url": "https://eslint.org/docs/latest/use/migrating-to-7.0.0#deprecate-node-rules",
        "deprecatedSince": "7.0.0",
        "availableUntil": null,
        "replacedBy": [
          {
            "message": "eslint-plugin-n now maintains deprecated Node.js-related rules.",
            "plugin": {
              "name": "eslint-plugin-n",
              "url": "https://github.com/eslint-community/eslint-plugin-n"
            },
            "rule": {
              "name": "no-sync",
              "url": "https://github.com/eslint-community/eslint-plugin-n/tree/master/docs/rules/no-sync.md"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Disallow synchronous methods",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-sync"
      },
      "name": "no-sync",
      "plugin": "eslint"
    },
    "no-tabs": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-tabs",
              "url": "https://eslint.style/rules/no-tabs"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow all tabs",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-tabs"
      },
      "name": "no-tabs",
      "plugin": "eslint"
    },
    "no-template-curly-in-string": {
      "type": "problem",
      "docs": {
        "description": "Disallow template literal placeholder syntax in regular strings",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-template-curly-in-string"
      },
      "name": "no-template-curly-in-string",
      "plugin": "eslint"
    },
    "no-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow ternary operators",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-ternary"
      },
      "name": "no-ternary",
      "plugin": "eslint"
    },
    "no-this-before-super": {
      "type": "problem",
      "docs": {
        "description": "Disallow `this`/`super` before calling `super()` in constructors",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-this-before-super"
      },
      "name": "no-this-before-super",
      "plugin": "eslint"
    },
    "no-throw-literal": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow throwing literals as exceptions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-throw-literal"
      },
      "name": "no-throw-literal",
      "plugin": "eslint"
    },
    "no-trailing-spaces": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-trailing-spaces",
              "url": "https://eslint.style/rules/no-trailing-spaces"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow trailing whitespace at the end of lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-trailing-spaces"
      },
      "fixable": "whitespace",
      "name": "no-trailing-spaces",
      "plugin": "eslint"
    },
    "no-unassigned-vars": {
      "type": "problem",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Disallow `let` or `var` variables that are read but never assigned",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unassigned-vars"
      },
      "name": "no-unassigned-vars",
      "plugin": "eslint"
    },
    "no-undef": {
      "type": "problem",
      "defaultOptions": [
        {
          "typeof": false
        }
      ],
      "docs": {
        "description": "Disallow the use of undeclared variables unless mentioned in `/*global */` comments",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-undef"
      },
      "name": "no-undef",
      "plugin": "eslint"
    },
    "no-undef-init": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow initializing variables to `undefined`",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-undef-init"
      },
      "fixable": "code",
      "name": "no-undef-init",
      "plugin": "eslint"
    },
    "no-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `undefined` as an identifier",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-undefined"
      },
      "name": "no-undefined",
      "plugin": "eslint"
    },
    "no-underscore-dangle": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": [],
          "allowAfterSuper": false,
          "allowAfterThis": false,
          "allowAfterThisConstructor": false,
          "allowFunctionParams": true,
          "allowInArrayDestructuring": true,
          "allowInObjectDestructuring": true,
          "enforceInClassFields": false,
          "enforceInMethodNames": false
        }
      ],
      "docs": {
        "description": "Disallow dangling underscores in identifiers",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-underscore-dangle"
      },
      "name": "no-underscore-dangle",
      "plugin": "eslint"
    },
    "no-unexpected-multiline": {
      "type": "problem",
      "docs": {
        "description": "Disallow confusing multiline expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unexpected-multiline"
      },
      "name": "no-unexpected-multiline",
      "plugin": "eslint"
    },
    "no-unmodified-loop-condition": {
      "type": "problem",
      "docs": {
        "description": "Disallow unmodified loop conditions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unmodified-loop-condition"
      },
      "name": "no-unmodified-loop-condition",
      "plugin": "eslint"
    },
    "no-unneeded-ternary": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "defaultAssignment": true
        }
      ],
      "docs": {
        "description": "Disallow ternary operators when simpler alternatives exist",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-unneeded-ternary"
      },
      "fixable": "code",
      "name": "no-unneeded-ternary",
      "plugin": "eslint"
    },
    "no-unreachable": {
      "type": "problem",
      "docs": {
        "description": "Disallow unreachable code after `return`, `throw`, `continue`, and `break` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unreachable"
      },
      "name": "no-unreachable",
      "plugin": "eslint"
    },
    "no-unreachable-loop": {
      "type": "problem",
      "defaultOptions": [
        {
          "ignore": []
        }
      ],
      "docs": {
        "description": "Disallow loops with a body that allows only one iteration",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unreachable-loop"
      },
      "name": "no-unreachable-loop",
      "plugin": "eslint"
    },
    "no-unsafe-finally": {
      "type": "problem",
      "docs": {
        "description": "Disallow control flow statements in `finally` blocks",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-finally"
      },
      "name": "no-unsafe-finally",
      "plugin": "eslint"
    },
    "no-unsafe-negation": {
      "type": "problem",
      "defaultOptions": [
        {
          "enforceForOrderingRelations": false
        }
      ],
      "docs": {
        "description": "Disallow negating the left operand of relational operators",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-negation"
      },
      "hasSuggestions": true,
      "fixable": null,
      "name": "no-unsafe-negation",
      "plugin": "eslint"
    },
    "no-unsafe-optional-chaining": {
      "type": "problem",
      "defaultOptions": [
        {
          "disallowArithmeticOperators": false
        }
      ],
      "docs": {
        "description": "Disallow use of optional chaining in contexts where the `undefined` value is not allowed",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining"
      },
      "fixable": null,
      "name": "no-unsafe-optional-chaining",
      "plugin": "eslint"
    },
    "no-unused-expressions": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-unused-expressions"
      },
      "defaultOptions": [
        {
          "allowShortCircuit": false,
          "allowTernary": false,
          "allowTaggedTemplates": false,
          "enforceForJSX": false,
          "ignoreDirectives": false
        }
      ],
      "name": "no-unused-expressions",
      "plugin": "eslint"
    },
    "no-unused-labels": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused labels",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-labels"
      },
      "fixable": "code",
      "name": "no-unused-labels",
      "plugin": "eslint"
    },
    "no-unused-private-class-members": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused private class members",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-private-class-members"
      },
      "name": "no-unused-private-class-members",
      "plugin": "eslint"
    },
    "no-unused-vars": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused variables",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-unused-vars"
      },
      "hasSuggestions": true,
      "name": "no-unused-vars",
      "plugin": "eslint"
    },
    "no-use-before-define": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "problem",
      "docs": {
        "description": "Disallow the use of variables before they are defined",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-use-before-define"
      },
      "defaultOptions": [
        {
          "classes": true,
          "functions": true,
          "variables": true,
          "allowNamedExports": false,
          "enums": true,
          "typedefs": true,
          "ignoreTypeReferences": true
        }
      ],
      "name": "no-use-before-define",
      "plugin": "eslint"
    },
    "no-useless-assignment": {
      "type": "problem",
      "docs": {
        "description": "Disallow variable assignments when the value is not used",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-assignment"
      },
      "name": "no-useless-assignment",
      "plugin": "eslint"
    },
    "no-useless-backreference": {
      "type": "problem",
      "docs": {
        "description": "Disallow useless backreferences in regular expressions",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-backreference"
      },
      "name": "no-useless-backreference",
      "plugin": "eslint"
    },
    "no-useless-call": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary calls to `.call()` and `.apply()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-call"
      },
      "name": "no-useless-call",
      "plugin": "eslint"
    },
    "no-useless-catch": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `catch` clauses",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-catch"
      },
      "name": "no-useless-catch",
      "plugin": "eslint"
    },
    "no-useless-computed-key": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "enforceForClassMembers": true
        }
      ],
      "docs": {
        "description": "Disallow unnecessary computed property keys in objects and classes",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-computed-key"
      },
      "fixable": "code",
      "name": "no-useless-computed-key",
      "plugin": "eslint"
    },
    "no-useless-concat": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary concatenation of literals or template literals",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-concat"
      },
      "name": "no-useless-concat",
      "plugin": "eslint"
    },
    "no-useless-constructor": {
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary constructors",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-constructor"
      },
      "hasSuggestions": true,
      "name": "no-useless-constructor",
      "plugin": "eslint"
    },
    "no-useless-escape": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowRegexCharacters": []
        }
      ],
      "docs": {
        "description": "Disallow unnecessary escape characters",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-useless-escape"
      },
      "hasSuggestions": true,
      "name": "no-useless-escape",
      "plugin": "eslint"
    },
    "no-useless-rename": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreDestructuring": false,
          "ignoreImport": false,
          "ignoreExport": false
        }
      ],
      "docs": {
        "description": "Disallow renaming import, export, and destructured assignments to the same name",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-rename"
      },
      "fixable": "code",
      "name": "no-useless-rename",
      "plugin": "eslint"
    },
    "no-useless-return": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow redundant return statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-useless-return"
      },
      "fixable": "code",
      "name": "no-useless-return",
      "plugin": "eslint"
    },
    "no-var": {
      "type": "suggestion",
      "dialects": [
        "typescript",
        "javascript"
      ],
      "language": "javascript",
      "docs": {
        "description": "Require `let` or `const` instead of `var`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-var"
      },
      "fixable": "code",
      "name": "no-var",
      "plugin": "eslint"
    },
    "no-void": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowAsStatement": false
        }
      ],
      "docs": {
        "description": "Disallow `void` operators",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-void"
      },
      "name": "no-void",
      "plugin": "eslint"
    },
    "no-warning-comments": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "location": "start",
          "terms": [
            "todo",
            "fixme",
            "xxx"
          ]
        }
      ],
      "docs": {
        "description": "Disallow specified warning terms in comments",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/no-warning-comments"
      },
      "name": "no-warning-comments",
      "plugin": "eslint"
    },
    "no-whitespace-before-property": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "no-whitespace-before-property",
              "url": "https://eslint.style/rules/no-whitespace-before-property"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Disallow whitespace before properties",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/no-whitespace-before-property"
      },
      "fixable": "whitespace",
      "name": "no-whitespace-before-property",
      "plugin": "eslint"
    },
    "no-with": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `with` statements",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/no-with"
      },
      "name": "no-with",
      "plugin": "eslint"
    },
    "nonblock-statement-body-position": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "nonblock-statement-body-position",
              "url": "https://eslint.style/rules/nonblock-statement-body-position"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the location of single-line statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/nonblock-statement-body-position"
      },
      "fixable": "whitespace",
      "name": "nonblock-statement-body-position",
      "plugin": "eslint"
    },
    "object-curly-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "object-curly-newline",
              "url": "https://eslint.style/rules/object-curly-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks after opening and before closing braces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-curly-newline"
      },
      "fixable": "whitespace",
      "name": "object-curly-newline",
      "plugin": "eslint"
    },
    "object-curly-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "object-curly-spacing",
              "url": "https://eslint.style/rules/object-curly-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside braces",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "object-curly-spacing",
      "plugin": "eslint"
    },
    "object-property-newline": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "object-property-newline",
              "url": "https://eslint.style/rules/object-property-newline"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce placing object properties on separate lines",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/object-property-newline"
      },
      "fixable": "whitespace",
      "name": "object-property-newline",
      "plugin": "eslint"
    },
    "object-shorthand": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow method and property shorthand syntax for object literals",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/object-shorthand"
      },
      "fixable": "code",
      "name": "object-shorthand",
      "plugin": "eslint"
    },
    "one-var": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce variables to be declared either together or separately in functions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/one-var"
      },
      "fixable": "code",
      "name": "one-var",
      "plugin": "eslint"
    },
    "one-var-declaration-per-line": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "one-var-declaration-per-line",
              "url": "https://eslint.style/rules/one-var-declaration-per-line"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow newlines around variable declarations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/one-var-declaration-per-line"
      },
      "fixable": "whitespace",
      "name": "one-var-declaration-per-line",
      "plugin": "eslint"
    },
    "operator-assignment": {
      "type": "suggestion",
      "defaultOptions": [
        "always"
      ],
      "docs": {
        "description": "Require or disallow assignment operator shorthand where possible",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/operator-assignment"
      },
      "fixable": "code",
      "name": "operator-assignment",
      "plugin": "eslint"
    },
    "operator-linebreak": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "operator-linebreak",
              "url": "https://eslint.style/rules/operator-linebreak"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style for operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/operator-linebreak"
      },
      "fixable": "code",
      "name": "operator-linebreak",
      "plugin": "eslint"
    },
    "padded-blocks": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padded-blocks",
              "url": "https://eslint.style/rules/padded-blocks"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding within blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/padded-blocks"
      },
      "fixable": "whitespace",
      "name": "padded-blocks",
      "plugin": "eslint"
    },
    "padding-line-between-statements": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "padding-line-between-statements",
              "url": "https://eslint.style/rules/padding-line-between-statements"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding lines between statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/padding-line-between-statements"
      },
      "fixable": "whitespace",
      "name": "padding-line-between-statements",
      "plugin": "eslint"
    },
    "prefer-arrow-callback": {
      "type": "suggestion",
      "dialects": [
        "javascript",
        "typescript"
      ],
      "language": "javascript",
      "defaultOptions": [
        {
          "allowNamedFunctions": false,
          "allowUnboundThis": true
        }
      ],
      "docs": {
        "description": "Require using arrow functions for callbacks",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-arrow-callback"
      },
      "fixable": "code",
      "name": "prefer-arrow-callback",
      "plugin": "eslint"
    },
    "prefer-const": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "destructuring": "any",
          "ignoreReadBeforeAssign": false
        }
      ],
      "docs": {
        "description": "Require `const` declarations for variables that are never reassigned after declared",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-const"
      },
      "fixable": "code",
      "name": "prefer-const",
      "plugin": "eslint"
    },
    "prefer-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Require destructuring from arrays and/or objects",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-destructuring"
      },
      "fixable": "code",
      "name": "prefer-destructuring",
      "plugin": "eslint"
    },
    "prefer-exponentiation-operator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `Math.pow` in favor of the `**` operator",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-exponentiation-operator"
      },
      "fixable": "code",
      "name": "prefer-exponentiation-operator",
      "plugin": "eslint"
    },
    "prefer-named-capture-group": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using named capture group in regular expression",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-named-capture-group"
      },
      "hasSuggestions": true,
      "name": "prefer-named-capture-group",
      "plugin": "eslint"
    },
    "prefer-numeric-literals": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-numeric-literals"
      },
      "fixable": "code",
      "name": "prefer-numeric-literals",
      "plugin": "eslint"
    },
    "prefer-object-has-own": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow use of `Object.prototype.hasOwnProperty.call()` and prefer use of `Object.hasOwn()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-object-has-own"
      },
      "fixable": "code",
      "name": "prefer-object-has-own",
      "plugin": "eslint"
    },
    "prefer-object-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-object-spread"
      },
      "fixable": "code",
      "name": "prefer-object-spread",
      "plugin": "eslint"
    },
    "prefer-promise-reject-errors": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowEmptyReject": false
        }
      ],
      "docs": {
        "description": "Require using Error objects as Promise rejection reasons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-promise-reject-errors"
      },
      "fixable": null,
      "name": "prefer-promise-reject-errors",
      "plugin": "eslint"
    },
    "prefer-reflect": {
      "type": "suggestion",
      "docs": {
        "description": "Require `Reflect` methods where applicable",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-reflect"
      },
      "deprecated": {
        "message": "The original intention of this rule was misguided.",
        "deprecatedSince": "3.9.0",
        "availableUntil": null,
        "replacedBy": []
      },
      "name": "prefer-reflect",
      "plugin": "eslint"
    },
    "prefer-regex-literals": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "disallowRedundantWrapping": false
        }
      ],
      "docs": {
        "description": "Disallow use of the `RegExp` constructor in favor of regular expression literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-regex-literals"
      },
      "hasSuggestions": true,
      "name": "prefer-regex-literals",
      "plugin": "eslint"
    },
    "prefer-rest-params": {
      "type": "suggestion",
      "docs": {
        "description": "Require rest parameters instead of `arguments`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/prefer-rest-params"
      },
      "name": "prefer-rest-params",
      "plugin": "eslint"
    },
    "prefer-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Require spread operators instead of `.apply()`",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-spread"
      },
      "fixable": null,
      "name": "prefer-spread",
      "plugin": "eslint"
    },
    "prefer-template": {
      "type": "suggestion",
      "docs": {
        "description": "Require template literals instead of string concatenation",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/prefer-template"
      },
      "fixable": "code",
      "name": "prefer-template",
      "plugin": "eslint"
    },
    "quote-props": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "quote-props",
              "url": "https://eslint.style/rules/quote-props"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Require quotes around object literal property names",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/quote-props"
      },
      "fixable": "code",
      "name": "quote-props",
      "plugin": "eslint"
    },
    "quotes": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "quotes",
              "url": "https://eslint.style/rules/quotes"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either backticks, double, or single quotes",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/quotes"
      },
      "fixable": "code",
      "name": "quotes",
      "plugin": "eslint"
    },
    "radix": {
      "type": "suggestion",
      "defaultOptions": [
        "always"
      ],
      "docs": {
        "description": "Enforce the consistent use of the radix argument when using `parseInt()`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/radix"
      },
      "hasSuggestions": true,
      "name": "radix",
      "plugin": "eslint"
    },
    "require-atomic-updates": {
      "type": "problem",
      "defaultOptions": [
        {
          "allowProperties": false
        }
      ],
      "docs": {
        "description": "Disallow assignments that can lead to race conditions due to usage of `await` or `yield`",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-atomic-updates"
      },
      "fixable": null,
      "name": "require-atomic-updates",
      "plugin": "eslint"
    },
    "require-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow async functions which have no `await` expression",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-await"
      },
      "hasSuggestions": true,
      "name": "require-await",
      "plugin": "eslint"
    },
    "require-unicode-regexp": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `u` or `v` flag on regular expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/require-unicode-regexp"
      },
      "hasSuggestions": true,
      "name": "require-unicode-regexp",
      "plugin": "eslint"
    },
    "require-yield": {
      "type": "suggestion",
      "docs": {
        "description": "Require generator functions to contain `yield`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/require-yield"
      },
      "name": "require-yield",
      "plugin": "eslint"
    },
    "rest-spread-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "rest-spread-spacing",
              "url": "https://eslint.style/rules/rest-spread-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce spacing between rest and spread operators and their expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/rest-spread-spacing"
      },
      "fixable": "whitespace",
      "name": "rest-spread-spacing",
      "plugin": "eslint"
    },
    "semi": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "semi",
              "url": "https://eslint.style/rules/semi"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow semicolons instead of ASI",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi"
      },
      "fixable": "code",
      "name": "semi",
      "plugin": "eslint"
    },
    "semi-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "semi-spacing",
              "url": "https://eslint.style/rules/semi-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi-spacing"
      },
      "fixable": "whitespace",
      "name": "semi-spacing",
      "plugin": "eslint"
    },
    "semi-style": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "semi-style",
              "url": "https://eslint.style/rules/semi-style"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce location of semicolons",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/semi-style"
      },
      "fixable": "whitespace",
      "name": "semi-style",
      "plugin": "eslint"
    },
    "sort-imports": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowSeparatedGroups": false,
          "ignoreCase": false,
          "ignoreDeclarationSort": false,
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": [
            "none",
            "all",
            "multiple",
            "single"
          ]
        }
      ],
      "docs": {
        "description": "Enforce sorted `import` declarations within modules",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/sort-imports"
      },
      "fixable": "code",
      "name": "sort-imports",
      "plugin": "eslint"
    },
    "sort-keys": {
      "type": "suggestion",
      "defaultOptions": [
        "asc",
        {
          "allowLineSeparatedGroups": false,
          "caseSensitive": true,
          "ignoreComputedKeys": false,
          "minKeys": 2,
          "natural": false
        }
      ],
      "docs": {
        "description": "Require object keys to be sorted",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/sort-keys"
      },
      "name": "sort-keys",
      "plugin": "eslint"
    },
    "sort-vars": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "ignoreCase": false
        }
      ],
      "docs": {
        "description": "Require variables within the same declaration block to be sorted",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/sort-vars"
      },
      "fixable": "code",
      "name": "sort-vars",
      "plugin": "eslint"
    },
    "space-before-blocks": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-before-blocks",
              "url": "https://eslint.style/rules/space-before-blocks"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before blocks",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-before-blocks"
      },
      "fixable": "whitespace",
      "name": "space-before-blocks",
      "plugin": "eslint"
    },
    "space-before-function-paren": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-before-function-paren",
              "url": "https://eslint.style/rules/space-before-function-paren"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before `function` definition opening parenthesis",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-before-function-paren"
      },
      "fixable": "whitespace",
      "name": "space-before-function-paren",
      "plugin": "eslint"
    },
    "space-in-parens": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-in-parens",
              "url": "https://eslint.style/rules/space-in-parens"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside parentheses",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-in-parens"
      },
      "fixable": "whitespace",
      "name": "space-in-parens",
      "plugin": "eslint"
    },
    "space-infix-ops": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-infix-ops",
              "url": "https://eslint.style/rules/space-infix-ops"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require spacing around infix operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-infix-ops"
      },
      "fixable": "whitespace",
      "name": "space-infix-ops",
      "plugin": "eslint"
    },
    "space-unary-ops": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "space-unary-ops",
              "url": "https://eslint.style/rules/space-unary-ops"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before or after unary operators",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/space-unary-ops"
      },
      "fixable": "whitespace",
      "name": "space-unary-ops",
      "plugin": "eslint"
    },
    "spaced-comment": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "spaced-comment",
              "url": "https://eslint.style/rules/spaced-comment"
            }
          }
        ]
      },
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent spacing after the `//` or `/*` in a comment",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/spaced-comment"
      },
      "fixable": "whitespace",
      "name": "spaced-comment",
      "plugin": "eslint"
    },
    "strict": {
      "type": "suggestion",
      "defaultOptions": [
        "safe"
      ],
      "docs": {
        "description": "Require or disallow strict mode directives",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/strict"
      },
      "fixable": "code",
      "name": "strict",
      "plugin": "eslint"
    },
    "switch-colon-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "switch-colon-spacing",
              "url": "https://eslint.style/rules/switch-colon-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Enforce spacing around colons of switch statements",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/switch-colon-spacing"
      },
      "fixable": "whitespace",
      "name": "switch-colon-spacing",
      "plugin": "eslint"
    },
    "symbol-description": {
      "type": "suggestion",
      "docs": {
        "description": "Require symbol descriptions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/symbol-description"
      },
      "fixable": null,
      "name": "symbol-description",
      "plugin": "eslint"
    },
    "template-curly-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "template-curly-spacing",
              "url": "https://eslint.style/rules/template-curly-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around embedded expressions of template strings",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/template-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "template-curly-spacing",
      "plugin": "eslint"
    },
    "template-tag-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "template-tag-spacing",
              "url": "https://eslint.style/rules/template-tag-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between template tags and their literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/template-tag-spacing"
      },
      "fixable": "whitespace",
      "name": "template-tag-spacing",
      "plugin": "eslint"
    },
    "unicode-bom": {
      "type": "layout",
      "defaultOptions": [
        "never"
      ],
      "docs": {
        "description": "Require or disallow Unicode byte order mark (BOM)",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/unicode-bom"
      },
      "fixable": "whitespace",
      "name": "unicode-bom",
      "plugin": "eslint"
    },
    "use-isnan": {
      "hasSuggestions": true,
      "type": "problem",
      "docs": {
        "description": "Require calls to `isNaN()` when checking for `NaN`",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/use-isnan"
      },
      "defaultOptions": [
        {
          "enforceForIndexOf": false,
          "enforceForSwitchCase": true
        }
      ],
      "name": "use-isnan",
      "plugin": "eslint"
    },
    "valid-typeof": {
      "type": "problem",
      "defaultOptions": [
        {
          "requireStringLiterals": false
        }
      ],
      "docs": {
        "description": "Enforce comparing `typeof` expressions against valid strings",
        "recommended": true,
        "url": "https://eslint.org/docs/latest/rules/valid-typeof"
      },
      "hasSuggestions": true,
      "name": "valid-typeof",
      "plugin": "eslint"
    },
    "vars-on-top": {
      "type": "suggestion",
      "docs": {
        "description": "Require `var` declarations be placed at the top of their containing scope",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/vars-on-top"
      },
      "name": "vars-on-top",
      "plugin": "eslint"
    },
    "wrap-iife": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "wrap-iife",
              "url": "https://eslint.style/rules/wrap-iife"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require parentheses around immediate `function` invocations",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/wrap-iife"
      },
      "fixable": "code",
      "name": "wrap-iife",
      "plugin": "eslint"
    },
    "wrap-regex": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "wrap-regex",
              "url": "https://eslint.style/rules/wrap-regex"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require parenthesis around regex literals",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/wrap-regex"
      },
      "fixable": "code",
      "name": "wrap-regex",
      "plugin": "eslint"
    },
    "yield-star-spacing": {
      "deprecated": {
        "message": "Formatting rules are being moved out of ESLint core.",
        "url": "https://eslint.org/blog/2023/10/deprecating-formatting-rules/",
        "deprecatedSince": "8.53.0",
        "availableUntil": "10.0.0",
        "replacedBy": [
          {
            "message": "ESLint Stylistic now maintains deprecated stylistic core rules.",
            "url": "https://eslint.style/guide/migration",
            "plugin": {
              "name": "@stylistic/eslint-plugin",
              "url": "https://eslint.style"
            },
            "rule": {
              "name": "yield-star-spacing",
              "url": "https://eslint.style/rules/yield-star-spacing"
            }
          }
        ]
      },
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around the `*` in `yield*` expressions",
        "recommended": false,
        "url": "https://eslint.org/docs/latest/rules/yield-star-spacing"
      },
      "fixable": "whitespace",
      "name": "yield-star-spacing",
      "plugin": "eslint"
    },
    "yoda": {
      "type": "suggestion",
      "defaultOptions": [
        "never",
        {
          "exceptRange": false,
          "onlyEquality": false
        }
      ],
      "docs": {
        "description": "Require or disallow \"Yoda\" conditions",
        "recommended": false,
        "frozen": true,
        "url": "https://eslint.org/docs/latest/rules/yoda"
      },
      "fixable": "code",
      "name": "yoda",
      "plugin": "eslint"
    },
    "ascii/valid-name": {
      "type": "problem",
      "docs": {
        "description": "ESLint plugin to detect non-ascii characters in JavaScript source code."
      },
      "fixable": "code",
      "name": "ascii/valid-name",
      "plugin": "ascii"
    },
    "clsx/forbid-array-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "forbid usage of array expressions inside clsx",
        "recommended": true,
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/forbid-array-expressions.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/forbid-array-expressions.md",
      "name": "clsx/forbid-array-expressions",
      "plugin": "clsx"
    },
    "clsx/forbid-false-inside-object-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "forbid usage of false literal inside object expressions of clsx",
        "recommended": true,
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/forbid-false-inside-object-expressions.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/forbid-false-inside-object-expressions.md",
      "name": "clsx/forbid-false-inside-object-expressions",
      "plugin": "clsx"
    },
    "clsx/forbid-true-inside-object-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "forbid usage of true literal inside object expressions of clsx",
        "recommended": true,
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/forbid-true-inside-object-expressions.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/forbid-true-inside-object-expressions.md",
      "name": "clsx/forbid-true-inside-object-expressions",
      "plugin": "clsx"
    },
    "clsx/no-redundant-clsx": {
      "type": "suggestion",
      "docs": {
        "description": "disallow redundant clsx usage",
        "recommended": true,
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/no-redundant-clsx.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/no-redundant-clsx.md",
      "name": "clsx/no-redundant-clsx",
      "plugin": "clsx"
    },
    "clsx/no-spreading": {
      "type": "suggestion",
      "docs": {
        "description": "forbid usage of object expression inside clsx",
        "recommended": true,
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/no-spreading.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/no-spreading.md",
      "name": "clsx/no-spreading",
      "plugin": "clsx"
    },
    "clsx/prefer-logical-over-objects": {
      "type": "suggestion",
      "docs": {
        "description": "forbid usage of object expression inside clsx",
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/prefer-logical-over-objects.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/prefer-logical-over-objects.md",
      "name": "clsx/prefer-logical-over-objects",
      "plugin": "clsx"
    },
    "clsx/prefer-merged-neighboring-elements": {
      "type": "suggestion",
      "docs": {
        "description": "enforce merging of neighboring elements",
        "recommended": true,
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/prefer-merged-neighboring-elements.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/prefer-merged-neighboring-elements.md",
      "name": "clsx/prefer-merged-neighboring-elements",
      "plugin": "clsx"
    },
    "clsx/prefer-objects-over-logical": {
      "type": "suggestion",
      "docs": {
        "description": "forbid usage of logical expressions inside clsx",
        "url": "https://github.com/temoncher/eslint-plugin-clsx/blob/main/docs/rules/prefer-objects-over-logical.md"
      },
      "fixable": "code",
      "url": "https://github.com/temoncher/eslint-plugin-clsx/tree/HEAD/docs/rules/prefer-objects-over-logical.md",
      "name": "clsx/prefer-objects-over-logical",
      "plugin": "clsx"
    },
    "de-morgan/no-negated-conjunction": {
      "docs": {
        "description": "Transforms the negation of a conjunction !(A && B) into the equivalent !A || !B according to De Morgan’s law",
        "url": "https://github.com/azat-io/eslint-plugin-de-morgan/blob/main/docs/no-negated-conjunction.md",
        "category": "Best Practices",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "de-morgan/no-negated-conjunction",
      "plugin": "de-morgan"
    },
    "de-morgan/no-negated-disjunction": {
      "docs": {
        "description": "Transforms the negation of a disjunction !(A || B) into the equivalent !A && !B according to De Morgan’s law",
        "url": "https://github.com/azat-io/eslint-plugin-de-morgan/blob/main/docs/no-negated-disjunction.md",
        "category": "Best Practices",
        "recommended": true
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "de-morgan/no-negated-disjunction",
      "plugin": "de-morgan"
    },
    "depend/ban-dependencies": {
      "type": "suggestion",
      "docs": {
        "description": "Bans a list of dependencies from being used",
        "url": "https://github.com/es-tooling/eslint-plugin-depend/blob/main/docs/rules/ban-dependencies.md"
      },
      "name": "depend/ban-dependencies",
      "plugin": "depend"
    },
    "es-x/no-accessor-properties": {
      "docs": {
        "description": "disallow accessor properties.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-accessor-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-accessor-properties",
      "plugin": "es-x"
    },
    "es-x/no-arbitrary-module-namespace-names": {
      "docs": {
        "description": "disallow arbitrary module namespace names.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-arbitrary-module-namespace-names.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-arbitrary-module-namespace-names",
      "plugin": "es-x"
    },
    "es-x/no-array-from": {
      "docs": {
        "description": "disallow the `Array.from` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-from.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-from",
      "plugin": "es-x"
    },
    "es-x/no-array-fromasync": {
      "docs": {
        "description": "disallow the `Array.fromAsync` method.",
        "category": "ES2026",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-fromasync.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-fromasync",
      "plugin": "es-x"
    },
    "es-x/no-array-isarray": {
      "docs": {
        "description": "disallow the `Array.isArray` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-isarray.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-isarray",
      "plugin": "es-x"
    },
    "es-x/no-array-of": {
      "docs": {
        "description": "disallow the `Array.of` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-of.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-of",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-at": {
      "docs": {
        "description": "disallow the `Array.prototype.at()` methods.",
        "category": "ES2022",
        "proposal": "relative-indexing-method",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-at.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-at",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-copywithin": {
      "docs": {
        "description": "disallow the `Array.prototype.copyWithin` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-copywithin.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-copywithin",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-entries": {
      "docs": {
        "description": "disallow the `Array.prototype.entries` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-entries.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-entries",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-every": {
      "docs": {
        "description": "disallow the `Array.prototype.every` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-every.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-every",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-fill": {
      "docs": {
        "description": "disallow the `Array.prototype.fill` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-fill.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-fill",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-filter": {
      "docs": {
        "description": "disallow the `Array.prototype.filter` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-filter.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-filter",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-find": {
      "docs": {
        "description": "disallow the `Array.prototype.find` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-find.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-find",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-findindex": {
      "docs": {
        "description": "disallow the `Array.prototype.findIndex` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-findindex.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-findindex",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-findlast-findlastindex": {
      "docs": {
        "description": "disallow the `Array.prototype.{findLast,findLastIndex}` methods.",
        "category": "ES2023",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-findlast-findlastindex.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-findlast-findlastindex",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-flat": {
      "docs": {
        "description": "disallow the `Array.prototype.{flat,flatMap}` method.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-flat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-flat",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-foreach": {
      "docs": {
        "description": "disallow the `Array.prototype.forEach` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-foreach.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-foreach",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-includes": {
      "docs": {
        "description": "disallow the `Array.prototype.includes` method.",
        "category": "ES2016",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-includes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-includes",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-indexof": {
      "docs": {
        "description": "disallow the `Array.prototype.indexOf` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-indexof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-indexof",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-keys": {
      "docs": {
        "description": "disallow the `Array.prototype.keys` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-keys.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-keys",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-lastindexof": {
      "docs": {
        "description": "disallow the `Array.prototype.lastIndexOf` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-lastindexof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-lastindexof",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-map": {
      "docs": {
        "description": "disallow the `Array.prototype.map` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-map",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-reduce": {
      "docs": {
        "description": "disallow the `Array.prototype.reduce` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-reduce.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-reduce",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-reduceright": {
      "docs": {
        "description": "disallow the `Array.prototype.reduceRight` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-reduceright.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-reduceright",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-some": {
      "docs": {
        "description": "disallow the `Array.prototype.some` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-some.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-some",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-toreversed": {
      "docs": {
        "description": "disallow the `Array.prototype.toReversed` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-toreversed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-toreversed",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-tosorted": {
      "docs": {
        "description": "disallow the `Array.prototype.toSorted` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-tosorted.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-tosorted",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-tospliced": {
      "docs": {
        "description": "disallow the `Array.prototype.toSpliced` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-tospliced.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-tospliced",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-values": {
      "docs": {
        "description": "disallow the `Array.prototype.values` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-values.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-values",
      "plugin": "es-x"
    },
    "es-x/no-array-prototype-with": {
      "docs": {
        "description": "disallow the `Array.prototype.with` method.",
        "category": "ES2023",
        "proposal": "change-array-by-copy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-prototype-with.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-array-prototype-with",
      "plugin": "es-x"
    },
    "es-x/no-array-string-prototype-at": {
      "deprecated": true,
      "docs": {
        "description": "disallow the `{Array,String}.prototype.at()` methods.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-array-string-prototype-at.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-array-prototype-at",
        "no-string-prototype-at"
      ],
      "type": "problem",
      "name": "es-x/no-array-string-prototype-at",
      "plugin": "es-x"
    },
    "es-x/no-arraybuffer-prototype-transfer": {
      "docs": {
        "description": "disallow the `ArrayBuffer.prototype.transfer` method.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-arraybuffer-prototype-transfer.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-arraybuffer-prototype-transfer",
      "plugin": "es-x"
    },
    "es-x/no-arrow-functions": {
      "docs": {
        "description": "disallow arrow function expressions.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-arrow-functions.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-arrow-functions",
      "plugin": "es-x"
    },
    "es-x/no-async-functions": {
      "docs": {
        "description": "disallow async function declarations.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-async-functions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-async-functions",
      "plugin": "es-x"
    },
    "es-x/no-async-iteration": {
      "docs": {
        "description": "disallow async iteration.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-async-iteration.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-async-iteration",
      "plugin": "es-x"
    },
    "es-x/no-asyncdisposablestack": {
      "docs": {
        "description": "disallow the `AsyncDisposableStack` class.",
        "category": "ES2026",
        "proposal": "explicit-resource-management",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-asyncdisposablestack.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-asyncdisposablestack",
      "plugin": "es-x"
    },
    "es-x/no-atomics": {
      "docs": {
        "description": "disallow the `Atomics` class.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-atomics.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-atomics",
      "plugin": "es-x"
    },
    "es-x/no-atomics-waitasync": {
      "docs": {
        "description": "disallow the `Atomics.waitAsync` method.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-atomics-waitasync.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-atomics-waitasync",
      "plugin": "es-x"
    },
    "es-x/no-bigint": {
      "docs": {
        "description": "disallow `bigint` syntax and built-ins",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-bigint.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-bigint",
      "plugin": "es-x"
    },
    "es-x/no-binary-numeric-literals": {
      "docs": {
        "description": "disallow binary numeric literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-binary-numeric-literals.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-binary-numeric-literals",
      "plugin": "es-x"
    },
    "es-x/no-block-scoped-functions": {
      "docs": {
        "description": "disallow block-scoped function declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-block-scoped-functions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-block-scoped-functions",
      "plugin": "es-x"
    },
    "es-x/no-block-scoped-variables": {
      "docs": {
        "description": "disallow block-scoped variable declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-block-scoped-variables.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-block-scoped-variables",
      "plugin": "es-x"
    },
    "es-x/no-class-fields": {
      "deprecated": true,
      "docs": {
        "description": "disallow class fields.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-fields.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-class-instance-fields",
        "no-class-private-fields",
        "no-class-private-methods",
        "no-class-static-fields"
      ],
      "type": "problem",
      "name": "es-x/no-class-fields",
      "plugin": "es-x"
    },
    "es-x/no-class-instance-fields": {
      "docs": {
        "description": "disallow instance class fields.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-instance-fields.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-class-instance-fields",
      "plugin": "es-x"
    },
    "es-x/no-class-private-fields": {
      "docs": {
        "description": "disallow private class fields.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-private-fields.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-class-private-fields",
      "plugin": "es-x"
    },
    "es-x/no-class-private-methods": {
      "docs": {
        "description": "disallow private class methods.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-private-methods.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-class-private-methods",
      "plugin": "es-x"
    },
    "es-x/no-class-static-block": {
      "docs": {
        "description": "disallow class static block.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-static-block.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-class-static-block",
      "plugin": "es-x"
    },
    "es-x/no-class-static-fields": {
      "docs": {
        "description": "disallow static class fields.",
        "category": "ES2022",
        "proposal": "class-fields",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-class-static-fields.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-class-static-fields",
      "plugin": "es-x"
    },
    "es-x/no-classes": {
      "docs": {
        "description": "disallow class declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-classes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-classes",
      "plugin": "es-x"
    },
    "es-x/no-computed-properties": {
      "docs": {
        "description": "disallow computed properties.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-computed-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-computed-properties",
      "plugin": "es-x"
    },
    "es-x/no-dataview-prototype-getfloat16-setfloat16": {
      "docs": {
        "description": "disallow the `DataView.prototype.{getFloat16,setFloat16}` methods.",
        "category": "ES2025",
        "recommended": false,
        "proposal": "float16array",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-dataview-prototype-getfloat16-setfloat16.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-dataview-prototype-getfloat16-setfloat16",
      "plugin": "es-x"
    },
    "es-x/no-date-now": {
      "docs": {
        "description": "disallow the `Date.now` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-date-now.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-date-now",
      "plugin": "es-x"
    },
    "es-x/no-date-prototype-getyear-setyear": {
      "docs": {
        "description": "disallow the `Date.prototype.{getYear,setYear}` methods.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-date-prototype-getyear-setyear.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-date-prototype-getyear-setyear",
      "plugin": "es-x"
    },
    "es-x/no-date-prototype-togmtstring": {
      "docs": {
        "description": "disallow the `Date.prototype.toGMTString` method.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-date-prototype-togmtstring.html"
      },
      "fixable": "code",
      "type": "problem",
      "hasSuggestions": true,
      "name": "es-x/no-date-prototype-togmtstring",
      "plugin": "es-x"
    },
    "es-x/no-default-parameters": {
      "docs": {
        "description": "disallow default parameters.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-default-parameters.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-default-parameters",
      "plugin": "es-x"
    },
    "es-x/no-destructuring": {
      "docs": {
        "description": "disallow destructuring.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-destructuring.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-destructuring",
      "plugin": "es-x"
    },
    "es-x/no-disposablestack": {
      "docs": {
        "description": "disallow the `DisposableStack` class.",
        "category": "ES2026",
        "proposal": "explicit-resource-management",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-disposablestack.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-disposablestack",
      "plugin": "es-x"
    },
    "es-x/no-dynamic-import": {
      "docs": {
        "description": "disallow `import()` syntax",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-dynamic-import.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-dynamic-import",
      "plugin": "es-x"
    },
    "es-x/no-dynamic-import-options": {
      "docs": {
        "description": "disallow the second parameter to `import()`",
        "category": "ES2025",
        "proposal": "import-attributes",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-dynamic-import-options.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-dynamic-import-options",
      "plugin": "es-x"
    },
    "es-x/no-error-cause": {
      "docs": {
        "description": "disallow Error Cause.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-error-cause.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-error-cause",
      "plugin": "es-x"
    },
    "es-x/no-error-iserror": {
      "docs": {
        "description": "disallow the `Error.isError` method.",
        "category": "ES2026",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-error-iserror.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-error-iserror",
      "plugin": "es-x"
    },
    "es-x/no-escape-unescape": {
      "docs": {
        "description": "disallow `escape` and `unescape`",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-escape-unescape.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-escape-unescape",
      "plugin": "es-x"
    },
    "es-x/no-exponential-operators": {
      "docs": {
        "description": "disallow exponential operators.",
        "category": "ES2016",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-exponential-operators.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-exponential-operators",
      "plugin": "es-x"
    },
    "es-x/no-export-ns-from": {
      "docs": {
        "description": "disallow `export * as ns`.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-export-ns-from.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-export-ns-from",
      "plugin": "es-x"
    },
    "es-x/no-float16array": {
      "docs": {
        "description": "disallow the `Float16Array` class.",
        "category": "ES2025",
        "recommended": false,
        "proposal": "float16array",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-float16array.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-float16array",
      "plugin": "es-x"
    },
    "es-x/no-for-of-loops": {
      "docs": {
        "description": "disallow `for-of` statements.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-for-of-loops.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-for-of-loops",
      "plugin": "es-x"
    },
    "es-x/no-function-declarations-in-if-statement-clauses-without-block": {
      "docs": {
        "description": "disallow function declarations in if statement clauses without using blocks.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-function-declarations-in-if-statement-clauses-without-block.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-function-declarations-in-if-statement-clauses-without-block",
      "plugin": "es-x"
    },
    "es-x/no-function-prototype-bind": {
      "docs": {
        "description": "disallow the `Function.prototype.bind` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-function-prototype-bind.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-function-prototype-bind",
      "plugin": "es-x"
    },
    "es-x/no-generators": {
      "docs": {
        "description": "disallow generator function declarations.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-generators.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-generators",
      "plugin": "es-x"
    },
    "es-x/no-global-this": {
      "docs": {
        "description": "disallow the `globalThis` variable",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-global-this.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-global-this",
      "plugin": "es-x"
    },
    "es-x/no-hashbang": {
      "docs": {
        "description": "disallow Hashbang comments.",
        "category": "ES2023",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-hashbang.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-hashbang",
      "plugin": "es-x"
    },
    "es-x/no-import-attributes": {
      "docs": {
        "description": "disallow Import Attributes.",
        "category": "ES2025",
        "recommended": false,
        "proposal": "import-attributes",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-import-attributes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-import-attributes",
      "plugin": "es-x"
    },
    "es-x/no-import-meta": {
      "docs": {
        "description": "disallow `import.meta` meta property.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-import-meta.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-import-meta",
      "plugin": "es-x"
    },
    "es-x/no-initializers-in-for-in": {
      "docs": {
        "description": "disallow initializers in for-in heads.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-initializers-in-for-in.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-initializers-in-for-in",
      "plugin": "es-x"
    },
    "es-x/no-intl-datetimeformat-prototype-formatrange": {
      "docs": {
        "description": "disallow the `Intl.DateTimeFormat.prototype.formatRange` method.",
        "category": "ES2021-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-datetimeformat-prototype-formatrange.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-datetimeformat-prototype-formatrange",
      "plugin": "es-x"
    },
    "es-x/no-intl-datetimeformat-prototype-formattoparts": {
      "docs": {
        "description": "disallow the `DateTimeFormat.prototype.formatToParts` method.",
        "category": "ES2017-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-datetimeformat-prototype-formattoparts.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-datetimeformat-prototype-formattoparts",
      "plugin": "es-x"
    },
    "es-x/no-intl-displaynames": {
      "docs": {
        "description": "disallow the `Intl.DisplayNames` object.",
        "category": "ES2021-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-displaynames.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-displaynames",
      "plugin": "es-x"
    },
    "es-x/no-intl-durationformat": {
      "docs": {
        "description": "disallow the `Intl.DurationFormat` object.",
        "category": "ES2025-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-durationformat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-durationformat",
      "plugin": "es-x"
    },
    "es-x/no-intl-getcanonicallocales": {
      "docs": {
        "description": "disallow the `Intl.getCanonicalLocales` method.",
        "category": "ES2016-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-getcanonicallocales.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-getcanonicallocales",
      "plugin": "es-x"
    },
    "es-x/no-intl-listformat": {
      "docs": {
        "description": "disallow the `Intl.ListFormat` object.",
        "category": "ES2021-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-listformat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-listformat",
      "plugin": "es-x"
    },
    "es-x/no-intl-locale": {
      "docs": {
        "description": "disallow the `Intl.Locale` object.",
        "category": "ES2020-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-locale.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-locale",
      "plugin": "es-x"
    },
    "es-x/no-intl-numberformat-prototype-formatrange": {
      "docs": {
        "description": "disallow the `NumberFormat.prototype.formatRange` method.",
        "category": "ES2023-Intl-API",
        "proposal": "intl-numberformat-v3",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-numberformat-prototype-formatrange.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-numberformat-prototype-formatrange",
      "plugin": "es-x"
    },
    "es-x/no-intl-numberformat-prototype-formatrangetoparts": {
      "docs": {
        "description": "disallow the `NumberFormat.prototype.formatRangeToParts` method.",
        "category": "ES2023-Intl-API",
        "proposal": "intl-numberformat-v3",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-numberformat-prototype-formatrangetoparts.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-numberformat-prototype-formatrangetoparts",
      "plugin": "es-x"
    },
    "es-x/no-intl-numberformat-prototype-formattoparts": {
      "docs": {
        "description": "disallow the `NumberFormat.prototype.formatToParts` method.",
        "category": "ES2018-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-numberformat-prototype-formattoparts.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-numberformat-prototype-formattoparts",
      "plugin": "es-x"
    },
    "es-x/no-intl-pluralrules": {
      "docs": {
        "description": "disallow the `Intl.PluralRules` object.",
        "category": "ES2018-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-pluralrules.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-pluralrules",
      "plugin": "es-x"
    },
    "es-x/no-intl-pluralrules-prototype-selectrange": {
      "docs": {
        "description": "disallow the `PluralRules.prototype.selectRange` method.",
        "category": "ES2023-Intl-API",
        "proposal": "intl-numberformat-v3",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-pluralrules-prototype-selectrange.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-pluralrules-prototype-selectrange",
      "plugin": "es-x"
    },
    "es-x/no-intl-relativetimeformat": {
      "docs": {
        "description": "disallow the `Intl.RelativeTimeFormat` object.",
        "category": "ES2020-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-relativetimeformat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-relativetimeformat",
      "plugin": "es-x"
    },
    "es-x/no-intl-segmenter": {
      "docs": {
        "description": "disallow the `Intl.Segmenter` object.",
        "category": "ES2022-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-segmenter.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-segmenter",
      "plugin": "es-x"
    },
    "es-x/no-intl-supportedvaluesof": {
      "docs": {
        "description": "disallow the `Intl.supportedValuesOf` method.",
        "category": "ES2022-Intl-API",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-intl-supportedvaluesof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-intl-supportedvaluesof",
      "plugin": "es-x"
    },
    "es-x/no-iterator": {
      "docs": {
        "description": "disallow the `Iterator` class.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-drop": {
      "docs": {
        "description": "disallow the `Iterator.prototype.drop` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-drop.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-drop",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-every": {
      "docs": {
        "description": "disallow the `Iterator.prototype.every` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-every.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-every",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-filter": {
      "docs": {
        "description": "disallow the `Iterator.prototype.filter` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-filter.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-filter",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-find": {
      "docs": {
        "description": "disallow the `Iterator.prototype.find` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-find.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-find",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-flatmap": {
      "docs": {
        "description": "disallow the `Iterator.prototype.flatMap` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-flatmap.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-flatmap",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-foreach": {
      "docs": {
        "description": "disallow the `Iterator.prototype.forEach` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-foreach.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-foreach",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-map": {
      "docs": {
        "description": "disallow the `Iterator.prototype.map` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-map",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-reduce": {
      "docs": {
        "description": "disallow the `Iterator.prototype.reduce` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-reduce.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-reduce",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-some": {
      "docs": {
        "description": "disallow the `Iterator.prototype.some` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-some.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-some",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-take": {
      "docs": {
        "description": "disallow the `Iterator.prototype.take` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-take.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-take",
      "plugin": "es-x"
    },
    "es-x/no-iterator-prototype-toarray": {
      "docs": {
        "description": "disallow the `Iterator.prototype.toArray` method.",
        "category": "ES2025",
        "proposal": "iterator-helpers",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-iterator-prototype-toarray.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-iterator-prototype-toarray",
      "plugin": "es-x"
    },
    "es-x/no-json": {
      "docs": {
        "description": "disallow the `JSON` class.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-json.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-json",
      "plugin": "es-x"
    },
    "es-x/no-json-modules": {
      "docs": {
        "description": "disallow JSON Modules.",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-json-modules.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-json-modules",
      "plugin": "es-x"
    },
    "es-x/no-json-superset": {
      "docs": {
        "description": "disallow `\\u2028` and `\\u2029` in string literals.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-json-superset.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-json-superset",
      "plugin": "es-x"
    },
    "es-x/no-keyword-properties": {
      "docs": {
        "description": "disallow reserved words as property names.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-keyword-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-keyword-properties",
      "plugin": "es-x"
    },
    "es-x/no-labelled-function-declarations": {
      "docs": {
        "description": "disallow labelled function declarations.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-labelled-function-declarations.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-labelled-function-declarations",
      "plugin": "es-x"
    },
    "es-x/no-legacy-object-prototype-accessor-methods": {
      "docs": {
        "description": "disallow legacy `Object.prototype` accessor methods.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-legacy-object-prototype-accessor-methods.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-legacy-object-prototype-accessor-methods",
      "plugin": "es-x"
    },
    "es-x/no-logical-assignment-operators": {
      "docs": {
        "description": "disallow logical assignment operators.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-logical-assignment-operators.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-logical-assignment-operators",
      "plugin": "es-x"
    },
    "es-x/no-malformed-template-literals": {
      "docs": {
        "description": "disallow template literals with invalid escape sequences.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-malformed-template-literals.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-malformed-template-literals",
      "plugin": "es-x"
    },
    "es-x/no-map": {
      "docs": {
        "description": "disallow the `Map` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-map",
      "plugin": "es-x"
    },
    "es-x/no-map-groupby": {
      "docs": {
        "description": "disallow the `Map.groupBy()` method.",
        "category": "ES2024",
        "proposal": "array-grouping",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-map-groupby.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-map-groupby",
      "plugin": "es-x"
    },
    "es-x/no-math-acosh": {
      "docs": {
        "description": "disallow the `Math.acosh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-acosh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-acosh",
      "plugin": "es-x"
    },
    "es-x/no-math-asinh": {
      "docs": {
        "description": "disallow the `Math.asinh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-asinh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-asinh",
      "plugin": "es-x"
    },
    "es-x/no-math-atanh": {
      "docs": {
        "description": "disallow the `Math.atanh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-atanh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-atanh",
      "plugin": "es-x"
    },
    "es-x/no-math-cbrt": {
      "docs": {
        "description": "disallow the `Math.cbrt` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-cbrt.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-cbrt",
      "plugin": "es-x"
    },
    "es-x/no-math-clz32": {
      "docs": {
        "description": "disallow the `Math.clz32` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-clz32.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-clz32",
      "plugin": "es-x"
    },
    "es-x/no-math-cosh": {
      "docs": {
        "description": "disallow the `Math.cosh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-cosh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-cosh",
      "plugin": "es-x"
    },
    "es-x/no-math-expm1": {
      "docs": {
        "description": "disallow the `Math.expm1` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-expm1.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-expm1",
      "plugin": "es-x"
    },
    "es-x/no-math-f16round": {
      "docs": {
        "description": "disallow the `Math.f16round` method.",
        "category": "ES2025",
        "recommended": false,
        "proposal": "float16array",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-f16round.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-f16round",
      "plugin": "es-x"
    },
    "es-x/no-math-fround": {
      "docs": {
        "description": "disallow the `Math.fround` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-fround.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-fround",
      "plugin": "es-x"
    },
    "es-x/no-math-hypot": {
      "docs": {
        "description": "disallow the `Math.hypot` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-hypot.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-hypot",
      "plugin": "es-x"
    },
    "es-x/no-math-imul": {
      "docs": {
        "description": "disallow the `Math.imul` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-imul.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-imul",
      "plugin": "es-x"
    },
    "es-x/no-math-log1p": {
      "docs": {
        "description": "disallow the `Math.log1p` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-log1p.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-log1p",
      "plugin": "es-x"
    },
    "es-x/no-math-log2": {
      "docs": {
        "description": "disallow the `Math.log2` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-log2.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-log2",
      "plugin": "es-x"
    },
    "es-x/no-math-log10": {
      "docs": {
        "description": "disallow the `Math.log10` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-log10.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-log10",
      "plugin": "es-x"
    },
    "es-x/no-math-sign": {
      "docs": {
        "description": "disallow the `Math.sign` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-sign.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-sign",
      "plugin": "es-x"
    },
    "es-x/no-math-sinh": {
      "docs": {
        "description": "disallow the `Math.sinh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-sinh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-sinh",
      "plugin": "es-x"
    },
    "es-x/no-math-tanh": {
      "docs": {
        "description": "disallow the `Math.tanh` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-tanh.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-tanh",
      "plugin": "es-x"
    },
    "es-x/no-math-trunc": {
      "docs": {
        "description": "disallow the `Math.trunc` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-math-trunc.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-math-trunc",
      "plugin": "es-x"
    },
    "es-x/no-modules": {
      "docs": {
        "description": "disallow modules.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-modules.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-modules",
      "plugin": "es-x"
    },
    "es-x/no-new-target": {
      "docs": {
        "description": "disallow `new.target` meta property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-new-target.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-new-target",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-array-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Array` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-array-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-array-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-array-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Array instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-array-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-array-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-arraybuffer-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `ArrayBuffer` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-arraybuffer-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-arraybuffer-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-arraybuffer-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on ArrayBuffer instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-arraybuffer-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-arraybuffer-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-asyncdisposablestack-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `AsyncDisposableStack` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-asyncdisposablestack-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-asyncdisposablestack-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-asyncdisposablestack-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on AsyncDisposableStack instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-asyncdisposablestack-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-asyncdisposablestack-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-atomics-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Atomics`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-atomics-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-atomics-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-bigint-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `BigInt` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-bigint-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-bigint-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-bigint-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on BigInt instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-bigint-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-bigint-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-boolean-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Boolean` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-boolean-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-boolean-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-boolean-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Boolean instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-boolean-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-boolean-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-dataview-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `DataView` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-dataview-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-dataview-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-dataview-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on DataView instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-dataview-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-dataview-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-date-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Date` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-date-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-date-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-date-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Date instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-date-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-date-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-disposablestack-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `DisposableStack` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-disposablestack-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-disposablestack-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-disposablestack-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on DisposableStack instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-disposablestack-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-disposablestack-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-error-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Error` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-error-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-error-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-finalizationregistry-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `FinalizationRegistry` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-finalizationregistry-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-finalizationregistry-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-finalizationregistry-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on FinalizationRegistry instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-finalizationregistry-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-finalizationregistry-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-function-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Function` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-function-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-function-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-collator-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.Collator` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-collator-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-collator-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-collator-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.Collator instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-collator-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-collator-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-datetimeformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.DateTimeFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-datetimeformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-datetimeformat-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-datetimeformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.DateTimeFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-datetimeformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-datetimeformat-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-displaynames-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.DisplayNames` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-displaynames-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-displaynames-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-displaynames-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.DisplayNames instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-displaynames-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-displaynames-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-durationformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.DurationFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-durationformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-durationformat-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-durationformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.DurationFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-durationformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-durationformat-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-listformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.ListFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-listformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-listformat-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-listformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.ListFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-listformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-listformat-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-locale-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.Locale` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-locale-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-locale-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-locale-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.Locale instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-locale-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-locale-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-numberformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.NumberFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-numberformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-numberformat-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-numberformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.NumberFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-numberformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-numberformat-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-pluralrules-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.PluralRules` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-pluralrules-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-pluralrules-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-pluralrules-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.PluralRules instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-pluralrules-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-pluralrules-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-relativetimeformat-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.RelativeTimeFormat` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-relativetimeformat-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-relativetimeformat-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-relativetimeformat-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.RelativeTimeFormat instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-relativetimeformat-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-relativetimeformat-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-segmenter-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Intl.Segmenter` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-segmenter-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-segmenter-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-intl-segmenter-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Intl.Segmenter instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-intl-segmenter-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-intl-segmenter-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-iterator-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Iterator` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-iterator-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-iterator-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-iterator-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Iterator instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-iterator-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-iterator-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-json-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `JSON`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-json-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-json-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-map-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Map` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-map-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-map-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-map-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Map instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-map-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-map-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-math-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Math`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-math-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-math-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-number-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Number` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-number-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-number-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-number-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Number instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-number-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-number-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-object-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Object` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-object-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-object-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-promise-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Promise` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-promise-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-promise-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-promise-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Promise instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-promise-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-promise-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-proxy-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Proxy` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-proxy-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-proxy-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-reflect-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Reflect`",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-reflect-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-reflect-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-regexp-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `RegExp` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-regexp-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-regexp-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-regexp-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on RegExp instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-regexp-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-regexp-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-set-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Set` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-set-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-set-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-set-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Set instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-set-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-set-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-sharedarraybuffer-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `SharedArrayBuffer` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-sharedarraybuffer-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-sharedarraybuffer-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-sharedarraybuffer-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on SharedArrayBuffer instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-sharedarraybuffer-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-sharedarraybuffer-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-string-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `String` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-string-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-string-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-string-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on String instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-string-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-string-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-symbol-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `Symbol` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-symbol-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-symbol-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-symbol-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on Symbol instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-symbol-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-symbol-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-typed-array-properties": {
      "docs": {
        "description": "disallow non-standard static properties on typed array class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-typed-array-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-typed-array-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-typed-array-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on typed array instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-typed-array-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-typed-array-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-weakmap-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `WeakMap` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakmap-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-weakmap-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-weakmap-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on WeakMap instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakmap-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-weakmap-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-weakref-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `WeakRef` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakref-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-weakref-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-weakref-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on WeakRef instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakref-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-weakref-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-weakset-properties": {
      "docs": {
        "description": "disallow non-standard static properties on `WeakSet` class",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakset-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-weakset-properties",
      "plugin": "es-x"
    },
    "es-x/no-nonstandard-weakset-prototype-properties": {
      "docs": {
        "description": "disallow non-standard properties on WeakSet instance",
        "category": "nonstandard",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nonstandard-weakset-prototype-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nonstandard-weakset-prototype-properties",
      "plugin": "es-x"
    },
    "es-x/no-nullish-coalescing-operators": {
      "docs": {
        "description": "disallow nullish coalescing operators.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-nullish-coalescing-operators.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-nullish-coalescing-operators",
      "plugin": "es-x"
    },
    "es-x/no-number-epsilon": {
      "docs": {
        "description": "disallow the `Number.EPSILON` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-epsilon.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-epsilon",
      "plugin": "es-x"
    },
    "es-x/no-number-isfinite": {
      "docs": {
        "description": "disallow the `Number.isFinite` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-isfinite.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-isfinite",
      "plugin": "es-x"
    },
    "es-x/no-number-isinteger": {
      "docs": {
        "description": "disallow the `Number.isInteger` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-isinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-isinteger",
      "plugin": "es-x"
    },
    "es-x/no-number-isnan": {
      "docs": {
        "description": "disallow the `Number.isNaN` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-isnan.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-isnan",
      "plugin": "es-x"
    },
    "es-x/no-number-issafeinteger": {
      "docs": {
        "description": "disallow the `Number.isSafeInteger` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-issafeinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-issafeinteger",
      "plugin": "es-x"
    },
    "es-x/no-number-maxsafeinteger": {
      "docs": {
        "description": "disallow the `Number.MAX_SAFE_INTEGER` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-maxsafeinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-maxsafeinteger",
      "plugin": "es-x"
    },
    "es-x/no-number-minsafeinteger": {
      "docs": {
        "description": "disallow the `Number.MIN_SAFE_INTEGER` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-minsafeinteger.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-minsafeinteger",
      "plugin": "es-x"
    },
    "es-x/no-number-parsefloat": {
      "docs": {
        "description": "disallow the `Number.parseFloat` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-parsefloat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-parsefloat",
      "plugin": "es-x"
    },
    "es-x/no-number-parseint": {
      "docs": {
        "description": "disallow the `Number.parseInt` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-number-parseint.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-number-parseint",
      "plugin": "es-x"
    },
    "es-x/no-numeric-separators": {
      "docs": {
        "description": "disallow numeric separators.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-numeric-separators.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-numeric-separators",
      "plugin": "es-x"
    },
    "es-x/no-object-assign": {
      "docs": {
        "description": "disallow the `Object.assign` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-assign.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-assign",
      "plugin": "es-x"
    },
    "es-x/no-object-create": {
      "docs": {
        "description": "disallow the `Object.create` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-create.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-create",
      "plugin": "es-x"
    },
    "es-x/no-object-defineproperties": {
      "docs": {
        "description": "disallow the `Object.defineProperties` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-defineproperties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-defineproperties",
      "plugin": "es-x"
    },
    "es-x/no-object-defineproperty": {
      "docs": {
        "description": "disallow the `Object.defineProperty` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-defineproperty.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-defineproperty",
      "plugin": "es-x"
    },
    "es-x/no-object-entries": {
      "docs": {
        "description": "disallow the `Object.entries` method.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-entries.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-entries",
      "plugin": "es-x"
    },
    "es-x/no-object-freeze": {
      "docs": {
        "description": "disallow the `Object.freeze` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-freeze.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-freeze",
      "plugin": "es-x"
    },
    "es-x/no-object-fromentries": {
      "docs": {
        "description": "disallow the `Object.fromEntries` method.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-fromentries.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-fromentries",
      "plugin": "es-x"
    },
    "es-x/no-object-getownpropertydescriptor": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertyDescriptor` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertydescriptor.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-getownpropertydescriptor",
      "plugin": "es-x"
    },
    "es-x/no-object-getownpropertydescriptors": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertyDescriptors` method.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertydescriptors.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-getownpropertydescriptors",
      "plugin": "es-x"
    },
    "es-x/no-object-getownpropertynames": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertyNames` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertynames.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-getownpropertynames",
      "plugin": "es-x"
    },
    "es-x/no-object-getownpropertysymbols": {
      "docs": {
        "description": "disallow the `Object.getOwnPropertySymbols` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getownpropertysymbols.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-getownpropertysymbols",
      "plugin": "es-x"
    },
    "es-x/no-object-getprototypeof": {
      "docs": {
        "description": "disallow the `Object.getPrototypeOf` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-getprototypeof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-getprototypeof",
      "plugin": "es-x"
    },
    "es-x/no-object-groupby": {
      "docs": {
        "description": "disallow the `Object.groupBy()` method.",
        "category": "ES2024",
        "proposal": "array-grouping",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-groupby.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-groupby",
      "plugin": "es-x"
    },
    "es-x/no-object-hasown": {
      "docs": {
        "description": "disallow the `Object.hasOwn` method.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-hasown.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-hasown",
      "plugin": "es-x"
    },
    "es-x/no-object-is": {
      "docs": {
        "description": "disallow the `Object.is` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-is.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-is",
      "plugin": "es-x"
    },
    "es-x/no-object-isextensible": {
      "docs": {
        "description": "disallow the `Object.isExtensible` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-isextensible.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-isextensible",
      "plugin": "es-x"
    },
    "es-x/no-object-isfrozen": {
      "docs": {
        "description": "disallow the `Object.isFrozen` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-isfrozen.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-isfrozen",
      "plugin": "es-x"
    },
    "es-x/no-object-issealed": {
      "docs": {
        "description": "disallow the `Object.isSealed` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-issealed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-issealed",
      "plugin": "es-x"
    },
    "es-x/no-object-keys": {
      "docs": {
        "description": "disallow the `Object.keys` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-keys.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-keys",
      "plugin": "es-x"
    },
    "es-x/no-object-map-groupby": {
      "deprecated": true,
      "docs": {
        "description": "disallow the `{Object,Map}.groupBy()` function (array grouping).",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-map-groupby.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-object-groupby",
        "no-map-groupby"
      ],
      "type": "problem",
      "name": "es-x/no-object-map-groupby",
      "plugin": "es-x"
    },
    "es-x/no-object-preventextensions": {
      "docs": {
        "description": "disallow the `Object.preventExtensions` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-preventextensions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-preventextensions",
      "plugin": "es-x"
    },
    "es-x/no-object-seal": {
      "docs": {
        "description": "disallow the `Object.seal` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-seal.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-seal",
      "plugin": "es-x"
    },
    "es-x/no-object-setprototypeof": {
      "docs": {
        "description": "disallow the `Object.setPrototypeOf` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-setprototypeof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-setprototypeof",
      "plugin": "es-x"
    },
    "es-x/no-object-super-properties": {
      "docs": {
        "description": "disallow `super` property accesses in object literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-super-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-super-properties",
      "plugin": "es-x"
    },
    "es-x/no-object-values": {
      "docs": {
        "description": "disallow the `Object.values` method.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-object-values.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-object-values",
      "plugin": "es-x"
    },
    "es-x/no-octal-numeric-literals": {
      "docs": {
        "description": "disallow octal numeric literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-octal-numeric-literals.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-octal-numeric-literals",
      "plugin": "es-x"
    },
    "es-x/no-optional-catch-binding": {
      "docs": {
        "description": "disallow optional `catch` binding.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-optional-catch-binding.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-optional-catch-binding",
      "plugin": "es-x"
    },
    "es-x/no-optional-chaining": {
      "docs": {
        "description": "disallow optional chaining.",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-optional-chaining.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-optional-chaining",
      "plugin": "es-x"
    },
    "es-x/no-private-in": {
      "docs": {
        "description": "disallow `#x in obj`.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-private-in.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-private-in",
      "plugin": "es-x"
    },
    "es-x/no-promise": {
      "docs": {
        "description": "disallow the `Promise` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-promise",
      "plugin": "es-x"
    },
    "es-x/no-promise-all-settled": {
      "docs": {
        "description": "disallow `Promise.allSettled` function",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-all-settled.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-promise-all-settled",
      "plugin": "es-x"
    },
    "es-x/no-promise-any": {
      "docs": {
        "description": "disallow `Promise.any` function and `AggregateError` class",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-any.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-promise-any",
      "plugin": "es-x"
    },
    "es-x/no-promise-prototype-finally": {
      "docs": {
        "description": "disallow the `Promise.prototype.finally` method.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-prototype-finally.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-promise-prototype-finally",
      "plugin": "es-x"
    },
    "es-x/no-promise-try": {
      "docs": {
        "description": "disallow `Promise.try` function",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-try.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-promise-try",
      "plugin": "es-x"
    },
    "es-x/no-promise-withresolvers": {
      "docs": {
        "description": "disallow the `Promise.withResolvers()` method.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-promise-withresolvers.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-promise-withresolvers",
      "plugin": "es-x"
    },
    "es-x/no-property-shorthands": {
      "docs": {
        "description": "disallow property shorthands.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-property-shorthands.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-property-shorthands",
      "plugin": "es-x"
    },
    "es-x/no-proxy": {
      "docs": {
        "description": "disallow the `Proxy` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-proxy.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-proxy",
      "plugin": "es-x"
    },
    "es-x/no-reflect": {
      "docs": {
        "description": "disallow the `Reflect` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-reflect.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-reflect",
      "plugin": "es-x"
    },
    "es-x/no-regexp-d-flag": {
      "docs": {
        "description": "disallow RegExp `d` flag.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-d-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-d-flag",
      "plugin": "es-x"
    },
    "es-x/no-regexp-duplicate-named-capturing-groups": {
      "docs": {
        "description": "disallow RegExp duplicate named capturing groups.",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-duplicate-named-capturing-groups.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-duplicate-named-capturing-groups",
      "plugin": "es-x"
    },
    "es-x/no-regexp-escape": {
      "docs": {
        "description": "disallow `RegExp.escape` function",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-escape.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-escape",
      "plugin": "es-x"
    },
    "es-x/no-regexp-lookbehind-assertions": {
      "docs": {
        "description": "disallow RegExp lookbehind assertions.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-lookbehind-assertions.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-lookbehind-assertions",
      "plugin": "es-x"
    },
    "es-x/no-regexp-modifiers": {
      "docs": {
        "description": "disallow RegExp Modifiers.",
        "category": "ES2025",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-modifiers.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-modifiers",
      "plugin": "es-x"
    },
    "es-x/no-regexp-named-capture-groups": {
      "docs": {
        "description": "disallow RegExp named capture groups.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-named-capture-groups.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-named-capture-groups",
      "plugin": "es-x"
    },
    "es-x/no-regexp-prototype-compile": {
      "docs": {
        "description": "disallow the `RegExp.prototype.compile` method.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-prototype-compile.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-prototype-compile",
      "plugin": "es-x"
    },
    "es-x/no-regexp-prototype-flags": {
      "docs": {
        "description": "disallow the `RegExp.prototype.flags` property.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-prototype-flags.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-prototype-flags",
      "plugin": "es-x"
    },
    "es-x/no-regexp-s-flag": {
      "docs": {
        "description": "disallow RegExp `s` flag.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-s-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-s-flag",
      "plugin": "es-x"
    },
    "es-x/no-regexp-u-flag": {
      "docs": {
        "description": "disallow RegExp `u` flag.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-u-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-u-flag",
      "plugin": "es-x"
    },
    "es-x/no-regexp-unicode-property-escapes": {
      "docs": {
        "description": "disallow RegExp Unicode property escape sequences.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-unicode-property-escapes",
      "plugin": "es-x"
    },
    "es-x/no-regexp-unicode-property-escapes-2019": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2019",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2019.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-unicode-property-escapes-2019",
      "plugin": "es-x"
    },
    "es-x/no-regexp-unicode-property-escapes-2020": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2020",
        "category": "ES2020",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2020.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-unicode-property-escapes-2020",
      "plugin": "es-x"
    },
    "es-x/no-regexp-unicode-property-escapes-2021": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2021",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2021.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-unicode-property-escapes-2021",
      "plugin": "es-x"
    },
    "es-x/no-regexp-unicode-property-escapes-2022": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2022",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2022.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-unicode-property-escapes-2022",
      "plugin": "es-x"
    },
    "es-x/no-regexp-unicode-property-escapes-2023": {
      "docs": {
        "description": "disallow the new values of RegExp Unicode property escape sequences in ES2023",
        "category": "ES2023",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-unicode-property-escapes-2023.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-unicode-property-escapes-2023",
      "plugin": "es-x"
    },
    "es-x/no-regexp-v-flag": {
      "docs": {
        "description": "disallow RegExp `v` flag.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-v-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-v-flag",
      "plugin": "es-x"
    },
    "es-x/no-regexp-y-flag": {
      "docs": {
        "description": "disallow RegExp `y` flag.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-regexp-y-flag.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-regexp-y-flag",
      "plugin": "es-x"
    },
    "es-x/no-resizable-and-growable-arraybuffers": {
      "docs": {
        "description": "disallow resizable and growable ArrayBuffers",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-resizable-and-growable-arraybuffers.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-resizable-and-growable-arraybuffers",
      "plugin": "es-x"
    },
    "es-x/no-rest-parameters": {
      "docs": {
        "description": "disallow rest parameters.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-rest-parameters.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-rest-parameters",
      "plugin": "es-x"
    },
    "es-x/no-rest-spread-properties": {
      "docs": {
        "description": "disallow rest/spread properties.",
        "category": "ES2018",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-rest-spread-properties.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-rest-spread-properties",
      "plugin": "es-x"
    },
    "es-x/no-set": {
      "docs": {
        "description": "disallow the `Set` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set",
      "plugin": "es-x"
    },
    "es-x/no-set-prototype-difference": {
      "docs": {
        "description": "disallow the `Set.prototype.difference` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-difference.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set-prototype-difference",
      "plugin": "es-x"
    },
    "es-x/no-set-prototype-intersection": {
      "docs": {
        "description": "disallow the `Set.prototype.intersection` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-intersection.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set-prototype-intersection",
      "plugin": "es-x"
    },
    "es-x/no-set-prototype-isdisjointfrom": {
      "docs": {
        "description": "disallow the `Set.prototype.isDisjointFrom` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-isdisjointfrom.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set-prototype-isdisjointfrom",
      "plugin": "es-x"
    },
    "es-x/no-set-prototype-issubsetof": {
      "docs": {
        "description": "disallow the `Set.prototype.isSubsetOf` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-issubsetof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set-prototype-issubsetof",
      "plugin": "es-x"
    },
    "es-x/no-set-prototype-issupersetof": {
      "docs": {
        "description": "disallow the `Set.prototype.isSupersetOf` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-issupersetof.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set-prototype-issupersetof",
      "plugin": "es-x"
    },
    "es-x/no-set-prototype-symmetricdifference": {
      "docs": {
        "description": "disallow the `Set.prototype.symmetricDifference` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-symmetricdifference.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set-prototype-symmetricdifference",
      "plugin": "es-x"
    },
    "es-x/no-set-prototype-union": {
      "docs": {
        "description": "disallow the `Set.prototype.union` method.",
        "category": "ES2025",
        "proposal": "set-methods",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-set-prototype-union.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-set-prototype-union",
      "plugin": "es-x"
    },
    "es-x/no-shadow-catch-param": {
      "docs": {
        "description": "disallow identifiers from shadowing catch parameter names.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-shadow-catch-param.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-shadow-catch-param",
      "plugin": "es-x"
    },
    "es-x/no-shared-array-buffer": {
      "docs": {
        "description": "disallow the `SharedArrayBuffer` class.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-shared-array-buffer.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-shared-array-buffer",
      "plugin": "es-x"
    },
    "es-x/no-spread-elements": {
      "docs": {
        "description": "disallow spread elements.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-spread-elements.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-spread-elements",
      "plugin": "es-x"
    },
    "es-x/no-string-create-html-methods": {
      "docs": {
        "description": "disallow HTML creation methods of string instances.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-create-html-methods.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-create-html-methods",
      "plugin": "es-x"
    },
    "es-x/no-string-fromcodepoint": {
      "docs": {
        "description": "disallow the `String.fromCodePoint` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-fromcodepoint.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-fromcodepoint",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-at": {
      "docs": {
        "description": "disallow the `String.prototype.at()` methods.",
        "category": "ES2022",
        "proposal": "relative-indexing-method",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-at.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-at",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-codepointat": {
      "docs": {
        "description": "disallow the `String.prototype.codePointAt` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-codepointat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-codepointat",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-endswith": {
      "docs": {
        "description": "disallow the `String.prototype.endsWith` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-endswith.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-endswith",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-includes": {
      "docs": {
        "description": "disallow the `String.prototype.includes` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-includes.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-includes",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-iswellformed": {
      "docs": {
        "description": "disallow the `String.prototype.isWellFormed` methods.",
        "category": "ES2024",
        "recommended": false,
        "proposal": "is-usv-string",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-iswellformed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-iswellformed",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-iswellformed-towellformed": {
      "deprecated": true,
      "docs": {
        "description": "disallow the `String.prototype.{isWellFormed,toWellFormed}` methods.",
        "category": "ES2024",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-iswellformed-towellformed.html"
      },
      "fixable": null,
      "replacedBy": [
        "no-string-prototype-iswellformed",
        "no-string-prototype-towellformed"
      ],
      "type": "problem",
      "name": "es-x/no-string-prototype-iswellformed-towellformed",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-matchall": {
      "docs": {
        "description": "disallow the `String.prototype.matchAll` method.",
        "category": "ES2020",
        "proposal": "string-matchall",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-matchall.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-matchall",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-normalize": {
      "docs": {
        "description": "disallow the `String.prototype.normalize` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-normalize.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-normalize",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-padstart-padend": {
      "docs": {
        "description": "disallow the `String.prototype.{padStart,padEnd}` methods.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-padstart-padend.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-padstart-padend",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-repeat": {
      "docs": {
        "description": "disallow the `String.prototype.repeat` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-repeat.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-repeat",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-replaceall": {
      "docs": {
        "description": "disallow the `String.prototype.replaceAll` method.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-replaceall.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-replaceall",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-startswith": {
      "docs": {
        "description": "disallow the `String.prototype.startsWith` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-startswith.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-startswith",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-substr": {
      "docs": {
        "description": "disallow the `String.prototype.substr` method.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-substr.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-substr",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-towellformed": {
      "docs": {
        "description": "disallow the `String.prototype.toWellFormed` methods.",
        "category": "ES2024",
        "recommended": false,
        "proposal": "is-usv-string",
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-towellformed.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-towellformed",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-trim": {
      "docs": {
        "description": "disallow the `String.prototype.trim` method.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-trim.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-trim",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-trimleft-trimright": {
      "docs": {
        "description": "disallow the `String.prototype.{trimLeft,trimRight}` methods.",
        "category": "legacy",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-trimleft-trimright.html"
      },
      "fixable": "code",
      "type": "problem",
      "hasSuggestions": true,
      "name": "es-x/no-string-prototype-trimleft-trimright",
      "plugin": "es-x"
    },
    "es-x/no-string-prototype-trimstart-trimend": {
      "docs": {
        "description": "disallow the `String.prototype.{trimStart,trimEnd}` methods.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-prototype-trimstart-trimend.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-prototype-trimstart-trimend",
      "plugin": "es-x"
    },
    "es-x/no-string-raw": {
      "docs": {
        "description": "disallow the `String.raw` method.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-string-raw.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-string-raw",
      "plugin": "es-x"
    },
    "es-x/no-subclassing-builtins": {
      "docs": {
        "description": "disallow the subclassing of the built-in classes.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-subclassing-builtins.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-subclassing-builtins",
      "plugin": "es-x"
    },
    "es-x/no-suppressederror": {
      "docs": {
        "description": "disallow the `SuppressedError` class.",
        "category": "ES2026",
        "proposal": "explicit-resource-management",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-suppressederror.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-suppressederror",
      "plugin": "es-x"
    },
    "es-x/no-symbol": {
      "docs": {
        "description": "disallow the `Symbol` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-symbol.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-symbol",
      "plugin": "es-x"
    },
    "es-x/no-symbol-asyncdispose": {
      "docs": {
        "description": "disallow the `Symbol.asyncDispose` property",
        "category": "ES2026",
        "proposal": "explicit-resource-management",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-symbol-asyncdispose.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-symbol-asyncdispose",
      "plugin": "es-x"
    },
    "es-x/no-symbol-dispose": {
      "docs": {
        "description": "disallow the `Symbol.dispose` property",
        "category": "ES2026",
        "proposal": "explicit-resource-management",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-symbol-dispose.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-symbol-dispose",
      "plugin": "es-x"
    },
    "es-x/no-symbol-matchall": {
      "docs": {
        "description": "disallow the `Symbol.matchAll` property",
        "category": "ES2020",
        "proposal": "string-matchall",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-symbol-matchall.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-symbol-matchall",
      "plugin": "es-x"
    },
    "es-x/no-symbol-prototype-description": {
      "docs": {
        "description": "disallow the `Symbol.prototype.description` property.",
        "category": "ES2019",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-symbol-prototype-description.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-symbol-prototype-description",
      "plugin": "es-x"
    },
    "es-x/no-template-literals": {
      "docs": {
        "description": "disallow template literals.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-template-literals.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-template-literals",
      "plugin": "es-x"
    },
    "es-x/no-top-level-await": {
      "docs": {
        "description": "disallow top-level `await`.",
        "category": "ES2022",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-top-level-await.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-top-level-await",
      "plugin": "es-x"
    },
    "es-x/no-trailing-commas": {
      "docs": {
        "description": "disallow trailing commas in array/object literals.",
        "category": "ES5",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-trailing-commas.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-trailing-commas",
      "plugin": "es-x"
    },
    "es-x/no-trailing-dynamic-import-commas": {
      "docs": {
        "description": "disallow trailing commas in `import()`",
        "category": "ES2025",
        "proposal": "import-attributes",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-trailing-dynamic-import-commas.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-trailing-dynamic-import-commas",
      "plugin": "es-x"
    },
    "es-x/no-trailing-function-commas": {
      "docs": {
        "description": "disallow trailing commas in parameter/argument lists.",
        "category": "ES2017",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-trailing-function-commas.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-trailing-function-commas",
      "plugin": "es-x"
    },
    "es-x/no-typed-arrays": {
      "docs": {
        "description": "disallow ES2015 typed arrays.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-typed-arrays.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-typed-arrays",
      "plugin": "es-x"
    },
    "es-x/no-unicode-codepoint-escapes": {
      "docs": {
        "description": "disallow Unicode code point escape sequences.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-unicode-codepoint-escapes.html"
      },
      "fixable": "code",
      "type": "problem",
      "name": "es-x/no-unicode-codepoint-escapes",
      "plugin": "es-x"
    },
    "es-x/no-using-declarations": {
      "docs": {
        "description": "disallow `using` and `await using` declarations",
        "category": "ES2026",
        "proposal": "explicit-resource-management",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-using-declarations.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-using-declarations",
      "plugin": "es-x"
    },
    "es-x/no-weak-map": {
      "docs": {
        "description": "disallow the `WeakMap` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-weak-map.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-weak-map",
      "plugin": "es-x"
    },
    "es-x/no-weak-set": {
      "docs": {
        "description": "disallow the `WeakSet` class.",
        "category": "ES2015",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-weak-set.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-weak-set",
      "plugin": "es-x"
    },
    "es-x/no-weakrefs": {
      "docs": {
        "description": "disallow the `WeakRef` and `FinalizationRegistry` class.",
        "category": "ES2021",
        "recommended": false,
        "url": "http://eslint-community.github.io/eslint-plugin-es-x/rules/no-weakrefs.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "es-x/no-weakrefs",
      "plugin": "es-x"
    },
    "eslint-comments/disable-enable-pair": {
      "docs": {
        "description": "require a `eslint-enable` comment for every `eslint-disable` comment",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/disable-enable-pair.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "eslint-comments/disable-enable-pair",
      "plugin": "eslint-comments"
    },
    "eslint-comments/no-aggregating-enable": {
      "docs": {
        "description": "disallow a `eslint-enable` comment for multiple `eslint-disable` comments",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-aggregating-enable.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "eslint-comments/no-aggregating-enable",
      "plugin": "eslint-comments"
    },
    "eslint-comments/no-duplicate-disable": {
      "docs": {
        "description": "disallow duplicate `eslint-disable` comments",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-duplicate-disable.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "eslint-comments/no-duplicate-disable",
      "plugin": "eslint-comments"
    },
    "eslint-comments/no-restricted-disable": {
      "docs": {
        "description": "disallow `eslint-disable` comments about specific rules",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-restricted-disable.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "eslint-comments/no-restricted-disable",
      "plugin": "eslint-comments"
    },
    "eslint-comments/no-unlimited-disable": {
      "docs": {
        "description": "disallow `eslint-disable` comments without rule names",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-unlimited-disable.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "eslint-comments/no-unlimited-disable",
      "plugin": "eslint-comments"
    },
    "eslint-comments/no-unused-disable": {
      "docs": {
        "description": "disallow unused `eslint-disable` comments",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-unused-disable.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "eslint-comments/no-unused-disable",
      "plugin": "eslint-comments"
    },
    "eslint-comments/no-unused-enable": {
      "docs": {
        "description": "disallow unused `eslint-enable` comments",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-unused-enable.html"
      },
      "fixable": null,
      "type": "problem",
      "name": "eslint-comments/no-unused-enable",
      "plugin": "eslint-comments"
    },
    "eslint-comments/no-use": {
      "docs": {
        "description": "disallow ESLint directive-comments",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/no-use.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "eslint-comments/no-use",
      "plugin": "eslint-comments"
    },
    "eslint-comments/require-description": {
      "docs": {
        "description": "require include descriptions in ESLint directive-comments",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://eslint-community.github.io/eslint-plugin-eslint-comments/rules/require-description.html"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "eslint-comments/require-description",
      "plugin": "eslint-comments"
    },
    "github/a11y-no-visually-hidden-interactive-element": {
      "type": "problem",
      "docs": {
        "description": "enforce that interactive elements are not visually hidden",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/a11y-no-visually-hidden-interactive-element.md",
        "recommended": false
      },
      "name": "github/a11y-no-visually-hidden-interactive-element",
      "plugin": "github"
    },
    "github/a11y-no-generic-link-text": {
      "type": "problem",
      "docs": {
        "description": "disallow generic link text",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/a11y-no-generic-link-text.md",
        "recommended": false
      },
      "deprecated": true,
      "replacedBy": [
        "jsx-a11y/anchor-ambiguous-text"
      ],
      "name": "github/a11y-no-generic-link-text",
      "plugin": "github"
    },
    "github/a11y-no-title-attribute": {
      "type": "problem",
      "docs": {
        "description": "disallow using the title attribute",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/a11y-no-title-attribute.md",
        "recommended": false
      },
      "name": "github/a11y-no-title-attribute",
      "plugin": "github"
    },
    "github/a11y-aria-label-is-well-formatted": {
      "type": "problem",
      "docs": {
        "description": "enforce [aria-label] text to be formatted as you would visual text.",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/a11y-aria-label-is-well-formatted.md",
        "recommended": false
      },
      "name": "github/a11y-aria-label-is-well-formatted",
      "plugin": "github"
    },
    "github/a11y-role-supports-aria-props": {
      "type": "problem",
      "docs": {
        "description": "enforce that elements with explicit or implicit roles defined contain only `aria-*` properties supported by that `role`.",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/a11y-role-supports-aria-props.md",
        "recommended": false
      },
      "name": "github/a11y-role-supports-aria-props",
      "plugin": "github"
    },
    "github/a11y-svg-has-accessible-name": {
      "type": "problem",
      "docs": {
        "description": "require SVGs to have an accessible name",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/a11y-svg-has-accessible-name.md",
        "recommended": false
      },
      "name": "github/a11y-svg-has-accessible-name",
      "plugin": "github"
    },
    "github/array-foreach": {
      "type": "suggestion",
      "docs": {
        "description": "enforce `for..of` loops over `Array.forEach`",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/array-foreach.md",
        "recommended": true
      },
      "name": "github/array-foreach",
      "plugin": "github"
    },
    "github/async-currenttarget": {
      "type": "problem",
      "docs": {
        "description": "disallow `event.currentTarget` calls inside of async functions",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/async-currenttarget.md",
        "recommended": false
      },
      "name": "github/async-currenttarget",
      "plugin": "github"
    },
    "github/async-preventdefault": {
      "type": "problem",
      "docs": {
        "description": "disallow `event.preventDefault` calls inside of async functions",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/async-preventdefault.md",
        "recommended": false
      },
      "name": "github/async-preventdefault",
      "plugin": "github"
    },
    "github/authenticity-token": {
      "type": "problem",
      "docs": {
        "description": "disallow usage of CSRF tokens in JavaScript",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/authenticity-token.md",
        "recommended": false
      },
      "name": "github/authenticity-token",
      "plugin": "github"
    },
    "github/filenames-match-regex": {
      "type": "problem",
      "docs": {
        "description": "require filenames to match a regex naming convention",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/filenames-match-regex.md",
        "recommended": true
      },
      "name": "github/filenames-match-regex",
      "plugin": "github"
    },
    "github/get-attribute": {
      "type": "problem",
      "docs": {
        "description": "disallow wrong usage of attribute names",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/get-attribute.md",
        "recommended": false
      },
      "fixable": "code",
      "name": "github/get-attribute",
      "plugin": "github"
    },
    "github/js-class-name": {
      "type": "suggestion",
      "docs": {
        "description": "enforce a naming convention for js- prefixed classes",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/js-class-name.md",
        "recommended": false
      },
      "name": "github/js-class-name",
      "plugin": "github"
    },
    "github/no-blur": {
      "type": "problem",
      "docs": {
        "description": "disallow usage of `Element.prototype.blur()`",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-blur.md",
        "recommended": false
      },
      "name": "github/no-blur",
      "plugin": "github"
    },
    "github/no-d-none": {
      "type": "problem",
      "docs": {
        "description": "disallow usage the `d-none` CSS class",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-d-none.md",
        "recommended": false
      },
      "name": "github/no-d-none",
      "plugin": "github"
    },
    "github/no-dataset": {
      "type": "problem",
      "docs": {
        "description": "enforce usage of `Element.prototype.getAttribute` instead of `Element.prototype.datalist`",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-dataset.md",
        "recommended": false
      },
      "name": "github/no-dataset",
      "plugin": "github"
    },
    "github/no-implicit-buggy-globals": {
      "type": "problem",
      "docs": {
        "description": "disallow implicit global variables",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-implicit-buggy-globals.md",
        "recommended": true
      },
      "name": "github/no-implicit-buggy-globals",
      "plugin": "github"
    },
    "github/no-inner-html": {
      "type": "problem",
      "docs": {
        "description": "disallow `Element.prototype.innerHTML` in favor of `Element.prototype.textContent`",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-inner-html.md",
        "recommended": false
      },
      "name": "github/no-inner-html",
      "plugin": "github"
    },
    "github/no-innerText": {
      "type": "problem",
      "docs": {
        "description": "disallow `Element.prototype.innerText` in favor of `Element.prototype.textContent`",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-innerText.md",
        "recommended": false
      },
      "fixable": "code",
      "name": "github/no-innerText",
      "plugin": "github"
    },
    "github/no-dynamic-script-tag": {
      "type": "suggestion",
      "docs": {
        "description": "disallow creating dynamic script tags",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-dynamic-script-tag.md",
        "recommended": true
      },
      "name": "github/no-dynamic-script-tag",
      "plugin": "github"
    },
    "github/no-then": {
      "type": "suggestion",
      "docs": {
        "description": "enforce using `async/await` syntax over Promises",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-then.md",
        "recommended": true
      },
      "name": "github/no-then",
      "plugin": "github"
    },
    "github/no-useless-passive": {
      "type": "suggestion",
      "docs": {
        "description": "disallow marking a event handler as passive when it has no effect",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/no-useless-passive.md",
        "recommended": false
      },
      "fixable": "code",
      "name": "github/no-useless-passive",
      "plugin": "github"
    },
    "github/prefer-observers": {
      "type": "suggestion",
      "docs": {
        "description": "disallow poorly performing event listeners",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/prefer-observers.md",
        "recommended": false
      },
      "name": "github/prefer-observers",
      "plugin": "github"
    },
    "github/require-passive-events": {
      "type": "suggestion",
      "docs": {
        "description": "enforce marking high frequency event handlers as passive",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/require-passive-events.md",
        "recommended": false
      },
      "name": "github/require-passive-events",
      "plugin": "github"
    },
    "github/unescaped-html-literal": {
      "type": "problem",
      "docs": {
        "description": "disallow unescaped HTML literals",
        "url": "https://github.com/github/eslint-plugin-github/blob/v6.0.0/docs/rules/unescaped-html-literal.md",
        "recommended": false
      },
      "name": "github/unescaped-html-literal",
      "plugin": "github"
    },
    "html/require-lang": {
      "type": "code",
      "docs": {
        "description": "Require `lang` attribute on `<html>` tag",
        "category": "SEO",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/require-lang"
      },
      "fixable": null,
      "name": "html/require-lang",
      "plugin": "html"
    },
    "html/require-img-alt": {
      "type": "suggestion",
      "docs": {
        "description": "Require `alt` attribute on `<img>` tag",
        "category": "Accessibility",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/require-img-alt"
      },
      "fixable": null,
      "hasSuggestions": true,
      "name": "html/require-img-alt",
      "plugin": "html"
    },
    "html/require-doctype": {
      "type": "code",
      "docs": {
        "description": "Require `<!DOCTYPE HTML>` in HTML",
        "category": "Best Practice",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/require-doctype"
      },
      "fixable": true,
      "name": "html/require-doctype",
      "plugin": "html"
    },
    "html/require-title": {
      "type": "code",
      "docs": {
        "description": "Require `<title>` in the `<head>`",
        "category": "SEO",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/require-title"
      },
      "fixable": null,
      "name": "html/require-title",
      "plugin": "html"
    },
    "html/no-duplicate-id": {
      "type": "code",
      "docs": {
        "description": "Disallow duplicate id attributes",
        "category": "Best Practice",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/no-duplicate-id"
      },
      "fixable": null,
      "name": "html/no-duplicate-id",
      "plugin": "html"
    },
    "html/no-inline-styles": {
      "type": "code",
      "docs": {
        "description": "Disallow using inline style",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-inline-styles"
      },
      "fixable": null,
      "name": "html/no-inline-styles",
      "plugin": "html"
    },
    "html/no-multiple-h1": {
      "type": "code",
      "docs": {
        "description": "Disallow multiple `<h1></h1>`.",
        "category": "SEO",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/no-multiple-h1"
      },
      "fixable": null,
      "name": "html/no-multiple-h1",
      "plugin": "html"
    },
    "html/no-extra-spacing-attrs": {
      "type": "code",
      "docs": {
        "description": "Disallow extra spacing around attributes",
        "category": "Style",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/no-extra-spacing-attrs"
      },
      "fixable": true,
      "name": "html/no-extra-spacing-attrs",
      "plugin": "html"
    },
    "html/no-extra-spacing-text": {
      "type": "code",
      "docs": {
        "description": "Disallow unnecessary consecutive spaces",
        "category": "Style",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-extra-spacing-text"
      },
      "fixable": true,
      "name": "html/no-extra-spacing-text",
      "plugin": "html"
    },
    "html/attrs-newline": {
      "type": "code",
      "docs": {
        "description": "Enforce newline between attributes",
        "category": "Style",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/attrs-newline"
      },
      "fixable": true,
      "name": "html/attrs-newline",
      "plugin": "html"
    },
    "html/element-newline": {
      "type": "code",
      "docs": {
        "description": "Enforce newline between elements.",
        "category": "Style",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/element-newline"
      },
      "fixable": true,
      "name": "html/element-newline",
      "plugin": "html"
    },
    "html/no-skip-heading-levels": {
      "type": "code",
      "docs": {
        "description": "Disallow skipping heading levels",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-skip-heading-levels"
      },
      "fixable": null,
      "name": "html/no-skip-heading-levels",
      "plugin": "html"
    },
    "html/require-li-container": {
      "type": "code",
      "docs": {
        "description": "Enforce `<li>` to be in `<ul>`, `<ol>` or `<menu>`.",
        "category": "Best Practice",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/require-li-container"
      },
      "fixable": null,
      "name": "html/require-li-container",
      "plugin": "html"
    },
    "html/indent": {
      "type": "code",
      "docs": {
        "description": "Enforce consistent indentation",
        "category": "Style",
        "recommended": true
      },
      "fixable": true,
      "name": "html/indent",
      "plugin": "html"
    },
    "html/quotes": {
      "type": "code",
      "docs": {
        "description": "Enforce consistent quoting attributes with double(\") or single(')",
        "category": "Style",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/quotes"
      },
      "fixable": true,
      "name": "html/quotes",
      "plugin": "html"
    },
    "html/id-naming-convention": {
      "type": "code",
      "docs": {
        "description": "Enforce consistent naming of id attributes",
        "category": "Style",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/id-naming-convention"
      },
      "fixable": null,
      "name": "html/id-naming-convention",
      "plugin": "html"
    },
    "html/no-obsolete-tags": {
      "type": "code",
      "docs": {
        "description": "Disallow use of obsolete elements in HTML5",
        "category": "Best Practice",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/no-obsolete-tags"
      },
      "fixable": null,
      "name": "html/no-obsolete-tags",
      "plugin": "html"
    },
    "html/require-attrs": {
      "type": "code",
      "docs": {
        "description": "Require specified attributes",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-attrs"
      },
      "fixable": "code",
      "name": "html/require-attrs",
      "plugin": "html"
    },
    "html/require-closing-tags": {
      "type": "code",
      "docs": {
        "description": "Require closing tags.",
        "category": "Best Practice",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/require-closing-tags"
      },
      "fixable": true,
      "name": "html/require-closing-tags",
      "plugin": "html"
    },
    "html/require-meta-description": {
      "type": "code",
      "docs": {
        "description": "Require use of `<meta name=\"description\">` in `<head>`",
        "category": "SEO",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-meta-description"
      },
      "fixable": null,
      "name": "html/require-meta-description",
      "plugin": "html"
    },
    "html/require-frame-title": {
      "type": "code",
      "docs": {
        "description": "Require `title` in `<frame>`, `<iframe>`",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-frame-title"
      },
      "fixable": false,
      "name": "html/require-frame-title",
      "plugin": "html"
    },
    "html/no-non-scalable-viewport": {
      "type": "code",
      "docs": {
        "description": "Disallow use of `user-scalable=no` in `<meta name=\"viewport\">`.",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-non-scalable-viewport"
      },
      "fixable": null,
      "name": "html/no-non-scalable-viewport",
      "plugin": "html"
    },
    "html/no-positive-tabindex": {
      "type": "code",
      "docs": {
        "description": "Disallow use of positive `tabindex`.",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-positive-tabindex"
      },
      "fixable": null,
      "name": "html/no-positive-tabindex",
      "plugin": "html"
    },
    "html/require-meta-viewport": {
      "type": "code",
      "docs": {
        "description": "Enforce use of `<meta name=\"viewport\">` in `<head>`",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-meta-viewport"
      },
      "fixable": null,
      "name": "html/require-meta-viewport",
      "plugin": "html"
    },
    "html/require-meta-charset": {
      "type": "code",
      "docs": {
        "description": "Enforce use of `<meta charset=\"...\">` in `<head>`",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-meta-charset"
      },
      "fixable": null,
      "name": "html/require-meta-charset",
      "plugin": "html"
    },
    "html/no-target-blank": {
      "type": "code",
      "docs": {
        "description": "Disallow usage of unsafe `target='_blank'`",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-target-blank"
      },
      "fixable": null,
      "name": "html/no-target-blank",
      "plugin": "html"
    },
    "html/no-duplicate-attrs": {
      "type": "code",
      "docs": {
        "description": "Disallow duplicate attributes",
        "category": "Best Practice",
        "recommended": true,
        "url": "https://html-eslint.org/docs/rules/no-duplicate-attrs"
      },
      "fixable": null,
      "hasSuggestions": true,
      "name": "html/no-duplicate-attrs",
      "plugin": "html"
    },
    "html/no-abstract-roles": {
      "type": "code",
      "docs": {
        "description": "Disallow use of abstract roles",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-abstract-roles"
      },
      "fixable": null,
      "name": "html/no-abstract-roles",
      "plugin": "html"
    },
    "html/require-button-type": {
      "type": "code",
      "docs": {
        "description": "Require use of the button element with a valid type attribute.",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-button-type"
      },
      "fixable": true,
      "hasSuggestions": true,
      "name": "html/require-button-type",
      "plugin": "html"
    },
    "html/no-aria-hidden-body": {
      "type": "code",
      "docs": {
        "description": "Disallow use of aria-hidden attributes on the `body` element.",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-aria-hidden-body"
      },
      "fixable": null,
      "name": "html/no-aria-hidden-body",
      "plugin": "html"
    },
    "html/no-aria-hidden-on-focusable": {
      "type": "code",
      "docs": {
        "description": "Disallow aria-hidden=\"true\" on focusable elements",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-aria-hidden-on-focusable"
      },
      "fixable": null,
      "name": "html/no-aria-hidden-on-focusable",
      "plugin": "html"
    },
    "html/no-multiple-empty-lines": {
      "type": "code",
      "docs": {
        "description": "Disallow multiple empty lines",
        "category": "Style",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-multiple-empty-lines"
      },
      "fixable": "whitespace",
      "name": "html/no-multiple-empty-lines",
      "plugin": "html"
    },
    "html/no-accesskey-attrs": {
      "type": "code",
      "docs": {
        "description": "Disallow use of accesskey attribute",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-accesskey-attrs"
      },
      "fixable": null,
      "name": "html/no-accesskey-attrs",
      "plugin": "html"
    },
    "html/no-restricted-attrs": {
      "type": "code",
      "docs": {
        "description": "Disallow specified attributes",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-restricted-attrs"
      },
      "fixable": null,
      "name": "html/no-restricted-attrs",
      "plugin": "html"
    },
    "html/no-trailing-spaces": {
      "type": "layout",
      "docs": {
        "description": "Disallow trailing whitespace at the end of lines",
        "recommended": false,
        "category": "Style",
        "url": "https://html-eslint.org/docs/rules/no-trailing-spaces"
      },
      "fixable": true,
      "name": "html/no-trailing-spaces",
      "plugin": "html"
    },
    "html/no-restricted-attr-values": {
      "type": "code",
      "docs": {
        "description": "Disallow specified attributes",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-restricted-attr-values"
      },
      "fixable": null,
      "name": "html/no-restricted-attr-values",
      "plugin": "html"
    },
    "html/no-script-style-type": {
      "type": "code",
      "docs": {
        "description": "Enforce to omit type attributes for style sheets and scripts",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-script-style-type"
      },
      "fixable": "code",
      "name": "html/no-script-style-type",
      "plugin": "html"
    },
    "html/no-heading-inside-button": {
      "type": "code",
      "docs": {
        "description": "Disallows the use of heading elements inside <button>.",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-heading-inside-button"
      },
      "fixable": null,
      "name": "html/no-heading-inside-button",
      "plugin": "html"
    },
    "html/no-invalid-role": {
      "type": "code",
      "docs": {
        "description": "Disallows use of invalid role.",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-invalid-role"
      },
      "fixable": null,
      "name": "html/no-invalid-role",
      "plugin": "html"
    },
    "html/no-nested-interactive": {
      "type": "code",
      "docs": {
        "description": "Disallows nested interactive elements",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-nested-interactive"
      },
      "fixable": null,
      "name": "html/no-nested-interactive",
      "plugin": "html"
    },
    "html/lowercase": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce use of lowercase for tag and attribute names.",
        "category": "Style",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/lowercase"
      },
      "fixable": "code",
      "name": "html/lowercase",
      "plugin": "html"
    },
    "html/require-open-graph-protocol": {
      "type": "code",
      "docs": {
        "description": "Enforce use of specified meta tags for open graph protocol.",
        "category": "SEO",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-open-graph-protocol"
      },
      "fixable": null,
      "name": "html/require-open-graph-protocol",
      "plugin": "html"
    },
    "html/require-form-method": {
      "type": "code",
      "docs": {
        "description": "Require `method` attribute in `<form>`",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-form-method"
      },
      "fixable": false,
      "name": "html/require-form-method",
      "plugin": "html"
    },
    "html/sort-attrs": {
      "type": "code",
      "docs": {
        "description": "Enforce attributes alphabetical sorting",
        "category": "Style",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/sort-attrs"
      },
      "fixable": "code",
      "name": "html/sort-attrs",
      "plugin": "html"
    },
    "html/prefer-https": {
      "type": "code",
      "docs": {
        "description": "Prefer to use HTTPS for embedded resources",
        "recommended": false,
        "category": "Best Practice",
        "url": "https://html-eslint.org/docs/rules/prefer-https"
      },
      "fixable": false,
      "name": "html/prefer-https",
      "plugin": "html"
    },
    "html/require-input-label": {
      "type": "code",
      "docs": {
        "description": "Enforces use of label for form elements(`input`, `textarea`, `select`)",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-input-label"
      },
      "fixable": null,
      "name": "html/require-input-label",
      "plugin": "html"
    },
    "html/max-element-depth": {
      "type": "code",
      "docs": {
        "description": "Enforce maximum element depth",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/max-element-depth"
      },
      "fixable": null,
      "name": "html/max-element-depth",
      "plugin": "html"
    },
    "html/require-explicit-size": {
      "type": "code",
      "docs": {
        "description": "Enforces that some elements (img, iframe) have explicitly defined width and height attributes.",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/require-explicit-size"
      },
      "fixable": null,
      "name": "html/require-explicit-size",
      "plugin": "html"
    },
    "html/use-baseline": {
      "type": "code",
      "docs": {
        "description": "Enforce the use of baseline features.",
        "recommended": true,
        "category": "Best Practice",
        "url": "https://html-eslint.org/docs/rules/use-baseline"
      },
      "fixable": null,
      "name": "html/use-baseline",
      "plugin": "html"
    },
    "html/no-duplicate-class": {
      "type": "code",
      "docs": {
        "description": "Disallow duplicate class names",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-duplicate-class"
      },
      "fixable": "code",
      "name": "html/no-duplicate-class",
      "plugin": "html"
    },
    "html/no-empty-headings": {
      "type": "code",
      "docs": {
        "description": "Disallow empty or inaccessible headings.",
        "category": "Accessibility",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-empty-headings"
      },
      "fixable": null,
      "name": "html/no-empty-headings",
      "plugin": "html"
    },
    "html/no-invalid-entity": {
      "type": "code",
      "docs": {
        "description": "Disallows the use of invalid HTML entities",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-invalid-entity"
      },
      "fixable": null,
      "hasSuggestions": false,
      "name": "html/no-invalid-entity",
      "plugin": "html"
    },
    "html/no-duplicate-in-head": {
      "type": "code",
      "docs": {
        "description": "Disallow duplicate tags in `<head>`",
        "category": "Best Practice",
        "recommended": false,
        "url": "https://html-eslint.org/docs/rules/no-duplicate-in-head"
      },
      "fixable": null,
      "name": "html/no-duplicate-in-head",
      "plugin": "html"
    },
    "html/no-ineffective-attrs": {
      "docs": {
        "description": "Disallow HTML attributes that have no effect in their context",
        "category": "Best Practice",
        "recommended": false
      },
      "type": "problem",
      "name": "html/no-ineffective-attrs",
      "plugin": "html"
    },
    "import-newlines/enforce": {
      "type": "layout",
      "docs": {
        "description": "enforce multiple lines for import statements past a certain number of items",
        "category": "Stylistic Issues",
        "url": "https://github.com/SeinopSys/eslint-plugin-import-newlines"
      },
      "fixable": "whitespace",
      "name": "import-newlines/enforce",
      "plugin": "import-newlines"
    },
    "import-x/no-unresolved": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure imports point to a file/module that can be resolved.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-unresolved.md"
      },
      "name": "import-x/no-unresolved",
      "plugin": "import-x"
    },
    "import-x/named": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure named imports correspond to a named export in the remote file.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/named.md"
      },
      "name": "import-x/named",
      "plugin": "import-x"
    },
    "import-x/default": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure a default export is present, given a default import.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/default.md"
      },
      "name": "import-x/default",
      "plugin": "import-x"
    },
    "import-x/namespace": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Ensure imported namespaces contain dereferenced properties as they are dereferenced.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/namespace.md"
      },
      "name": "import-x/namespace",
      "plugin": "import-x"
    },
    "import-x/no-namespace": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid namespace (a.k.a. \"wildcard\" `*`) imports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-namespace.md"
      },
      "fixable": "code",
      "name": "import-x/no-namespace",
      "plugin": "import-x"
    },
    "import-x/export": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid any invalid exports, i.e. re-export of the same name.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/export.md"
      },
      "name": "import-x/export",
      "plugin": "import-x"
    },
    "import-x/no-mutable-exports": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid the use of mutable exports with `var` or `let`.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-mutable-exports.md"
      },
      "name": "import-x/no-mutable-exports",
      "plugin": "import-x"
    },
    "import-x/extensions": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure consistent use of file extension within the import path.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/extensions.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "import-x/extensions",
      "plugin": "import-x"
    },
    "import-x/no-restricted-paths": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Enforce which files can be imported in a given folder.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-restricted-paths.md"
      },
      "name": "import-x/no-restricted-paths",
      "plugin": "import-x"
    },
    "import-x/no-internal-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing the submodules of other modules.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-internal-modules.md"
      },
      "name": "import-x/no-internal-modules",
      "plugin": "import-x"
    },
    "import-x/group-exports": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Prefer named exports to be grouped together in a single export declaration.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/group-exports.md"
      },
      "name": "import-x/group-exports",
      "plugin": "import-x"
    },
    "import-x/no-relative-packages": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing packages through relative paths.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-relative-packages.md"
      },
      "fixable": "code",
      "name": "import-x/no-relative-packages",
      "plugin": "import-x"
    },
    "import-x/no-relative-parent-imports": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid importing modules from parent directories.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-relative-parent-imports.md"
      },
      "name": "import-x/no-relative-parent-imports",
      "plugin": "import-x"
    },
    "import-x/consistent-type-specifier-style": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce or ban the use of inline type-only markers for named imports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/consistent-type-specifier-style.md"
      },
      "fixable": "code",
      "name": "import-x/consistent-type-specifier-style",
      "plugin": "import-x"
    },
    "import-x/no-self-import": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid a module from importing itself.",
        "recommended": true,
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-self-import.md"
      },
      "name": "import-x/no-self-import",
      "plugin": "import-x"
    },
    "import-x/no-cycle": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid a module from importing a module with a dependency path back to itself.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-cycle.md"
      },
      "name": "import-x/no-cycle",
      "plugin": "import-x"
    },
    "import-x/no-named-default": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid named default exports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-named-default.md"
      },
      "name": "import-x/no-named-default",
      "plugin": "import-x"
    },
    "import-x/no-named-as-default": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid use of exported name as identifier of default export.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-named-as-default.md"
      },
      "name": "import-x/no-named-as-default",
      "plugin": "import-x"
    },
    "import-x/no-named-as-default-member": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid use of exported name as property of default export.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-named-as-default-member.md"
      },
      "name": "import-x/no-named-as-default-member",
      "plugin": "import-x"
    },
    "import-x/no-anonymous-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid anonymous values as default exports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-anonymous-default-export.md"
      },
      "name": "import-x/no-anonymous-default-export",
      "plugin": "import-x"
    },
    "import-x/no-rename-default": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid importing a default export by a different name.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-rename-default.md"
      },
      "name": "import-x/no-rename-default",
      "plugin": "import-x"
    },
    "import-x/no-unused-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid modules without exports, or exports without matching import in another module.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-unused-modules.md"
      },
      "name": "import-x/no-unused-modules",
      "plugin": "import-x"
    },
    "import-x/no-commonjs": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid CommonJS `require` calls and `module.exports` or `exports.*`.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-commonjs.md"
      },
      "name": "import-x/no-commonjs",
      "plugin": "import-x"
    },
    "import-x/no-amd": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid AMD `require` and `define` calls.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-amd.md"
      },
      "name": "import-x/no-amd",
      "plugin": "import-x"
    },
    "import-x/no-duplicates": {
      "type": "problem",
      "docs": {
        "category": "Style guide",
        "description": "Forbid repeated import of the same module in multiple places.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-duplicates.md"
      },
      "fixable": "code",
      "name": "import-x/no-duplicates",
      "plugin": "import-x"
    },
    "import-x/first": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure all imports appear before other statements.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/first.md"
      },
      "fixable": "code",
      "name": "import-x/first",
      "plugin": "import-x"
    },
    "import-x/max-dependencies": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce the maximum number of dependencies a module can have.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/max-dependencies.md"
      },
      "name": "import-x/max-dependencies",
      "plugin": "import-x"
    },
    "import-x/no-extraneous-dependencies": {
      "type": "problem",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid the use of extraneous packages.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-extraneous-dependencies.md"
      },
      "name": "import-x/no-extraneous-dependencies",
      "plugin": "import-x"
    },
    "import-x/no-absolute-path": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid import of modules using absolute paths.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-absolute-path.md"
      },
      "fixable": "code",
      "name": "import-x/no-absolute-path",
      "plugin": "import-x"
    },
    "import-x/no-nodejs-modules": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid Node.js builtin modules.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-nodejs-modules.md"
      },
      "name": "import-x/no-nodejs-modules",
      "plugin": "import-x"
    },
    "import-x/no-webpack-loader-syntax": {
      "type": "problem",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid webpack loader syntax in imports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-webpack-loader-syntax.md"
      },
      "name": "import-x/no-webpack-loader-syntax",
      "plugin": "import-x"
    },
    "import-x/order": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a convention in module import order.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/order.md"
      },
      "fixable": "code",
      "name": "import-x/order",
      "plugin": "import-x"
    },
    "import-x/newline-after-import": {
      "type": "layout",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a newline after import statements.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/newline-after-import.md"
      },
      "fixable": "whitespace",
      "name": "import-x/newline-after-import",
      "plugin": "import-x"
    },
    "import-x/prefer-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Prefer a default export if module exports a single name or multiple names.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/prefer-default-export.md"
      },
      "name": "import-x/prefer-default-export",
      "plugin": "import-x"
    },
    "import-x/prefer-namespace-import": {
      "type": "problem",
      "docs": {
        "category": "Style guide",
        "description": "Enforce using namespace imports for specific modules, like `react`/`react-dom`, etc.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/prefer-namespace-import.md"
      },
      "fixable": "code",
      "name": "import-x/prefer-namespace-import",
      "plugin": "import-x"
    },
    "import-x/no-default-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid default exports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-default-export.md"
      },
      "name": "import-x/no-default-export",
      "plugin": "import-x"
    },
    "import-x/no-named-export": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid named exports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-named-export.md"
      },
      "name": "import-x/no-named-export",
      "plugin": "import-x"
    },
    "import-x/no-dynamic-require": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid `require()` calls with expressions.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-dynamic-require.md"
      },
      "name": "import-x/no-dynamic-require",
      "plugin": "import-x"
    },
    "import-x/unambiguous": {
      "type": "suggestion",
      "docs": {
        "category": "Module systems",
        "description": "Forbid potentially ambiguous parse goal (`script` vs. `module`).",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/unambiguous.md"
      },
      "name": "import-x/unambiguous",
      "plugin": "import-x"
    },
    "import-x/no-unassigned-import": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Forbid unassigned imports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-unassigned-import.md"
      },
      "name": "import-x/no-unassigned-import",
      "plugin": "import-x"
    },
    "import-x/no-useless-path-segments": {
      "type": "suggestion",
      "docs": {
        "category": "Static analysis",
        "description": "Forbid unnecessary path segments in import and require statements.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-useless-path-segments.md"
      },
      "fixable": "code",
      "name": "import-x/no-useless-path-segments",
      "plugin": "import-x"
    },
    "import-x/dynamic-import-chunkname": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Enforce a leading comment with the webpackChunkName for dynamic imports.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/dynamic-import-chunkname.md"
      },
      "hasSuggestions": true,
      "name": "import-x/dynamic-import-chunkname",
      "plugin": "import-x"
    },
    "import-x/no-import-module-exports": {
      "type": "problem",
      "docs": {
        "category": "Module systems",
        "description": "Forbid import statements with CommonJS module.exports.",
        "recommended": true,
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-import-module-exports.md"
      },
      "fixable": "code",
      "name": "import-x/no-import-module-exports",
      "plugin": "import-x"
    },
    "import-x/no-empty-named-blocks": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid empty named import blocks.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-empty-named-blocks.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "import-x/no-empty-named-blocks",
      "plugin": "import-x"
    },
    "import-x/exports-last": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Ensure all exports appear after other statements.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/exports-last.md"
      },
      "name": "import-x/exports-last",
      "plugin": "import-x"
    },
    "import-x/no-deprecated": {
      "type": "suggestion",
      "docs": {
        "category": "Helpful warnings",
        "description": "Forbid imported names marked with `@deprecated` documentation tag.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/no-deprecated.md"
      },
      "name": "import-x/no-deprecated",
      "plugin": "import-x"
    },
    "import-x/imports-first": {
      "type": "suggestion",
      "docs": {
        "category": "Style guide",
        "description": "Replaced by `import-x/first`.",
        "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/imports-first.md"
      },
      "fixable": "code",
      "deprecated": {
        "message": "Replaced by `import-x/first`.",
        "url": "https://github.com/import-js/eslint-plugin-import/blob/main/CHANGELOG.md#changed-24",
        "deprecatedSince": "2.0.0",
        "replacedBy": [
          {
            "message": "Replaced by `import-x/first`.",
            "rule": {
              "name": "first",
              "url": "https://github.com/un-ts/eslint-plugin-import-x/blob/v4.16.1/docs/rules/first.md"
            }
          }
        ]
      },
      "name": "import-x/imports-first",
      "plugin": "import-x"
    },
    "jsdoc/check-access": {
      "docs": {
        "description": "Checks that `@access` tags have a valid value.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-access.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/check-access",
      "plugin": "jsdoc"
    },
    "jsdoc/check-alignment": {
      "docs": {
        "description": "Reports invalid alignment of JSDoc block asterisks.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-alignment.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "layout",
      "name": "jsdoc/check-alignment",
      "plugin": "jsdoc"
    },
    "jsdoc/check-examples": {
      "docs": {
        "description": "Ensures that (JavaScript) examples within JSDoc adhere to ESLint rules.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-examples.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/check-examples",
      "plugin": "jsdoc"
    },
    "jsdoc/check-indentation": {
      "docs": {
        "description": "Reports invalid padding inside JSDoc blocks.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-indentation.md#repos-sticky-header"
      },
      "type": "layout",
      "name": "jsdoc/check-indentation",
      "plugin": "jsdoc"
    },
    "jsdoc/check-line-alignment": {
      "docs": {
        "description": "Reports invalid alignment of JSDoc block lines.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-line-alignment.md#repos-sticky-header"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "jsdoc/check-line-alignment",
      "plugin": "jsdoc"
    },
    "jsdoc/check-param-names": {
      "docs": {
        "description": "Ensures that parameter names in JSDoc match those in the function declaration.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-param-names.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/check-param-names",
      "plugin": "jsdoc"
    },
    "jsdoc/check-property-names": {
      "docs": {
        "description": "Ensures that property names in JSDoc are not duplicated on the same block and that nested properties have defined roots.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-property-names.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/check-property-names",
      "plugin": "jsdoc"
    },
    "jsdoc/check-syntax": {
      "docs": {
        "description": "Reports against syntax not valid for the mode (e.g., Google Closure Compiler in non-Closure mode).",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-syntax.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/check-syntax",
      "plugin": "jsdoc"
    },
    "jsdoc/check-tag-names": {
      "docs": {
        "description": "Reports invalid block tag names.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-tag-names.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/check-tag-names",
      "plugin": "jsdoc"
    },
    "jsdoc/check-template-names": {
      "docs": {
        "description": "Checks that any `@template` names are actually used in the connected `@typedef` or type alias.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-template-names.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/check-template-names",
      "plugin": "jsdoc"
    },
    "jsdoc/check-types": {
      "docs": {
        "description": "Reports invalid types.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-types.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/check-types",
      "plugin": "jsdoc"
    },
    "jsdoc/check-values": {
      "docs": {
        "description": "This rule checks the values for a handful of tags: `@version`, `@since`, `@license` and `@author`.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/check-values.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/check-values",
      "plugin": "jsdoc"
    },
    "jsdoc/convert-to-jsdoc-comments": {
      "docs": {
        "description": "Converts non-JSDoc comments preceding or following nodes into JSDoc ones",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/convert-to-jsdoc-comments.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/convert-to-jsdoc-comments",
      "plugin": "jsdoc"
    },
    "jsdoc/empty-tags": {
      "docs": {
        "description": "Expects specific tags to be empty of any content.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/empty-tags.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/empty-tags",
      "plugin": "jsdoc"
    },
    "jsdoc/implements-on-classes": {
      "docs": {
        "description": "Reports an issue with any non-constructor function using `@implements`.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/implements-on-classes.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/implements-on-classes",
      "plugin": "jsdoc"
    },
    "jsdoc/imports-as-dependencies": {
      "docs": {
        "description": "Reports if JSDoc `import()` statements point to a package which is not listed in `dependencies` or `devDependencies`",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/imports-as-dependencies.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/imports-as-dependencies",
      "plugin": "jsdoc"
    },
    "jsdoc/informative-docs": {
      "docs": {
        "description": "This rule reports doc comments that only restate their attached name.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/informative-docs.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/informative-docs",
      "plugin": "jsdoc"
    },
    "jsdoc/lines-before-block": {
      "docs": {
        "description": "Enforces minimum number of newlines before JSDoc comment blocks",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/lines-before-block.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/lines-before-block",
      "plugin": "jsdoc"
    },
    "jsdoc/match-description": {
      "docs": {
        "description": "Enforces a regular expression pattern on descriptions.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/match-description.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/match-description",
      "plugin": "jsdoc"
    },
    "jsdoc/match-name": {
      "docs": {
        "description": "Reports the name portion of a JSDoc tag if matching or not matching a given regular expression.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/match-name.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/match-name",
      "plugin": "jsdoc"
    },
    "jsdoc/multiline-blocks": {
      "docs": {
        "description": "Controls how and whether jsdoc blocks can be expressed as single or multiple line blocks.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/multiline-blocks.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/multiline-blocks",
      "plugin": "jsdoc"
    },
    "jsdoc/no-bad-blocks": {
      "docs": {
        "description": "This rule checks for multi-line-style comments which fail to meet the criteria of a jsdoc block.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-bad-blocks.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "layout",
      "name": "jsdoc/no-bad-blocks",
      "plugin": "jsdoc"
    },
    "jsdoc/no-blank-block-descriptions": {
      "docs": {
        "description": "Detects and removes extra lines of a blank block description",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-blank-block-descriptions.md#repos-sticky-header"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "jsdoc/no-blank-block-descriptions",
      "plugin": "jsdoc"
    },
    "jsdoc/no-blank-blocks": {
      "docs": {
        "description": "Removes empty blocks with nothing but possibly line breaks",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-blank-blocks.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/no-blank-blocks",
      "plugin": "jsdoc"
    },
    "jsdoc/no-defaults": {
      "docs": {
        "description": "This rule reports defaults being used on the relevant portion of `@param` or `@default`.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-defaults.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/no-defaults",
      "plugin": "jsdoc"
    },
    "jsdoc/no-missing-syntax": {
      "docs": {
        "description": "Reports when certain comment structures are always expected.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-missing-syntax.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/no-missing-syntax",
      "plugin": "jsdoc"
    },
    "jsdoc/no-multi-asterisks": {
      "docs": {
        "description": "Prevents use of multiple asterisks at the beginning of lines.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-multi-asterisks.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/no-multi-asterisks",
      "plugin": "jsdoc"
    },
    "jsdoc/no-restricted-syntax": {
      "docs": {
        "description": "Reports when certain comment structures are present.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-restricted-syntax.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/no-restricted-syntax",
      "plugin": "jsdoc"
    },
    "jsdoc/no-types": {
      "docs": {
        "description": "This rule reports types being used on `@param` or `@returns`.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-types.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/no-types",
      "plugin": "jsdoc"
    },
    "jsdoc/no-undefined-types": {
      "docs": {
        "description": "Checks that types in jsdoc comments are defined.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/no-undefined-types.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/no-undefined-types",
      "plugin": "jsdoc"
    },
    "jsdoc/require-asterisk-prefix": {
      "docs": {
        "description": "Requires that each JSDoc line starts with an `*`.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-asterisk-prefix.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "layout",
      "name": "jsdoc/require-asterisk-prefix",
      "plugin": "jsdoc"
    },
    "jsdoc/require-description": {
      "docs": {
        "description": "Requires that all functions have a description.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-description.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-description",
      "plugin": "jsdoc"
    },
    "jsdoc/require-description-complete-sentence": {
      "docs": {
        "description": "Requires that block description, explicit `@description`, and `@param`/`@returns` tag descriptions are written in complete sentences.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-description-complete-sentence.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-description-complete-sentence",
      "plugin": "jsdoc"
    },
    "jsdoc/require-example": {
      "docs": {
        "description": "Requires that all functions have examples.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-example.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-example",
      "plugin": "jsdoc"
    },
    "jsdoc/require-file-overview": {
      "docs": {
        "description": "Checks that all files have one `@file`, `@fileoverview`, or `@overview` tag at the beginning of the file.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-file-overview.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-file-overview",
      "plugin": "jsdoc"
    },
    "jsdoc/require-hyphen-before-param-description": {
      "docs": {
        "description": "Requires a hyphen before the `@param` description.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-hyphen-before-param-description.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "layout",
      "name": "jsdoc/require-hyphen-before-param-description",
      "plugin": "jsdoc"
    },
    "jsdoc/require-jsdoc": {
      "docs": {
        "category": "Stylistic Issues",
        "description": "Require JSDoc comments",
        "recommended": true,
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-jsdoc.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-jsdoc",
      "plugin": "jsdoc"
    },
    "jsdoc/require-param": {
      "docs": {
        "description": "Requires that all function parameters are documented.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-param.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-param",
      "plugin": "jsdoc"
    },
    "jsdoc/require-param-description": {
      "docs": {
        "description": "Requires that each `@param` tag has a `description` value.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-param-description.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-param-description",
      "plugin": "jsdoc"
    },
    "jsdoc/require-param-name": {
      "docs": {
        "description": "Requires that all function parameters have names.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-param-name.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-param-name",
      "plugin": "jsdoc"
    },
    "jsdoc/require-param-type": {
      "docs": {
        "description": "Requires that each `@param` tag has a `type` value.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-param-type.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-param-type",
      "plugin": "jsdoc"
    },
    "jsdoc/require-property": {
      "docs": {
        "description": "Requires that all `@typedef` and `@namespace` tags have `@property` when their type is a plain `object`, `Object`, or `PlainObject`.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-property.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-property",
      "plugin": "jsdoc"
    },
    "jsdoc/require-property-description": {
      "docs": {
        "description": "Requires that each `@property` tag has a `description` value.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-property-description.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-property-description",
      "plugin": "jsdoc"
    },
    "jsdoc/require-property-name": {
      "docs": {
        "description": "Requires that all function `@property` tags have names.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-property-name.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-property-name",
      "plugin": "jsdoc"
    },
    "jsdoc/require-property-type": {
      "docs": {
        "description": "Requires that each `@property` tag has a `type` value.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-property-type.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-property-type",
      "plugin": "jsdoc"
    },
    "jsdoc/require-returns": {
      "docs": {
        "description": "Requires that returns are documented.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/require-returns",
      "plugin": "jsdoc"
    },
    "jsdoc/require-returns-check": {
      "docs": {
        "description": "Requires a return statement in function body if a `@returns` tag is specified in jsdoc comment.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns-check.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-returns-check",
      "plugin": "jsdoc"
    },
    "jsdoc/require-returns-description": {
      "docs": {
        "description": "Requires that the `@returns` tag has a `description` value.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns-description.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-returns-description",
      "plugin": "jsdoc"
    },
    "jsdoc/require-returns-type": {
      "docs": {
        "description": "Requires that `@returns` tag has `type` value.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-returns-type.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-returns-type",
      "plugin": "jsdoc"
    },
    "jsdoc/require-template": {
      "docs": {
        "description": "Requires template tags for each generic type parameter",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-template.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-template",
      "plugin": "jsdoc"
    },
    "jsdoc/require-throws": {
      "docs": {
        "description": "Requires that throw statements are documented.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-throws.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-throws",
      "plugin": "jsdoc"
    },
    "jsdoc/require-yields": {
      "docs": {
        "description": "Requires yields are documented.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-yields.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-yields",
      "plugin": "jsdoc"
    },
    "jsdoc/require-yields-check": {
      "docs": {
        "description": "Requires a yield statement in function body if a `@yields` tag is specified in jsdoc comment.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/require-yields-check.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/require-yields-check",
      "plugin": "jsdoc"
    },
    "jsdoc/sort-tags": {
      "docs": {
        "description": "Sorts tags by a specified sequence according to tag name.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/sort-tags.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/sort-tags",
      "plugin": "jsdoc"
    },
    "jsdoc/tag-lines": {
      "docs": {
        "description": "Enforces lines (or no lines) between tags.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/tag-lines.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/tag-lines",
      "plugin": "jsdoc"
    },
    "jsdoc/text-escaping": {
      "docs": {
        "description": "Auto-escape certain characters that are input within block and tag descriptions.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/text-escaping.md#repos-sticky-header"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsdoc/text-escaping",
      "plugin": "jsdoc"
    },
    "jsdoc/valid-types": {
      "docs": {
        "description": "Requires all types to be valid JSDoc or Closure compiler types without syntax errors.",
        "url": "https://github.com/gajus/eslint-plugin-jsdoc/blob/main/docs/rules/valid-types.md#repos-sticky-header"
      },
      "type": "suggestion",
      "name": "jsdoc/valid-types",
      "plugin": "jsdoc"
    },
    "jsonc/array-bracket-newline": {
      "docs": {
        "description": "enforce line breaks after opening and before closing array brackets",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/array-bracket-newline.html",
        "ruleId": "jsonc/array-bracket-newline",
        "ruleName": "array-bracket-newline"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/array-bracket-newline",
      "plugin": "jsonc"
    },
    "jsonc/array-bracket-spacing": {
      "docs": {
        "description": "disallow or enforce spaces inside of brackets",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/array-bracket-spacing.html",
        "ruleId": "jsonc/array-bracket-spacing",
        "ruleName": "array-bracket-spacing"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/array-bracket-spacing",
      "plugin": "jsonc"
    },
    "jsonc/array-element-newline": {
      "docs": {
        "description": "enforce line breaks between array elements",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/array-element-newline.html",
        "ruleId": "jsonc/array-element-newline",
        "ruleName": "array-element-newline"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/array-element-newline",
      "plugin": "jsonc"
    },
    "jsonc/auto": {
      "docs": {
        "description": "apply jsonc rules similar to your configured ESLint core rules",
        "recommended": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/auto.html",
        "ruleId": "jsonc/auto",
        "ruleName": "auto"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsonc/auto",
      "plugin": "jsonc"
    },
    "jsonc/comma-dangle": {
      "docs": {
        "description": "require or disallow trailing commas",
        "recommended": [
          "json"
        ],
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/comma-dangle.html",
        "ruleId": "jsonc/comma-dangle",
        "ruleName": "comma-dangle"
      },
      "type": "layout",
      "fixable": "code",
      "name": "jsonc/comma-dangle",
      "plugin": "jsonc"
    },
    "jsonc/comma-style": {
      "docs": {
        "description": "enforce consistent comma style",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/comma-style.html",
        "ruleId": "jsonc/comma-style",
        "ruleName": "comma-style"
      },
      "type": "layout",
      "fixable": "code",
      "name": "jsonc/comma-style",
      "plugin": "jsonc"
    },
    "jsonc/indent": {
      "docs": {
        "description": "enforce consistent indentation",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/indent.html",
        "ruleId": "jsonc/indent",
        "ruleName": "indent"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/indent",
      "plugin": "jsonc"
    },
    "jsonc/key-name-casing": {
      "docs": {
        "description": "enforce naming convention to property key names",
        "recommended": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/key-name-casing.html",
        "ruleId": "jsonc/key-name-casing",
        "ruleName": "key-name-casing"
      },
      "type": "suggestion",
      "name": "jsonc/key-name-casing",
      "plugin": "jsonc"
    },
    "jsonc/key-spacing": {
      "docs": {
        "description": "enforce consistent spacing between keys and values in object literal properties",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/key-spacing.html",
        "ruleId": "jsonc/key-spacing",
        "ruleName": "key-spacing"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/key-spacing",
      "plugin": "jsonc"
    },
    "jsonc/no-bigint-literals": {
      "docs": {
        "description": "disallow BigInt literals",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-bigint-literals.html",
        "ruleId": "jsonc/no-bigint-literals",
        "ruleName": "no-bigint-literals"
      },
      "type": "problem",
      "name": "jsonc/no-bigint-literals",
      "plugin": "jsonc"
    },
    "jsonc/no-binary-expression": {
      "docs": {
        "description": "disallow binary expression",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-binary-expression.html",
        "ruleId": "jsonc/no-binary-expression",
        "ruleName": "no-binary-expression"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "type": "problem",
      "name": "jsonc/no-binary-expression",
      "plugin": "jsonc"
    },
    "jsonc/no-binary-numeric-literals": {
      "docs": {
        "description": "disallow binary numeric literals",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-binary-numeric-literals.html",
        "ruleId": "jsonc/no-binary-numeric-literals",
        "ruleName": "no-binary-numeric-literals"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-binary-numeric-literals",
      "plugin": "jsonc"
    },
    "jsonc/no-comments": {
      "docs": {
        "description": "disallow comments",
        "recommended": [
          "json"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-comments.html",
        "ruleId": "jsonc/no-comments",
        "ruleName": "no-comments"
      },
      "type": "problem",
      "name": "jsonc/no-comments",
      "plugin": "jsonc"
    },
    "jsonc/no-dupe-keys": {
      "type": "problem",
      "docs": {
        "description": "disallow duplicate keys in object literals",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": true,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-dupe-keys.html",
        "ruleId": "jsonc/no-dupe-keys",
        "ruleName": "no-dupe-keys"
      },
      "deprecated": false,
      "replacedBy": [],
      "name": "jsonc/no-dupe-keys",
      "plugin": "jsonc"
    },
    "jsonc/no-escape-sequence-in-identifier": {
      "docs": {
        "description": "disallow escape sequences in identifiers.",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-escape-sequence-in-identifier.html",
        "ruleId": "jsonc/no-escape-sequence-in-identifier",
        "ruleName": "no-escape-sequence-in-identifier"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-escape-sequence-in-identifier",
      "plugin": "jsonc"
    },
    "jsonc/no-floating-decimal": {
      "deprecated": false,
      "type": "suggestion",
      "docs": {
        "description": "disallow leading or trailing decimal points in numeric literals",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-floating-decimal.html",
        "ruleId": "jsonc/no-floating-decimal",
        "ruleName": "no-floating-decimal"
      },
      "fixable": "code",
      "replacedBy": [],
      "name": "jsonc/no-floating-decimal",
      "plugin": "jsonc"
    },
    "jsonc/no-hexadecimal-numeric-literals": {
      "docs": {
        "description": "disallow hexadecimal numeric literals",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-hexadecimal-numeric-literals.html",
        "ruleId": "jsonc/no-hexadecimal-numeric-literals",
        "ruleName": "no-hexadecimal-numeric-literals"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-hexadecimal-numeric-literals",
      "plugin": "jsonc"
    },
    "jsonc/no-infinity": {
      "docs": {
        "description": "disallow Infinity",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-infinity.html",
        "ruleId": "jsonc/no-infinity",
        "ruleName": "no-infinity"
      },
      "type": "problem",
      "name": "jsonc/no-infinity",
      "plugin": "jsonc"
    },
    "jsonc/no-irregular-whitespace": {
      "type": "problem",
      "defaultOptions": [
        {
          "skipComments": false,
          "skipJSXText": false,
          "skipRegExps": false,
          "skipStrings": true,
          "skipTemplates": false
        }
      ],
      "docs": {
        "description": "disallow irregular whitespace",
        "recommended": null,
        "extensionRule": true,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-irregular-whitespace.html",
        "ruleId": "jsonc/no-irregular-whitespace",
        "ruleName": "no-irregular-whitespace"
      },
      "deprecated": false,
      "replacedBy": [],
      "name": "jsonc/no-irregular-whitespace",
      "plugin": "jsonc"
    },
    "jsonc/no-multi-str": {
      "type": "suggestion",
      "docs": {
        "description": "disallow multiline strings",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": true,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-multi-str.html",
        "ruleId": "jsonc/no-multi-str",
        "ruleName": "no-multi-str"
      },
      "deprecated": false,
      "replacedBy": [],
      "name": "jsonc/no-multi-str",
      "plugin": "jsonc"
    },
    "jsonc/no-nan": {
      "docs": {
        "description": "disallow NaN",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-nan.html",
        "ruleId": "jsonc/no-nan",
        "ruleName": "no-nan"
      },
      "type": "problem",
      "name": "jsonc/no-nan",
      "plugin": "jsonc"
    },
    "jsonc/no-number-props": {
      "docs": {
        "description": "disallow number property keys",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-number-props.html",
        "ruleId": "jsonc/no-number-props",
        "ruleName": "no-number-props"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-number-props",
      "plugin": "jsonc"
    },
    "jsonc/no-numeric-separators": {
      "docs": {
        "description": "disallow numeric separators",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-numeric-separators.html",
        "ruleId": "jsonc/no-numeric-separators",
        "ruleName": "no-numeric-separators"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-numeric-separators",
      "plugin": "jsonc"
    },
    "jsonc/no-octal-escape": {
      "type": "suggestion",
      "docs": {
        "description": "disallow octal escape sequences in string literals",
        "recommended": null,
        "extensionRule": true,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-escape.html",
        "ruleId": "jsonc/no-octal-escape",
        "ruleName": "no-octal-escape"
      },
      "deprecated": false,
      "replacedBy": [],
      "name": "jsonc/no-octal-escape",
      "plugin": "jsonc"
    },
    "jsonc/no-octal-numeric-literals": {
      "docs": {
        "description": "disallow octal numeric literals",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal-numeric-literals.html",
        "ruleId": "jsonc/no-octal-numeric-literals",
        "ruleName": "no-octal-numeric-literals"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-octal-numeric-literals",
      "plugin": "jsonc"
    },
    "jsonc/no-octal": {
      "type": "suggestion",
      "docs": {
        "description": "disallow legacy octal literals",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": true,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-octal.html",
        "ruleId": "jsonc/no-octal",
        "ruleName": "no-octal"
      },
      "deprecated": false,
      "replacedBy": [],
      "name": "jsonc/no-octal",
      "plugin": "jsonc"
    },
    "jsonc/no-parenthesized": {
      "docs": {
        "description": "disallow parentheses around the expression",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-parenthesized.html",
        "ruleId": "jsonc/no-parenthesized",
        "ruleName": "no-parenthesized"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "type": "problem",
      "name": "jsonc/no-parenthesized",
      "plugin": "jsonc"
    },
    "jsonc/no-plus-sign": {
      "docs": {
        "description": "disallow plus sign",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-plus-sign.html",
        "ruleId": "jsonc/no-plus-sign",
        "ruleName": "no-plus-sign"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-plus-sign",
      "plugin": "jsonc"
    },
    "jsonc/no-regexp-literals": {
      "docs": {
        "description": "disallow RegExp literals",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-regexp-literals.html",
        "ruleId": "jsonc/no-regexp-literals",
        "ruleName": "no-regexp-literals"
      },
      "type": "problem",
      "name": "jsonc/no-regexp-literals",
      "plugin": "jsonc"
    },
    "jsonc/no-sparse-arrays": {
      "type": "problem",
      "docs": {
        "description": "disallow sparse arrays",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": true,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-sparse-arrays.html",
        "ruleId": "jsonc/no-sparse-arrays",
        "ruleName": "no-sparse-arrays"
      },
      "deprecated": false,
      "replacedBy": [],
      "name": "jsonc/no-sparse-arrays",
      "plugin": "jsonc"
    },
    "jsonc/no-template-literals": {
      "docs": {
        "description": "disallow template literals",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-template-literals.html",
        "ruleId": "jsonc/no-template-literals",
        "ruleName": "no-template-literals"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-template-literals",
      "plugin": "jsonc"
    },
    "jsonc/no-undefined-value": {
      "docs": {
        "description": "disallow `undefined`",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-undefined-value.html",
        "ruleId": "jsonc/no-undefined-value",
        "ruleName": "no-undefined-value"
      },
      "type": "problem",
      "name": "jsonc/no-undefined-value",
      "plugin": "jsonc"
    },
    "jsonc/no-unicode-codepoint-escapes": {
      "docs": {
        "description": "disallow Unicode code point escape sequences.",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-unicode-codepoint-escapes.html",
        "ruleId": "jsonc/no-unicode-codepoint-escapes",
        "ruleName": "no-unicode-codepoint-escapes"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/no-unicode-codepoint-escapes",
      "plugin": "jsonc"
    },
    "jsonc/no-useless-escape": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowRegexCharacters": []
        }
      ],
      "docs": {
        "description": "disallow unnecessary escape usage",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": true,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/no-useless-escape.html",
        "ruleId": "jsonc/no-useless-escape",
        "ruleName": "no-useless-escape"
      },
      "hasSuggestions": true,
      "deprecated": false,
      "replacedBy": [],
      "name": "jsonc/no-useless-escape",
      "plugin": "jsonc"
    },
    "jsonc/object-curly-newline": {
      "docs": {
        "description": "enforce consistent line breaks inside braces",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/object-curly-newline.html",
        "ruleId": "jsonc/object-curly-newline",
        "ruleName": "object-curly-newline"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/object-curly-newline",
      "plugin": "jsonc"
    },
    "jsonc/object-curly-spacing": {
      "docs": {
        "description": "enforce consistent spacing inside braces",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/object-curly-spacing.html",
        "ruleId": "jsonc/object-curly-spacing",
        "ruleName": "object-curly-spacing"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/object-curly-spacing",
      "plugin": "jsonc"
    },
    "jsonc/object-property-newline": {
      "docs": {
        "description": "enforce placing object properties on separate lines",
        "recommended": null,
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/object-property-newline.html",
        "ruleId": "jsonc/object-property-newline",
        "ruleName": "object-property-newline"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "jsonc/object-property-newline",
      "plugin": "jsonc"
    },
    "jsonc/quote-props": {
      "docs": {
        "description": "require quotes around object literal property names",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/quote-props.html",
        "ruleId": "jsonc/quote-props",
        "ruleName": "quote-props"
      },
      "type": "layout",
      "fixable": "code",
      "name": "jsonc/quote-props",
      "plugin": "jsonc"
    },
    "jsonc/quotes": {
      "docs": {
        "description": "enforce use of double or single quotes",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/quotes.html",
        "ruleId": "jsonc/quotes",
        "ruleName": "quotes"
      },
      "type": "layout",
      "fixable": "code",
      "name": "jsonc/quotes",
      "plugin": "jsonc"
    },
    "jsonc/sort-array-values": {
      "docs": {
        "description": "require array values to be sorted",
        "recommended": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/sort-array-values.html",
        "ruleId": "jsonc/sort-array-values",
        "ruleName": "sort-array-values"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsonc/sort-array-values",
      "plugin": "jsonc"
    },
    "jsonc/sort-keys": {
      "docs": {
        "description": "require object keys to be sorted",
        "recommended": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/sort-keys.html",
        "ruleId": "jsonc/sort-keys",
        "ruleName": "sort-keys"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "jsonc/sort-keys",
      "plugin": "jsonc"
    },
    "jsonc/space-unary-ops": {
      "docs": {
        "description": "disallow spaces after unary operators",
        "recommended": [
          "json",
          "jsonc",
          "json5"
        ],
        "extensionRule": true,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/space-unary-ops.html",
        "ruleId": "jsonc/space-unary-ops",
        "ruleName": "space-unary-ops"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "jsonc/space-unary-ops",
      "plugin": "jsonc"
    },
    "jsonc/valid-json-number": {
      "docs": {
        "description": "disallow invalid number for JSON",
        "recommended": [
          "json",
          "jsonc"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/valid-json-number.html",
        "ruleId": "jsonc/valid-json-number",
        "ruleName": "valid-json-number"
      },
      "fixable": "code",
      "type": "problem",
      "name": "jsonc/valid-json-number",
      "plugin": "jsonc"
    },
    "jsonc/vue-custom-block/no-parsing-error": {
      "docs": {
        "description": "disallow parsing errors in Vue custom blocks",
        "recommended": [
          "json",
          "json5",
          "jsonc"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-jsonc/rules/vue-custom-block/no-parsing-error.html",
        "ruleId": "jsonc/vue-custom-block/no-parsing-error",
        "ruleName": "vue-custom-block/no-parsing-error"
      },
      "type": "problem",
      "name": "jsonc/vue-custom-block/no-parsing-error",
      "plugin": "jsonc"
    },
    "jsx-a11y/accessible-emoji": {
      "docs": {
        "description": "Enforce emojis are wrapped in `<span>` and provide screen reader access.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/accessible-emoji.md"
      },
      "deprecated": true,
      "name": "jsx-a11y/accessible-emoji",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/alt-text": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/alt-text.md",
        "description": "Enforce all elements that require alternative text have meaningful information to relay back to end user."
      },
      "name": "jsx-a11y/alt-text",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/anchor-ambiguous-text": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-ambiguous-text.md",
        "description": "Enforce `<a>` text to not exactly match \"click here\", \"here\", \"link\", or \"a link\"."
      },
      "name": "jsx-a11y/anchor-ambiguous-text",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/anchor-has-content": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-has-content.md",
        "description": "Enforce all anchors to contain accessible content."
      },
      "name": "jsx-a11y/anchor-has-content",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/anchor-is-valid": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/anchor-is-valid.md",
        "description": "Enforce all anchors are valid, navigable elements."
      },
      "name": "jsx-a11y/anchor-is-valid",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/aria-activedescendant-has-tabindex": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-activedescendant-has-tabindex.md",
        "description": "Enforce elements with aria-activedescendant are tabbable."
      },
      "name": "jsx-a11y/aria-activedescendant-has-tabindex",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/aria-props": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-props.md",
        "description": "Enforce all `aria-*` props are valid."
      },
      "name": "jsx-a11y/aria-props",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/aria-proptypes": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-proptypes.md",
        "description": "Enforce ARIA state and property values are valid."
      },
      "name": "jsx-a11y/aria-proptypes",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/aria-role": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-role.md",
        "description": "Enforce that elements with ARIA roles must use a valid, non-abstract ARIA role."
      },
      "name": "jsx-a11y/aria-role",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/aria-unsupported-elements": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/aria-unsupported-elements.md",
        "description": "Enforce that elements that do not support ARIA roles, states, and properties do not have those attributes."
      },
      "name": "jsx-a11y/aria-unsupported-elements",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/autocomplete-valid": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/autocomplete-valid.md",
        "description": "Enforce that autocomplete attributes are used correctly."
      },
      "name": "jsx-a11y/autocomplete-valid",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/click-events-have-key-events": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/click-events-have-key-events.md",
        "description": "Enforce a clickable non-interactive element has at least one keyboard event listener."
      },
      "name": "jsx-a11y/click-events-have-key-events",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/control-has-associated-label": {
      "docs": {
        "description": "Enforce that a control (an interactive element) has a text label.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/control-has-associated-label.md"
      },
      "name": "jsx-a11y/control-has-associated-label",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/heading-has-content": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/heading-has-content.md",
        "description": "Enforce heading (`h1`, `h2`, etc) elements contain accessible content."
      },
      "name": "jsx-a11y/heading-has-content",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/html-has-lang": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/html-has-lang.md",
        "description": "Enforce `<html>` element has `lang` prop."
      },
      "name": "jsx-a11y/html-has-lang",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/iframe-has-title": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/iframe-has-title.md",
        "description": "Enforce iframe elements have a title attribute."
      },
      "name": "jsx-a11y/iframe-has-title",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/img-redundant-alt": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/img-redundant-alt.md",
        "description": "Enforce `<img>` alt prop does not contain the word \"image\", \"picture\", or \"photo\"."
      },
      "name": "jsx-a11y/img-redundant-alt",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/interactive-supports-focus": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/interactive-supports-focus.md",
        "description": "Enforce that elements with interactive handlers like `onClick` must be focusable."
      },
      "name": "jsx-a11y/interactive-supports-focus",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/label-has-associated-control": {
      "docs": {
        "description": "Enforce that a `label` tag has a text label and an associated control.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/main/docs/rules/label-has-associated-control.md"
      },
      "name": "jsx-a11y/label-has-associated-control",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/label-has-for": {
      "deprecated": true,
      "replacedBy": [
        "label-has-associated-control"
      ],
      "docs": {
        "description": "Enforce that `<label>` elements have the `htmlFor` prop.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/label-has-for.md"
      },
      "name": "jsx-a11y/label-has-for",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/lang": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/lang.md",
        "description": "Enforce lang attribute has a valid value."
      },
      "name": "jsx-a11y/lang",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/media-has-caption": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/media-has-caption.md",
        "description": "Enforces that `<audio>` and `<video>` elements must have a `<track>` for captions."
      },
      "name": "jsx-a11y/media-has-caption",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/mouse-events-have-key-events": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/mouse-events-have-key-events.md",
        "description": "Enforce that `onMouseOver`/`onMouseOut` are accompanied by `onFocus`/`onBlur` for keyboard-only users."
      },
      "name": "jsx-a11y/mouse-events-have-key-events",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-access-key": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-access-key.md",
        "description": "Enforce that the `accessKey` prop is not used on any element to avoid complications with keyboard commands used by a screen reader."
      },
      "name": "jsx-a11y/no-access-key",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-aria-hidden-on-focusable": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-aria-hidden-on-focusable.md",
        "description": "Disallow `aria-hidden=\"true\"` from being set on focusable elements."
      },
      "name": "jsx-a11y/no-aria-hidden-on-focusable",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-autofocus": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-autofocus.md",
        "description": "Enforce autoFocus prop is not used."
      },
      "name": "jsx-a11y/no-autofocus",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-distracting-elements": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-distracting-elements.md",
        "description": "Enforce distracting elements are not used."
      },
      "name": "jsx-a11y/no-distracting-elements",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-interactive-element-to-noninteractive-role": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-interactive-element-to-noninteractive-role.md",
        "description": "Interactive elements should not be assigned non-interactive roles."
      },
      "name": "jsx-a11y/no-interactive-element-to-noninteractive-role",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-noninteractive-element-interactions": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-element-interactions.md",
        "description": "Non-interactive elements should not be assigned mouse or keyboard event listeners."
      },
      "name": "jsx-a11y/no-noninteractive-element-interactions",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-noninteractive-element-to-interactive-role": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-element-to-interactive-role.md",
        "description": "Non-interactive elements should not be assigned interactive roles."
      },
      "name": "jsx-a11y/no-noninteractive-element-to-interactive-role",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-noninteractive-tabindex": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-noninteractive-tabindex.md",
        "description": "`tabIndex` should only be declared on interactive elements."
      },
      "name": "jsx-a11y/no-noninteractive-tabindex",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-onchange": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-onchange.md",
        "description": "Enforce usage of `onBlur` over `onChange` on select menus for accessibility."
      },
      "deprecated": true,
      "name": "jsx-a11y/no-onchange",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-redundant-roles": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-redundant-roles.md",
        "description": "Enforce explicit role property is not the same as implicit/default role property on element."
      },
      "name": "jsx-a11y/no-redundant-roles",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/no-static-element-interactions": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/no-static-element-interactions.md",
        "description": "Enforce that non-interactive, visible elements (such as `<div>`) that have click handlers use the role attribute."
      },
      "name": "jsx-a11y/no-static-element-interactions",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/prefer-tag-over-role": {
      "docs": {
        "description": "Enforces using semantic DOM elements over the ARIA `role` property.",
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/prefer-tag-over-role.md"
      },
      "name": "jsx-a11y/prefer-tag-over-role",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/role-has-required-aria-props": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/role-has-required-aria-props.md",
        "description": "Enforce that elements with ARIA roles must have all required attributes for that role."
      },
      "name": "jsx-a11y/role-has-required-aria-props",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/role-supports-aria-props": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/role-supports-aria-props.md",
        "description": "Enforce that elements with explicit or implicit roles defined contain only `aria-*` properties supported by that `role`."
      },
      "name": "jsx-a11y/role-supports-aria-props",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/scope": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/scope.md",
        "description": "Enforce `scope` prop is only used on `<th>` elements."
      },
      "name": "jsx-a11y/scope",
      "plugin": "jsx-a11y"
    },
    "jsx-a11y/tabindex-no-positive": {
      "docs": {
        "url": "https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/tree/HEAD/docs/rules/tabindex-no-positive.md",
        "description": "Enforce `tabIndex` value is not greater than zero."
      },
      "name": "jsx-a11y/tabindex-no-positive",
      "plugin": "jsx-a11y"
    },
    "math/abs": {
      "docs": {
        "description": "enforce the conversion to absolute values to be the method you prefer",
        "categories": [],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/abs.html",
        "ruleId": "math/abs",
        "ruleName": "abs"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/abs",
      "plugin": "math"
    },
    "math/no-static-infinity-calculations": {
      "docs": {
        "description": "disallow static calculations that result in infinity",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/no-static-infinity-calculations.html",
        "ruleId": "math/no-static-infinity-calculations",
        "ruleName": "no-static-infinity-calculations"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/no-static-infinity-calculations",
      "plugin": "math"
    },
    "math/no-static-nan-calculations": {
      "docs": {
        "description": "disallow static calculations that result in NaN",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/no-static-nan-calculations.html",
        "ruleId": "math/no-static-nan-calculations",
        "ruleName": "no-static-nan-calculations"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/no-static-nan-calculations",
      "plugin": "math"
    },
    "math/prefer-exponentiation-operator": {
      "docs": {
        "description": "enforce the use of exponentiation (`**`) operator instead of other calculations",
        "categories": [],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-exponentiation-operator.html",
        "ruleId": "math/prefer-exponentiation-operator",
        "ruleName": "prefer-exponentiation-operator"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-exponentiation-operator",
      "plugin": "math"
    },
    "math/prefer-math-cbrt": {
      "docs": {
        "description": "enforce the use of Math.cbrt() instead of other cube root calculations",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-cbrt.html",
        "ruleId": "math/prefer-math-cbrt",
        "ruleName": "prefer-math-cbrt"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-cbrt",
      "plugin": "math"
    },
    "math/prefer-math-e": {
      "docs": {
        "description": "enforce the use of Math.E instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-e.html",
        "ruleId": "math/prefer-math-e",
        "ruleName": "prefer-math-e"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-e",
      "plugin": "math"
    },
    "math/prefer-math-hypot": {
      "docs": {
        "description": "enforce the use of Math.hypot() instead of other hypotenuse calculations",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-hypot.html",
        "ruleId": "math/prefer-math-hypot",
        "ruleName": "prefer-math-hypot"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-hypot",
      "plugin": "math"
    },
    "math/prefer-math-ln10": {
      "docs": {
        "description": "enforce the use of Math.LN10 instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-ln10.html",
        "ruleId": "math/prefer-math-ln10",
        "ruleName": "prefer-math-ln10"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-ln10",
      "plugin": "math"
    },
    "math/prefer-math-ln2": {
      "docs": {
        "description": "enforce the use of Math.LN2 instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-ln2.html",
        "ruleId": "math/prefer-math-ln2",
        "ruleName": "prefer-math-ln2"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-ln2",
      "plugin": "math"
    },
    "math/prefer-math-log10": {
      "docs": {
        "description": "enforce the use of Math.log10() instead of other calculation methods.",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-log10.html",
        "ruleId": "math/prefer-math-log10",
        "ruleName": "prefer-math-log10"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-log10",
      "plugin": "math"
    },
    "math/prefer-math-log10e": {
      "docs": {
        "description": "enforce the use of Math.LOG10E instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-log10e.html",
        "ruleId": "math/prefer-math-log10e",
        "ruleName": "prefer-math-log10e"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-log10e",
      "plugin": "math"
    },
    "math/prefer-math-log2": {
      "docs": {
        "description": "enforce the use of Math.log2() instead of other calculation methods.",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-log2.html",
        "ruleId": "math/prefer-math-log2",
        "ruleName": "prefer-math-log2"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-log2",
      "plugin": "math"
    },
    "math/prefer-math-log2e": {
      "docs": {
        "description": "enforce the use of Math.LOG2E instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-log2e.html",
        "ruleId": "math/prefer-math-log2e",
        "ruleName": "prefer-math-log2e"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-log2e",
      "plugin": "math"
    },
    "math/prefer-math-pi": {
      "docs": {
        "description": "enforce the use of Math.PI instead of literal number",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-pi.html",
        "ruleId": "math/prefer-math-pi",
        "ruleName": "prefer-math-pi"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "type": "suggestion",
      "name": "math/prefer-math-pi",
      "plugin": "math"
    },
    "math/prefer-math-sqrt": {
      "docs": {
        "description": "enforce the use of Math.sqrt() instead of other square root calculations",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-sqrt.html",
        "ruleId": "math/prefer-math-sqrt",
        "ruleName": "prefer-math-sqrt"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-sqrt",
      "plugin": "math"
    },
    "math/prefer-math-sqrt1-2": {
      "docs": {
        "description": "enforce the use of Math.SQRT1_2 instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-sqrt1-2.html",
        "ruleId": "math/prefer-math-sqrt1-2",
        "ruleName": "prefer-math-sqrt1-2"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-sqrt1-2",
      "plugin": "math"
    },
    "math/prefer-math-sqrt2": {
      "docs": {
        "description": "enforce the use of Math.SQRT2 instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-sqrt2.html",
        "ruleId": "math/prefer-math-sqrt2",
        "ruleName": "prefer-math-sqrt2"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-sqrt2",
      "plugin": "math"
    },
    "math/prefer-math-sum-precise": {
      "docs": {
        "description": "enforce the use of Math.sumPrecise() instead of other summation methods",
        "categories": [],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-sum-precise.html",
        "ruleId": "math/prefer-math-sum-precise",
        "ruleName": "prefer-math-sum-precise"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-sum-precise",
      "plugin": "math"
    },
    "math/prefer-math-trunc": {
      "docs": {
        "description": "enforce the use of Math.trunc() instead of other truncations",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-math-trunc.html",
        "ruleId": "math/prefer-math-trunc",
        "ruleName": "prefer-math-trunc"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-math-trunc",
      "plugin": "math"
    },
    "math/prefer-number-epsilon": {
      "docs": {
        "description": "enforce the use of Number.EPSILON instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-epsilon.html",
        "ruleId": "math/prefer-number-epsilon",
        "ruleName": "prefer-number-epsilon"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "type": "suggestion",
      "name": "math/prefer-number-epsilon",
      "plugin": "math"
    },
    "math/prefer-number-is-finite": {
      "docs": {
        "description": "enforce the use of Number.isFinite() instead of other checking ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-is-finite.html",
        "ruleId": "math/prefer-number-is-finite",
        "ruleName": "prefer-number-is-finite"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-number-is-finite",
      "plugin": "math"
    },
    "math/prefer-number-is-integer": {
      "docs": {
        "description": "enforce the use of Number.isInteger() instead of other checking ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-is-integer.html",
        "ruleId": "math/prefer-number-is-integer",
        "ruleName": "prefer-number-is-integer"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-number-is-integer",
      "plugin": "math"
    },
    "math/prefer-number-is-nan": {
      "docs": {
        "description": "enforce the use of Number.isNaN() instead of other checking ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-is-nan.html",
        "ruleId": "math/prefer-number-is-nan",
        "ruleName": "prefer-number-is-nan"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-number-is-nan",
      "plugin": "math"
    },
    "math/prefer-number-is-safe-integer": {
      "docs": {
        "description": "enforce the use of Number.isSafeInteger() instead of other checking ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-is-safe-integer.html",
        "ruleId": "math/prefer-number-is-safe-integer",
        "ruleName": "prefer-number-is-safe-integer"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-number-is-safe-integer",
      "plugin": "math"
    },
    "math/prefer-number-max-safe-integer": {
      "docs": {
        "description": "enforce the use of Number.MAX_SAFE_INTEGER instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-max-safe-integer.html",
        "ruleId": "math/prefer-number-max-safe-integer",
        "ruleName": "prefer-number-max-safe-integer"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-number-max-safe-integer",
      "plugin": "math"
    },
    "math/prefer-number-max-value": {
      "docs": {
        "description": "enforce the use of Number.MAX_VALUE instead of literal number",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-max-value.html",
        "ruleId": "math/prefer-number-max-value",
        "ruleName": "prefer-number-max-value"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "type": "suggestion",
      "name": "math/prefer-number-max-value",
      "plugin": "math"
    },
    "math/prefer-number-min-safe-integer": {
      "docs": {
        "description": "enforce the use of Number.MIN_SAFE_INTEGER instead of other ways",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-min-safe-integer.html",
        "ruleId": "math/prefer-number-min-safe-integer",
        "ruleName": "prefer-number-min-safe-integer"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "math/prefer-number-min-safe-integer",
      "plugin": "math"
    },
    "math/prefer-number-min-value": {
      "docs": {
        "description": "enforce the use of Number.MIN_VALUE instead of literal number",
        "categories": [
          "recommended"
        ],
        "url": "https://ota-meshi.github.io/eslint-plugin-math/rules/prefer-number-min-value.html",
        "ruleId": "math/prefer-number-min-value",
        "ruleName": "prefer-number-min-value"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "type": "suggestion",
      "name": "math/prefer-number-min-value",
      "plugin": "math"
    },
    "n/callback-return": {
      "type": "suggestion",
      "docs": {
        "description": "require `return` statements after callbacks",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/callback-return.md"
      },
      "fixable": null,
      "name": "n/callback-return",
      "plugin": "n"
    },
    "n/exports-style": {
      "docs": {
        "description": "enforce either `module.exports` or `exports`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/exports-style.md"
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "n/exports-style",
      "plugin": "n"
    },
    "n/file-extension-in-import": {
      "docs": {
        "description": "enforce the style of file extensions in `import` declarations",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/file-extension-in-import.md"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "n/file-extension-in-import",
      "plugin": "n"
    },
    "n/global-require": {
      "type": "suggestion",
      "docs": {
        "description": "require `require()` calls to be placed at top-level module scope",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/global-require.md"
      },
      "fixable": null,
      "name": "n/global-require",
      "plugin": "n"
    },
    "n/handle-callback-err": {
      "type": "suggestion",
      "docs": {
        "description": "require error handling in callbacks",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/handle-callback-err.md"
      },
      "fixable": null,
      "name": "n/handle-callback-err",
      "plugin": "n"
    },
    "n/no-callback-literal": {
      "docs": {
        "description": "enforce Node.js-style error-first callback pattern is followed",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-callback-literal.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-callback-literal",
      "plugin": "n"
    },
    "n/no-deprecated-api": {
      "docs": {
        "description": "disallow deprecated APIs",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-deprecated-api.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-deprecated-api",
      "plugin": "n"
    },
    "n/no-exports-assign": {
      "docs": {
        "description": "disallow the assignment to `exports`",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-exports-assign.md"
      },
      "fixable": null,
      "type": "problem",
      "name": "n/no-exports-assign",
      "plugin": "n"
    },
    "n/no-extraneous-import": {
      "docs": {
        "description": "disallow `import` declarations which import extraneous modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-import.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-extraneous-import",
      "plugin": "n"
    },
    "n/no-extraneous-require": {
      "docs": {
        "description": "disallow `require()` expressions which import extraneous modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-extraneous-require.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-extraneous-require",
      "plugin": "n"
    },
    "n/no-missing-import": {
      "docs": {
        "description": "disallow `import` declarations which import non-existence modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-import.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-missing-import",
      "plugin": "n"
    },
    "n/no-missing-require": {
      "docs": {
        "description": "disallow `require()` expressions which import non-existence modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-missing-require.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-missing-require",
      "plugin": "n"
    },
    "n/no-mixed-requires": {
      "type": "suggestion",
      "docs": {
        "description": "disallow `require` calls to be mixed with regular variable declarations",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-mixed-requires.md"
      },
      "fixable": null,
      "name": "n/no-mixed-requires",
      "plugin": "n"
    },
    "n/no-new-require": {
      "type": "suggestion",
      "docs": {
        "description": "disallow `new` operators with calls to `require`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-new-require.md"
      },
      "fixable": null,
      "name": "n/no-new-require",
      "plugin": "n"
    },
    "n/no-path-concat": {
      "type": "suggestion",
      "docs": {
        "description": "disallow string concatenation with `__dirname` and `__filename`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-path-concat.md"
      },
      "fixable": null,
      "name": "n/no-path-concat",
      "plugin": "n"
    },
    "n/no-process-env": {
      "type": "suggestion",
      "docs": {
        "description": "disallow the use of `process.env`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-env.md"
      },
      "fixable": null,
      "name": "n/no-process-env",
      "plugin": "n"
    },
    "n/no-process-exit": {
      "type": "suggestion",
      "docs": {
        "description": "disallow the use of `process.exit()`",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-process-exit.md"
      },
      "fixable": null,
      "name": "n/no-process-exit",
      "plugin": "n"
    },
    "n/no-restricted-import": {
      "type": "suggestion",
      "docs": {
        "description": "disallow specified modules when loaded by `import` declarations",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-import.md"
      },
      "fixable": null,
      "name": "n/no-restricted-import",
      "plugin": "n"
    },
    "n/no-restricted-require": {
      "type": "suggestion",
      "docs": {
        "description": "disallow specified modules when loaded by `require`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-restricted-require.md"
      },
      "fixable": null,
      "name": "n/no-restricted-require",
      "plugin": "n"
    },
    "n/no-sync": {
      "type": "suggestion",
      "docs": {
        "description": "disallow synchronous methods",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-sync.md"
      },
      "fixable": null,
      "name": "n/no-sync",
      "plugin": "n"
    },
    "n/no-top-level-await": {
      "docs": {
        "description": "disallow top-level `await` in published modules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-top-level-await.md"
      },
      "fixable": null,
      "type": "problem",
      "name": "n/no-top-level-await",
      "plugin": "n"
    },
    "n/no-unpublished-bin": {
      "docs": {
        "description": "disallow `bin` files that npm ignores",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-bin.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-unpublished-bin",
      "plugin": "n"
    },
    "n/no-unpublished-import": {
      "docs": {
        "description": "disallow `import` declarations which import private modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-import.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-unpublished-import",
      "plugin": "n"
    },
    "n/no-unpublished-require": {
      "docs": {
        "description": "disallow `require()` expressions which import private modules",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unpublished-require.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-unpublished-require",
      "plugin": "n"
    },
    "n/no-unsupported-features/es-builtins": {
      "docs": {
        "description": "disallow unsupported ECMAScript built-ins on the specified version",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/es-builtins.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-unsupported-features/es-builtins",
      "plugin": "n"
    },
    "n/no-unsupported-features/es-syntax": {
      "docs": {
        "description": "disallow unsupported ECMAScript syntax on the specified version",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/es-syntax.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-unsupported-features/es-syntax",
      "plugin": "n"
    },
    "n/no-unsupported-features/node-builtins": {
      "docs": {
        "description": "disallow unsupported Node.js built-in APIs on the specified version",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-unsupported-features/node-builtins.md"
      },
      "type": "problem",
      "fixable": null,
      "name": "n/no-unsupported-features/node-builtins",
      "plugin": "n"
    },
    "n/prefer-global/buffer": {
      "docs": {
        "description": "enforce either `Buffer` or `require(\"buffer\").Buffer`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/buffer.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "n/prefer-global/buffer",
      "plugin": "n"
    },
    "n/prefer-global/console": {
      "docs": {
        "description": "enforce either `console` or `require(\"console\")`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/console.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "n/prefer-global/console",
      "plugin": "n"
    },
    "n/prefer-global/process": {
      "docs": {
        "description": "enforce either `process` or `require(\"process\")`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/process.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "n/prefer-global/process",
      "plugin": "n"
    },
    "n/prefer-global/text-decoder": {
      "docs": {
        "description": "enforce either `TextDecoder` or `require(\"util\").TextDecoder`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/text-decoder.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "n/prefer-global/text-decoder",
      "plugin": "n"
    },
    "n/prefer-global/text-encoder": {
      "docs": {
        "description": "enforce either `TextEncoder` or `require(\"util\").TextEncoder`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/text-encoder.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "n/prefer-global/text-encoder",
      "plugin": "n"
    },
    "n/prefer-global/url-search-params": {
      "docs": {
        "description": "enforce either `URLSearchParams` or `require(\"url\").URLSearchParams`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/url-search-params.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "n/prefer-global/url-search-params",
      "plugin": "n"
    },
    "n/prefer-global/url": {
      "docs": {
        "description": "enforce either `URL` or `require(\"url\").URL`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-global/url.md"
      },
      "type": "suggestion",
      "fixable": null,
      "name": "n/prefer-global/url",
      "plugin": "n"
    },
    "n/prefer-node-protocol": {
      "docs": {
        "description": "enforce using the `node:` protocol when importing Node.js builtin modules.",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-node-protocol.md"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "n/prefer-node-protocol",
      "plugin": "n"
    },
    "n/prefer-promises/dns": {
      "docs": {
        "description": "enforce `require(\"dns\").promises`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises/dns.md"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "n/prefer-promises/dns",
      "plugin": "n"
    },
    "n/prefer-promises/fs": {
      "docs": {
        "description": "enforce `require(\"fs\").promises`",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/prefer-promises/fs.md"
      },
      "fixable": null,
      "type": "suggestion",
      "name": "n/prefer-promises/fs",
      "plugin": "n"
    },
    "n/process-exit-as-throw": {
      "docs": {
        "description": "require that `process.exit()` expressions use the same code path as `throw`",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/process-exit-as-throw.md"
      },
      "type": "problem",
      "fixable": null,
      "supported": false,
      "name": "n/process-exit-as-throw",
      "plugin": "n"
    },
    "n/hashbang": {
      "docs": {
        "description": "require correct usage of hashbang",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/hashbang.md"
      },
      "type": "problem",
      "fixable": "code",
      "name": "n/hashbang",
      "plugin": "n"
    },
    "n/no-hide-core-modules": {
      "docs": {
        "description": "disallow third-party modules which are hiding core modules",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/no-hide-core-modules.md"
      },
      "type": "problem",
      "deprecated": true,
      "fixable": null,
      "name": "n/no-hide-core-modules",
      "plugin": "n"
    },
    "n/shebang": {
      "docs": {
        "description": "require correct usage of hashbang",
        "recommended": false,
        "url": "https://github.com/eslint-community/eslint-plugin-n/blob/HEAD/docs/rules/hashbang.md"
      },
      "type": "problem",
      "fixable": "code",
      "deprecated": true,
      "replacedBy": [
        "n/hashbang"
      ],
      "name": "n/shebang",
      "plugin": "n"
    },
    "no-unsanitized/property": {
      "type": "problem",
      "docs": {
        "description": "ESLint rule to disallow unsanitized property assignment",
        "category": "possible-errors",
        "url": "https://github.com/mozilla/eslint-plugin-no-unsanitized/tree/master/docs/rules/property.md"
      },
      "name": "no-unsanitized/property",
      "plugin": "no-unsanitized"
    },
    "no-unsanitized/method": {
      "type": "problem",
      "docs": {
        "description": "ESLint rule to disallow unsanitized method calls",
        "category": "possible-errors",
        "url": "https://github.com/mozilla/eslint-plugin-no-unsanitized/tree/master/docs/rules/method.md"
      },
      "name": "no-unsanitized/method",
      "plugin": "no-unsanitized"
    },
    "node-dependencies/absolute-version": {
      "docs": {
        "description": "require or disallow absolute version of dependency.",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/absolute-version.html",
        "ruleId": "node-dependencies/absolute-version",
        "ruleName": "absolute-version"
      },
      "type": "suggestion",
      "name": "node-dependencies/absolute-version",
      "plugin": "node-dependencies"
    },
    "node-dependencies/compat-engines": {
      "docs": {
        "description": "enforce the versions of the engines of the dependencies to be compatible.",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/compat-engines.html",
        "ruleId": "node-dependencies/compat-engines",
        "ruleName": "compat-engines"
      },
      "type": "problem",
      "name": "node-dependencies/compat-engines",
      "plugin": "node-dependencies"
    },
    "node-dependencies/no-deprecated": {
      "docs": {
        "description": "disallow having dependencies on deprecate packages.",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/no-deprecated.html",
        "ruleId": "node-dependencies/no-deprecated",
        "ruleName": "no-deprecated"
      },
      "type": "suggestion",
      "name": "node-dependencies/no-deprecated",
      "plugin": "node-dependencies"
    },
    "node-dependencies/no-dupe-deps": {
      "docs": {
        "description": "disallow duplicate dependencies.",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/no-dupe-deps.html",
        "ruleId": "node-dependencies/no-dupe-deps",
        "ruleName": "no-dupe-deps"
      },
      "type": "problem",
      "name": "node-dependencies/no-dupe-deps",
      "plugin": "node-dependencies"
    },
    "node-dependencies/no-restricted-deps": {
      "docs": {
        "description": "Disallows dependence on the specified package.",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/no-restricted-deps.html",
        "ruleId": "node-dependencies/no-restricted-deps",
        "ruleName": "no-restricted-deps"
      },
      "type": "suggestion",
      "name": "node-dependencies/no-restricted-deps",
      "plugin": "node-dependencies"
    },
    "node-dependencies/prefer-caret-range-version": {
      "docs": {
        "description": "require caret(`^`) version instead of range version.",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/prefer-caret-range-version.html",
        "ruleId": "node-dependencies/prefer-caret-range-version",
        "ruleName": "prefer-caret-range-version"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "node-dependencies/prefer-caret-range-version",
      "plugin": "node-dependencies"
    },
    "node-dependencies/prefer-tilde-range-version": {
      "docs": {
        "description": "require tilde(`~`) version instead of range version.",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/prefer-tilde-range-version.html",
        "ruleId": "node-dependencies/prefer-tilde-range-version",
        "ruleName": "prefer-tilde-range-version"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "node-dependencies/prefer-tilde-range-version",
      "plugin": "node-dependencies"
    },
    "node-dependencies/valid-engines": {
      "docs": {
        "description": "enforce the versions of the engines of the dependencies to be compatible.",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/valid-engines.html",
        "ruleId": "node-dependencies/valid-engines",
        "ruleName": "valid-engines"
      },
      "type": "problem",
      "deprecated": true,
      "replacedBy": [
        "compat-engines"
      ],
      "name": "node-dependencies/valid-engines",
      "plugin": "node-dependencies"
    },
    "node-dependencies/valid-semver": {
      "docs": {
        "description": "enforce versions that is valid as a semantic version.",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-node-dependencies/rules/valid-semver.html",
        "ruleId": "node-dependencies/valid-semver",
        "ruleName": "valid-semver"
      },
      "type": "problem",
      "name": "node-dependencies/valid-semver",
      "plugin": "node-dependencies"
    },
    "package-json/no-empty-fields": {
      "defaultOptions": [
        {
          "ignoreProperties": []
        }
      ],
      "docs": {
        "category": "Best Practices",
        "description": "Reports on unnecessary empty arrays and objects.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/no-empty-fields.md"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "package-json/no-empty-fields",
      "plugin": "package-json"
    },
    "package-json/no-redundant-files": {
      "docs": {
        "category": "Best Practices",
        "description": "Prevents adding unnecessary / redundant files.",
        "recommended": false,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/no-redundant-files.md"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "package-json/no-redundant-files",
      "plugin": "package-json"
    },
    "package-json/order-properties": {
      "defaultOptions": [
        {
          "order": "sort-package-json"
        }
      ],
      "docs": {
        "category": "Best Practices",
        "description": "Package properties must be declared in standard order",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/order-properties.md"
      },
      "fixable": "code",
      "type": "layout",
      "name": "package-json/order-properties",
      "plugin": "package-json"
    },
    "package-json/require-author": {
      "docs": {
        "description": "Requires the `author` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-author.md"
      },
      "type": "suggestion",
      "name": "package-json/require-author",
      "plugin": "package-json"
    },
    "package-json/require-bugs": {
      "docs": {
        "description": "Requires the `bugs` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-bugs.md"
      },
      "type": "suggestion",
      "name": "package-json/require-bugs",
      "plugin": "package-json"
    },
    "package-json/require-bundleDependencies": {
      "docs": {
        "description": "Requires the `bundleDependencies` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-bundleDependencies.md"
      },
      "type": "suggestion",
      "name": "package-json/require-bundleDependencies",
      "plugin": "package-json"
    },
    "package-json/require-dependencies": {
      "docs": {
        "description": "Requires the `dependencies` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-dependencies.md"
      },
      "type": "suggestion",
      "name": "package-json/require-dependencies",
      "plugin": "package-json"
    },
    "package-json/require-description": {
      "docs": {
        "description": "Requires the `description` property to be present.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-description.md"
      },
      "type": "suggestion",
      "name": "package-json/require-description",
      "plugin": "package-json"
    },
    "package-json/require-devDependencies": {
      "docs": {
        "description": "Requires the `devDependencies` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-devDependencies.md"
      },
      "type": "suggestion",
      "name": "package-json/require-devDependencies",
      "plugin": "package-json"
    },
    "package-json/require-engines": {
      "docs": {
        "description": "Requires the `engines` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-engines.md"
      },
      "type": "suggestion",
      "name": "package-json/require-engines",
      "plugin": "package-json"
    },
    "package-json/require-files": {
      "docs": {
        "description": "Requires the `files` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-files.md"
      },
      "type": "suggestion",
      "name": "package-json/require-files",
      "plugin": "package-json"
    },
    "package-json/require-keywords": {
      "docs": {
        "description": "Requires the `keywords` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-keywords.md"
      },
      "type": "suggestion",
      "name": "package-json/require-keywords",
      "plugin": "package-json"
    },
    "package-json/require-name": {
      "docs": {
        "description": "Requires the `name` property to be present.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-name.md"
      },
      "type": "suggestion",
      "name": "package-json/require-name",
      "plugin": "package-json"
    },
    "package-json/require-optionalDependencies": {
      "docs": {
        "description": "Requires the `optionalDependencies` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-optionalDependencies.md"
      },
      "type": "suggestion",
      "name": "package-json/require-optionalDependencies",
      "plugin": "package-json"
    },
    "package-json/require-peerDependencies": {
      "docs": {
        "description": "Requires the `peerDependencies` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-peerDependencies.md"
      },
      "type": "suggestion",
      "name": "package-json/require-peerDependencies",
      "plugin": "package-json"
    },
    "package-json/require-type": {
      "docs": {
        "description": "Requires the `type` property to be present.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-type.md"
      },
      "type": "suggestion",
      "name": "package-json/require-type",
      "plugin": "package-json"
    },
    "package-json/require-types": {
      "docs": {
        "description": "Requires the `types` property to be present.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-types.md"
      },
      "type": "suggestion",
      "name": "package-json/require-types",
      "plugin": "package-json"
    },
    "package-json/require-version": {
      "docs": {
        "description": "Requires the `version` property to be present.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/require-version.md"
      },
      "type": "suggestion",
      "name": "package-json/require-version",
      "plugin": "package-json"
    },
    "package-json/repository-shorthand": {
      "defaultOptions": [
        {
          "form": "object"
        }
      ],
      "docs": {
        "category": "Best Practices",
        "description": "Enforce either object or shorthand declaration for repository.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/repository-shorthand.md"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "package-json/repository-shorthand",
      "plugin": "package-json"
    },
    "package-json/restrict-dependency-ranges": {
      "defaultOptions": [
        []
      ],
      "docs": {
        "description": "Restricts the range of dependencies to allow or disallow specific types of ranges.",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/restrict-dependency-ranges.md"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "package-json/restrict-dependency-ranges",
      "plugin": "package-json"
    },
    "package-json/sort-collections": {
      "defaultOptions": [
        [
          "config",
          "dependencies",
          "devDependencies",
          "exports",
          "optionalDependencies",
          "overrides",
          "peerDependencies",
          "peerDependenciesMeta",
          "scripts"
        ]
      ],
      "docs": {
        "category": "Best Practices",
        "description": "Dependencies, scripts, and configuration values must be declared in alphabetical order.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/sort-collections.md"
      },
      "fixable": "code",
      "type": "layout",
      "name": "package-json/sort-collections",
      "plugin": "package-json"
    },
    "package-json/unique-dependencies": {
      "docs": {
        "category": "Best Practices",
        "description": "Checks a dependency isn't specified more than once (i.e. in `dependencies` and `devDependencies`)",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/unique-dependencies.md"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "package-json/unique-dependencies",
      "plugin": "package-json"
    },
    "package-json/valid-author": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `author` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-author.md"
      },
      "type": "problem",
      "name": "package-json/valid-author",
      "plugin": "package-json"
    },
    "package-json/valid-bundleDependencies": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `bundleDependencies` (also: `bundledDependencies`) property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-bundleDependencies.md"
      },
      "type": "problem",
      "name": "package-json/valid-bundleDependencies",
      "plugin": "package-json"
    },
    "package-json/valid-config": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `config` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-config.md"
      },
      "type": "problem",
      "name": "package-json/valid-config",
      "plugin": "package-json"
    },
    "package-json/valid-cpu": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `cpu` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-cpu.md"
      },
      "type": "problem",
      "name": "package-json/valid-cpu",
      "plugin": "package-json"
    },
    "package-json/valid-dependencies": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `dependencies` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-dependencies.md"
      },
      "type": "problem",
      "name": "package-json/valid-dependencies",
      "plugin": "package-json"
    },
    "package-json/valid-description": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `description` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-description.md"
      },
      "type": "problem",
      "name": "package-json/valid-description",
      "plugin": "package-json"
    },
    "package-json/valid-devDependencies": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `devDependencies` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-devDependencies.md"
      },
      "type": "problem",
      "name": "package-json/valid-devDependencies",
      "plugin": "package-json"
    },
    "package-json/valid-exports": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `exports` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-exports.md"
      },
      "type": "problem",
      "name": "package-json/valid-exports",
      "plugin": "package-json"
    },
    "package-json/valid-license": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `license` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-license.md"
      },
      "type": "problem",
      "name": "package-json/valid-license",
      "plugin": "package-json"
    },
    "package-json/valid-optionalDependencies": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `optionalDependencies` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-optionalDependencies.md"
      },
      "type": "problem",
      "name": "package-json/valid-optionalDependencies",
      "plugin": "package-json"
    },
    "package-json/valid-peerDependencies": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `peerDependencies` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-peerDependencies.md"
      },
      "type": "problem",
      "name": "package-json/valid-peerDependencies",
      "plugin": "package-json"
    },
    "package-json/valid-scripts": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `scripts` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-scripts.md"
      },
      "type": "problem",
      "name": "package-json/valid-scripts",
      "plugin": "package-json"
    },
    "package-json/valid-type": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `type` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-type.md"
      },
      "type": "problem",
      "name": "package-json/valid-type",
      "plugin": "package-json"
    },
    "package-json/valid-bin": {
      "defaultOptions": [
        {
          "enforceCase": false
        }
      ],
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that the `bin` property is valid.",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-bin.md"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "package-json/valid-bin",
      "plugin": "package-json"
    },
    "package-json/valid-local-dependency": {
      "deprecated": true,
      "docs": {
        "category": "Best Practices",
        "description": "Checks existence of local dependencies in the package.json",
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-local-dependency.md"
      },
      "type": "problem",
      "name": "package-json/valid-local-dependency",
      "plugin": "package-json"
    },
    "package-json/valid-name": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that package names are valid npm package names",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-name.md"
      },
      "type": "problem",
      "name": "package-json/valid-name",
      "plugin": "package-json"
    },
    "package-json/valid-package-definition": {
      "defaultOptions": [
        {
          "ignoreProperties": []
        }
      ],
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that package.json has all properties required by the npm spec",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-package-definition.md"
      },
      "type": "problem",
      "name": "package-json/valid-package-definition",
      "plugin": "package-json"
    },
    "package-json/valid-repository-directory": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that if repository directory is specified, it matches the path to the package.json file",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-repository-directory.md"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "package-json/valid-repository-directory",
      "plugin": "package-json"
    },
    "package-json/valid-version": {
      "docs": {
        "category": "Best Practices",
        "description": "Enforce that package versions are valid semver specifiers",
        "recommended": true,
        "url": "https://github.com/JoshuaKGoldberg/eslint-plugin-package-json/blob/HEAD/docs/rules/valid-version.md"
      },
      "type": "problem",
      "name": "package-json/valid-version",
      "plugin": "package-json"
    },
    "prefer-let/prefer-let": {
      "docs": {
        "description": "Use `let` declarations to bind names to values",
        "category": "Stylistic Issues",
        "recommended": false
      },
      "fixable": "code",
      "name": "prefer-let/prefer-let",
      "plugin": "prefer-let"
    },
    "promise/param-names": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent param names and ordering when creating new promises.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/param-names.md"
      },
      "name": "promise/param-names",
      "plugin": "promise"
    },
    "promise/no-return-wrap": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow wrapping values in `Promise.resolve` or `Promise.reject` when not needed.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-return-wrap.md"
      },
      "name": "promise/no-return-wrap",
      "plugin": "promise"
    },
    "promise/always-return": {
      "type": "problem",
      "docs": {
        "description": "Require returning inside each `then()` to create readable and reusable Promise chains.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/always-return.md"
      },
      "name": "promise/always-return",
      "plugin": "promise"
    },
    "promise/catch-or-return": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of `catch()` on un-returned promises.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/catch-or-return.md"
      },
      "name": "promise/catch-or-return",
      "plugin": "promise"
    },
    "promise/prefer-await-to-callbacks": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `async`/`await` to the callback pattern.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/prefer-await-to-callbacks.md"
      },
      "name": "promise/prefer-await-to-callbacks",
      "plugin": "promise"
    },
    "promise/prefer-await-to-then": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `await` to `then()`/`catch()`/`finally()` for reading Promise values.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/prefer-await-to-then.md"
      },
      "name": "promise/prefer-await-to-then",
      "plugin": "promise"
    },
    "promise/prefer-catch": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `catch` to `then(a, b)`/`then(null, b)` for handling errors.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/prefer-catch.md"
      },
      "fixable": "code",
      "name": "promise/prefer-catch",
      "plugin": "promise"
    },
    "promise/no-native": {
      "type": "suggestion",
      "docs": {
        "description": "Require creating a `Promise` constructor before using it in an ES5 environment.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-native.md"
      },
      "name": "promise/no-native",
      "plugin": "promise"
    },
    "promise/no-callback-in-promise": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow calling `cb()` inside of a `then()` (use [util.callbackify][] instead).",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-callback-in-promise.md"
      },
      "name": "promise/no-callback-in-promise",
      "plugin": "promise"
    },
    "promise/no-promise-in-callback": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using promises inside of callbacks.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-promise-in-callback.md"
      },
      "name": "promise/no-promise-in-callback",
      "plugin": "promise"
    },
    "promise/no-nesting": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested `then()` or `catch()` statements.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-nesting.md"
      },
      "name": "promise/no-nesting",
      "plugin": "promise"
    },
    "promise/avoid-new": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow creating `new` promises outside of utility libs (use [util.promisify][] instead).",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/avoid-new.md"
      },
      "name": "promise/avoid-new",
      "plugin": "promise"
    },
    "promise/no-new-statics": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling `new` on a Promise static method.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-new-statics.md"
      },
      "fixable": "code",
      "name": "promise/no-new-statics",
      "plugin": "promise"
    },
    "promise/no-return-in-finally": {
      "type": "problem",
      "docs": {
        "description": "Disallow return statements in `finally()`.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-return-in-finally.md"
      },
      "name": "promise/no-return-in-finally",
      "plugin": "promise"
    },
    "promise/valid-params": {
      "type": "problem",
      "docs": {
        "description": "Enforces the proper number of arguments are passed to Promise functions.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/valid-params.md"
      },
      "name": "promise/valid-params",
      "plugin": "promise"
    },
    "promise/no-multiple-resolved": {
      "type": "problem",
      "docs": {
        "description": "Disallow creating new promises with paths that resolve multiple times.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/no-multiple-resolved.md"
      },
      "name": "promise/no-multiple-resolved",
      "plugin": "promise"
    },
    "promise/spec-only": {
      "type": "problem",
      "docs": {
        "description": "Disallow use of non-standard Promise static methods.",
        "url": "https://github.com/eslint-community/eslint-plugin-promise/blob/main/docs/rules/spec-only.md"
      },
      "name": "promise/spec-only",
      "plugin": "promise"
    },
    "regexp/confusing-quantifier": {
      "docs": {
        "description": "disallow confusing quantifiers",
        "category": "Best Practices",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/confusing-quantifier.html",
        "ruleId": "regexp/confusing-quantifier",
        "ruleName": "confusing-quantifier"
      },
      "type": "problem",
      "name": "regexp/confusing-quantifier",
      "plugin": "regexp"
    },
    "regexp/control-character-escape": {
      "docs": {
        "description": "enforce consistent escaping of control characters",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/control-character-escape.html",
        "ruleId": "regexp/control-character-escape",
        "ruleName": "control-character-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/control-character-escape",
      "plugin": "regexp"
    },
    "regexp/grapheme-string-literal": {
      "docs": {
        "description": "enforce single grapheme in string literal",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/grapheme-string-literal.html",
        "ruleId": "regexp/grapheme-string-literal",
        "ruleName": "grapheme-string-literal"
      },
      "type": "suggestion",
      "name": "regexp/grapheme-string-literal",
      "plugin": "regexp"
    },
    "regexp/hexadecimal-escape": {
      "docs": {
        "description": "enforce consistent usage of hexadecimal escape",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/hexadecimal-escape.html",
        "ruleId": "regexp/hexadecimal-escape",
        "ruleName": "hexadecimal-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/hexadecimal-escape",
      "plugin": "regexp"
    },
    "regexp/letter-case": {
      "docs": {
        "description": "enforce into your favorite case",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/letter-case.html",
        "ruleId": "regexp/letter-case",
        "ruleName": "letter-case"
      },
      "fixable": "code",
      "type": "layout",
      "name": "regexp/letter-case",
      "plugin": "regexp"
    },
    "regexp/match-any": {
      "docs": {
        "description": "enforce match any character style",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/match-any.html",
        "ruleId": "regexp/match-any",
        "ruleName": "match-any"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/match-any",
      "plugin": "regexp"
    },
    "regexp/negation": {
      "docs": {
        "description": "enforce use of escapes on negation",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/negation.html",
        "ruleId": "regexp/negation",
        "ruleName": "negation"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/negation",
      "plugin": "regexp"
    },
    "regexp/no-contradiction-with-assertion": {
      "docs": {
        "description": "disallow elements that contradict assertions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-contradiction-with-assertion.html",
        "ruleId": "regexp/no-contradiction-with-assertion",
        "ruleName": "no-contradiction-with-assertion"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "regexp/no-contradiction-with-assertion",
      "plugin": "regexp"
    },
    "regexp/no-control-character": {
      "docs": {
        "description": "disallow control characters",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-control-character.html",
        "ruleId": "regexp/no-control-character",
        "ruleName": "no-control-character"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "regexp/no-control-character",
      "plugin": "regexp"
    },
    "regexp/no-dupe-characters-character-class": {
      "type": "suggestion",
      "docs": {
        "description": "disallow duplicate characters in the RegExp character class",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-characters-character-class.html",
        "ruleId": "regexp/no-dupe-characters-character-class",
        "ruleName": "no-dupe-characters-character-class"
      },
      "fixable": "code",
      "name": "regexp/no-dupe-characters-character-class",
      "plugin": "regexp"
    },
    "regexp/no-dupe-disjunctions": {
      "docs": {
        "description": "disallow duplicate disjunctions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-dupe-disjunctions.html",
        "ruleId": "regexp/no-dupe-disjunctions",
        "ruleName": "no-dupe-disjunctions"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "regexp/no-dupe-disjunctions",
      "plugin": "regexp"
    },
    "regexp/no-empty-alternative": {
      "docs": {
        "description": "disallow alternatives without elements",
        "category": "Possible Errors",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-alternative.html",
        "ruleId": "regexp/no-empty-alternative",
        "ruleName": "no-empty-alternative"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "regexp/no-empty-alternative",
      "plugin": "regexp"
    },
    "regexp/no-empty-capturing-group": {
      "docs": {
        "description": "disallow capturing group that captures empty.",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-capturing-group.html",
        "ruleId": "regexp/no-empty-capturing-group",
        "ruleName": "no-empty-capturing-group"
      },
      "type": "suggestion",
      "name": "regexp/no-empty-capturing-group",
      "plugin": "regexp"
    },
    "regexp/no-empty-character-class": {
      "docs": {
        "description": "disallow character classes that match no characters",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-character-class.html",
        "ruleId": "regexp/no-empty-character-class",
        "ruleName": "no-empty-character-class"
      },
      "type": "suggestion",
      "name": "regexp/no-empty-character-class",
      "plugin": "regexp"
    },
    "regexp/no-empty-group": {
      "docs": {
        "description": "disallow empty group",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-group.html",
        "ruleId": "regexp/no-empty-group",
        "ruleName": "no-empty-group"
      },
      "type": "suggestion",
      "name": "regexp/no-empty-group",
      "plugin": "regexp"
    },
    "regexp/no-empty-lookarounds-assertion": {
      "docs": {
        "description": "disallow empty lookahead assertion or empty lookbehind assertion",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-lookarounds-assertion.html",
        "ruleId": "regexp/no-empty-lookarounds-assertion",
        "ruleName": "no-empty-lookarounds-assertion"
      },
      "type": "suggestion",
      "name": "regexp/no-empty-lookarounds-assertion",
      "plugin": "regexp"
    },
    "regexp/no-empty-string-literal": {
      "docs": {
        "description": "disallow empty string literals in character classes",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-empty-string-literal.html",
        "ruleId": "regexp/no-empty-string-literal",
        "ruleName": "no-empty-string-literal"
      },
      "type": "suggestion",
      "name": "regexp/no-empty-string-literal",
      "plugin": "regexp"
    },
    "regexp/no-escape-backspace": {
      "docs": {
        "description": "disallow escape backspace (`[\\b]`)",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-escape-backspace.html",
        "ruleId": "regexp/no-escape-backspace",
        "ruleName": "no-escape-backspace"
      },
      "hasSuggestions": true,
      "type": "suggestion",
      "name": "regexp/no-escape-backspace",
      "plugin": "regexp"
    },
    "regexp/no-extra-lookaround-assertions": {
      "docs": {
        "description": "disallow unnecessary nested lookaround assertions",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-extra-lookaround-assertions.html",
        "ruleId": "regexp/no-extra-lookaround-assertions",
        "ruleName": "no-extra-lookaround-assertions"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-extra-lookaround-assertions",
      "plugin": "regexp"
    },
    "regexp/no-invalid-regexp": {
      "docs": {
        "description": "disallow invalid regular expression strings in `RegExp` constructors",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invalid-regexp.html",
        "ruleId": "regexp/no-invalid-regexp",
        "ruleName": "no-invalid-regexp"
      },
      "type": "problem",
      "name": "regexp/no-invalid-regexp",
      "plugin": "regexp"
    },
    "regexp/no-invisible-character": {
      "docs": {
        "description": "disallow invisible raw character",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-invisible-character.html",
        "ruleId": "regexp/no-invisible-character",
        "ruleName": "no-invisible-character"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-invisible-character",
      "plugin": "regexp"
    },
    "regexp/no-lazy-ends": {
      "docs": {
        "description": "disallow lazy quantifiers at the end of an expression",
        "category": "Possible Errors",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-lazy-ends.html",
        "ruleId": "regexp/no-lazy-ends",
        "ruleName": "no-lazy-ends"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "regexp/no-lazy-ends",
      "plugin": "regexp"
    },
    "regexp/no-legacy-features": {
      "docs": {
        "description": "disallow legacy RegExp features",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-legacy-features.html",
        "ruleId": "regexp/no-legacy-features",
        "ruleName": "no-legacy-features"
      },
      "type": "suggestion",
      "name": "regexp/no-legacy-features",
      "plugin": "regexp"
    },
    "regexp/no-misleading-capturing-group": {
      "docs": {
        "description": "disallow capturing groups that do not behave as one would expect",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-capturing-group.html",
        "ruleId": "regexp/no-misleading-capturing-group",
        "ruleName": "no-misleading-capturing-group"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "regexp/no-misleading-capturing-group",
      "plugin": "regexp"
    },
    "regexp/no-misleading-unicode-character": {
      "docs": {
        "description": "disallow multi-code-point characters in character classes and quantifiers",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-misleading-unicode-character.html",
        "ruleId": "regexp/no-misleading-unicode-character",
        "ruleName": "no-misleading-unicode-character"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "type": "problem",
      "name": "regexp/no-misleading-unicode-character",
      "plugin": "regexp"
    },
    "regexp/no-missing-g-flag": {
      "docs": {
        "description": "disallow missing `g` flag in patterns used in `String#matchAll` and `String#replaceAll`",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-missing-g-flag.html",
        "ruleId": "regexp/no-missing-g-flag",
        "ruleName": "no-missing-g-flag"
      },
      "fixable": "code",
      "type": "problem",
      "name": "regexp/no-missing-g-flag",
      "plugin": "regexp"
    },
    "regexp/no-non-standard-flag": {
      "docs": {
        "description": "disallow non-standard flags",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-non-standard-flag.html",
        "ruleId": "regexp/no-non-standard-flag",
        "ruleName": "no-non-standard-flag"
      },
      "type": "suggestion",
      "name": "regexp/no-non-standard-flag",
      "plugin": "regexp"
    },
    "regexp/no-obscure-range": {
      "docs": {
        "description": "disallow obscure character ranges",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-obscure-range.html",
        "ruleId": "regexp/no-obscure-range",
        "ruleName": "no-obscure-range"
      },
      "type": "suggestion",
      "name": "regexp/no-obscure-range",
      "plugin": "regexp"
    },
    "regexp/no-octal": {
      "docs": {
        "description": "disallow octal escape sequence",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-octal.html",
        "ruleId": "regexp/no-octal",
        "ruleName": "no-octal"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "regexp/no-octal",
      "plugin": "regexp"
    },
    "regexp/no-optional-assertion": {
      "docs": {
        "description": "disallow optional assertions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-optional-assertion.html",
        "ruleId": "regexp/no-optional-assertion",
        "ruleName": "no-optional-assertion"
      },
      "type": "problem",
      "name": "regexp/no-optional-assertion",
      "plugin": "regexp"
    },
    "regexp/no-potentially-useless-backreference": {
      "docs": {
        "description": "disallow backreferences that reference a group that might not be matched",
        "category": "Possible Errors",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-potentially-useless-backreference.html",
        "ruleId": "regexp/no-potentially-useless-backreference",
        "ruleName": "no-potentially-useless-backreference"
      },
      "type": "problem",
      "name": "regexp/no-potentially-useless-backreference",
      "plugin": "regexp"
    },
    "regexp/no-standalone-backslash": {
      "docs": {
        "description": "disallow standalone backslashes (`\\`)",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-standalone-backslash.html",
        "ruleId": "regexp/no-standalone-backslash",
        "ruleName": "no-standalone-backslash"
      },
      "type": "suggestion",
      "name": "regexp/no-standalone-backslash",
      "plugin": "regexp"
    },
    "regexp/no-super-linear-backtracking": {
      "docs": {
        "description": "disallow exponential and polynomial backtracking",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-backtracking.html",
        "ruleId": "regexp/no-super-linear-backtracking",
        "ruleName": "no-super-linear-backtracking"
      },
      "fixable": "code",
      "type": "problem",
      "name": "regexp/no-super-linear-backtracking",
      "plugin": "regexp"
    },
    "regexp/no-super-linear-move": {
      "docs": {
        "description": "disallow quantifiers that cause quadratic moves",
        "category": "Possible Errors",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-super-linear-move.html",
        "ruleId": "regexp/no-super-linear-move",
        "ruleName": "no-super-linear-move"
      },
      "type": "problem",
      "name": "regexp/no-super-linear-move",
      "plugin": "regexp"
    },
    "regexp/no-trivially-nested-assertion": {
      "docs": {
        "description": "disallow trivially nested assertions",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-assertion.html",
        "ruleId": "regexp/no-trivially-nested-assertion",
        "ruleName": "no-trivially-nested-assertion"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-trivially-nested-assertion",
      "plugin": "regexp"
    },
    "regexp/no-trivially-nested-quantifier": {
      "docs": {
        "description": "disallow nested quantifiers that can be rewritten as one quantifier",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-trivially-nested-quantifier.html",
        "ruleId": "regexp/no-trivially-nested-quantifier",
        "ruleName": "no-trivially-nested-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-trivially-nested-quantifier",
      "plugin": "regexp"
    },
    "regexp/no-unused-capturing-group": {
      "docs": {
        "description": "disallow unused capturing group",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-unused-capturing-group.html",
        "ruleId": "regexp/no-unused-capturing-group",
        "ruleName": "no-unused-capturing-group"
      },
      "fixable": "code",
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "regexp/no-unused-capturing-group",
      "plugin": "regexp"
    },
    "regexp/no-useless-assertions": {
      "docs": {
        "description": "disallow assertions that are known to always accept (or reject)",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-assertions.html",
        "ruleId": "regexp/no-useless-assertions",
        "ruleName": "no-useless-assertions"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "regexp/no-useless-assertions",
      "plugin": "regexp"
    },
    "regexp/no-useless-backreference": {
      "docs": {
        "description": "disallow useless backreferences in regular expressions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-backreference.html",
        "ruleId": "regexp/no-useless-backreference",
        "ruleName": "no-useless-backreference"
      },
      "type": "suggestion",
      "name": "regexp/no-useless-backreference",
      "plugin": "regexp"
    },
    "regexp/no-useless-character-class": {
      "docs": {
        "description": "disallow character class with one character",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-character-class.html",
        "ruleId": "regexp/no-useless-character-class",
        "ruleName": "no-useless-character-class"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-character-class",
      "plugin": "regexp"
    },
    "regexp/no-useless-dollar-replacements": {
      "docs": {
        "description": "disallow useless `$` replacements in replacement string",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-dollar-replacements.html",
        "ruleId": "regexp/no-useless-dollar-replacements",
        "ruleName": "no-useless-dollar-replacements"
      },
      "type": "suggestion",
      "name": "regexp/no-useless-dollar-replacements",
      "plugin": "regexp"
    },
    "regexp/no-useless-escape": {
      "docs": {
        "description": "disallow unnecessary escape characters in RegExp",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-escape.html",
        "ruleId": "regexp/no-useless-escape",
        "ruleName": "no-useless-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-escape",
      "plugin": "regexp"
    },
    "regexp/no-useless-flag": {
      "docs": {
        "description": "disallow unnecessary regex flags",
        "category": "Best Practices",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-flag.html",
        "ruleId": "regexp/no-useless-flag",
        "ruleName": "no-useless-flag"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-flag",
      "plugin": "regexp"
    },
    "regexp/no-useless-lazy": {
      "docs": {
        "description": "disallow unnecessarily non-greedy quantifiers",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-lazy.html",
        "ruleId": "regexp/no-useless-lazy",
        "ruleName": "no-useless-lazy"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-lazy",
      "plugin": "regexp"
    },
    "regexp/no-useless-non-capturing-group": {
      "docs": {
        "description": "disallow unnecessary non-capturing group",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-non-capturing-group.html",
        "ruleId": "regexp/no-useless-non-capturing-group",
        "ruleName": "no-useless-non-capturing-group"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-non-capturing-group",
      "plugin": "regexp"
    },
    "regexp/no-useless-quantifier": {
      "docs": {
        "description": "disallow quantifiers that can be removed",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-quantifier.html",
        "ruleId": "regexp/no-useless-quantifier",
        "ruleName": "no-useless-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "regexp/no-useless-quantifier",
      "plugin": "regexp"
    },
    "regexp/no-useless-range": {
      "docs": {
        "description": "disallow unnecessary character ranges",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-range.html",
        "ruleId": "regexp/no-useless-range",
        "ruleName": "no-useless-range"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-range",
      "plugin": "regexp"
    },
    "regexp/no-useless-set-operand": {
      "docs": {
        "description": "disallow unnecessary elements in expression character classes",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-set-operand.html",
        "ruleId": "regexp/no-useless-set-operand",
        "ruleName": "no-useless-set-operand"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-set-operand",
      "plugin": "regexp"
    },
    "regexp/no-useless-string-literal": {
      "docs": {
        "description": "disallow string disjunction of single characters in `\\q{...}`",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-string-literal.html",
        "ruleId": "regexp/no-useless-string-literal",
        "ruleName": "no-useless-string-literal"
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "regexp/no-useless-string-literal",
      "plugin": "regexp"
    },
    "regexp/no-useless-two-nums-quantifier": {
      "docs": {
        "description": "disallow unnecessary `{n,m}` quantifier",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-useless-two-nums-quantifier.html",
        "ruleId": "regexp/no-useless-two-nums-quantifier",
        "ruleName": "no-useless-two-nums-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/no-useless-two-nums-quantifier",
      "plugin": "regexp"
    },
    "regexp/no-zero-quantifier": {
      "docs": {
        "description": "disallow quantifiers with a maximum of zero",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/no-zero-quantifier.html",
        "ruleId": "regexp/no-zero-quantifier",
        "ruleName": "no-zero-quantifier"
      },
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "regexp/no-zero-quantifier",
      "plugin": "regexp"
    },
    "regexp/optimal-lookaround-quantifier": {
      "docs": {
        "description": "disallow the alternatives of lookarounds that end with a non-constant quantifier",
        "category": "Best Practices",
        "recommended": true,
        "default": "warn",
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-lookaround-quantifier.html",
        "ruleId": "regexp/optimal-lookaround-quantifier",
        "ruleName": "optimal-lookaround-quantifier"
      },
      "hasSuggestions": true,
      "type": "problem",
      "name": "regexp/optimal-lookaround-quantifier",
      "plugin": "regexp"
    },
    "regexp/optimal-quantifier-concatenation": {
      "docs": {
        "description": "require optimal quantifiers for concatenated quantifiers",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/optimal-quantifier-concatenation.html",
        "ruleId": "regexp/optimal-quantifier-concatenation",
        "ruleName": "optimal-quantifier-concatenation"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/optimal-quantifier-concatenation",
      "plugin": "regexp"
    },
    "regexp/prefer-character-class": {
      "docs": {
        "description": "enforce using character class",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-character-class.html",
        "ruleId": "regexp/prefer-character-class",
        "ruleName": "prefer-character-class"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-character-class",
      "plugin": "regexp"
    },
    "regexp/prefer-d": {
      "docs": {
        "description": "enforce using `\\d`",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-d.html",
        "ruleId": "regexp/prefer-d",
        "ruleName": "prefer-d"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-d",
      "plugin": "regexp"
    },
    "regexp/prefer-escape-replacement-dollar-char": {
      "docs": {
        "description": "enforces escape of replacement `$` character (`$$`).",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-escape-replacement-dollar-char.html",
        "ruleId": "regexp/prefer-escape-replacement-dollar-char",
        "ruleName": "prefer-escape-replacement-dollar-char"
      },
      "type": "suggestion",
      "name": "regexp/prefer-escape-replacement-dollar-char",
      "plugin": "regexp"
    },
    "regexp/prefer-lookaround": {
      "docs": {
        "description": "prefer lookarounds over capturing group that do not replace",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-lookaround.html",
        "ruleId": "regexp/prefer-lookaround",
        "ruleName": "prefer-lookaround"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-lookaround",
      "plugin": "regexp"
    },
    "regexp/prefer-named-backreference": {
      "docs": {
        "description": "enforce using named backreferences",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-backreference.html",
        "ruleId": "regexp/prefer-named-backreference",
        "ruleName": "prefer-named-backreference"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-named-backreference",
      "plugin": "regexp"
    },
    "regexp/prefer-named-capture-group": {
      "docs": {
        "description": "enforce using named capture groups",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-capture-group.html",
        "ruleId": "regexp/prefer-named-capture-group",
        "ruleName": "prefer-named-capture-group"
      },
      "type": "suggestion",
      "name": "regexp/prefer-named-capture-group",
      "plugin": "regexp"
    },
    "regexp/prefer-named-replacement": {
      "docs": {
        "description": "enforce using named replacement",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-named-replacement.html",
        "ruleId": "regexp/prefer-named-replacement",
        "ruleName": "prefer-named-replacement"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-named-replacement",
      "plugin": "regexp"
    },
    "regexp/prefer-plus-quantifier": {
      "docs": {
        "description": "enforce using `+` quantifier",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-plus-quantifier.html",
        "ruleId": "regexp/prefer-plus-quantifier",
        "ruleName": "prefer-plus-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-plus-quantifier",
      "plugin": "regexp"
    },
    "regexp/prefer-predefined-assertion": {
      "docs": {
        "description": "prefer predefined assertion over equivalent lookarounds",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-predefined-assertion.html",
        "ruleId": "regexp/prefer-predefined-assertion",
        "ruleName": "prefer-predefined-assertion"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-predefined-assertion",
      "plugin": "regexp"
    },
    "regexp/prefer-quantifier": {
      "docs": {
        "description": "enforce using quantifier",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-quantifier.html",
        "ruleId": "regexp/prefer-quantifier",
        "ruleName": "prefer-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-quantifier",
      "plugin": "regexp"
    },
    "regexp/prefer-question-quantifier": {
      "docs": {
        "description": "enforce using `?` quantifier",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-question-quantifier.html",
        "ruleId": "regexp/prefer-question-quantifier",
        "ruleName": "prefer-question-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-question-quantifier",
      "plugin": "regexp"
    },
    "regexp/prefer-range": {
      "docs": {
        "description": "enforce using character class range",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-range.html",
        "ruleId": "regexp/prefer-range",
        "ruleName": "prefer-range"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-range",
      "plugin": "regexp"
    },
    "regexp/prefer-regexp-exec": {
      "docs": {
        "description": "enforce that `RegExp#exec` is used instead of `String#match` if no global flag is provided",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-exec.html",
        "ruleId": "regexp/prefer-regexp-exec",
        "ruleName": "prefer-regexp-exec"
      },
      "type": "suggestion",
      "name": "regexp/prefer-regexp-exec",
      "plugin": "regexp"
    },
    "regexp/prefer-regexp-test": {
      "docs": {
        "description": "enforce that `RegExp#test` is used instead of `String#match` and `RegExp#exec`",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-regexp-test.html",
        "ruleId": "regexp/prefer-regexp-test",
        "ruleName": "prefer-regexp-test"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-regexp-test",
      "plugin": "regexp"
    },
    "regexp/prefer-result-array-groups": {
      "docs": {
        "description": "enforce using result array `groups`",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-result-array-groups.html",
        "ruleId": "regexp/prefer-result-array-groups",
        "ruleName": "prefer-result-array-groups"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-result-array-groups",
      "plugin": "regexp"
    },
    "regexp/prefer-set-operation": {
      "docs": {
        "description": "prefer character class set operations instead of lookarounds",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-set-operation.html",
        "ruleId": "regexp/prefer-set-operation",
        "ruleName": "prefer-set-operation"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-set-operation",
      "plugin": "regexp"
    },
    "regexp/prefer-star-quantifier": {
      "docs": {
        "description": "enforce using `*` quantifier",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-star-quantifier.html",
        "ruleId": "regexp/prefer-star-quantifier",
        "ruleName": "prefer-star-quantifier"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-star-quantifier",
      "plugin": "regexp"
    },
    "regexp/prefer-unicode-codepoint-escapes": {
      "docs": {
        "description": "enforce use of unicode codepoint escapes",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-unicode-codepoint-escapes.html",
        "ruleId": "regexp/prefer-unicode-codepoint-escapes",
        "ruleName": "prefer-unicode-codepoint-escapes"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-unicode-codepoint-escapes",
      "plugin": "regexp"
    },
    "regexp/prefer-w": {
      "docs": {
        "description": "enforce using `\\w`",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/prefer-w.html",
        "ruleId": "regexp/prefer-w",
        "ruleName": "prefer-w"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/prefer-w",
      "plugin": "regexp"
    },
    "regexp/require-unicode-regexp": {
      "docs": {
        "description": "enforce the use of the `u` flag",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-regexp.html",
        "ruleId": "regexp/require-unicode-regexp",
        "ruleName": "require-unicode-regexp"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/require-unicode-regexp",
      "plugin": "regexp"
    },
    "regexp/require-unicode-sets-regexp": {
      "docs": {
        "description": "enforce the use of the `v` flag",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/require-unicode-sets-regexp.html",
        "ruleId": "regexp/require-unicode-sets-regexp",
        "ruleName": "require-unicode-sets-regexp"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/require-unicode-sets-regexp",
      "plugin": "regexp"
    },
    "regexp/simplify-set-operations": {
      "docs": {
        "description": "require simplify set operations",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/simplify-set-operations.html",
        "ruleId": "regexp/simplify-set-operations",
        "ruleName": "simplify-set-operations"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/simplify-set-operations",
      "plugin": "regexp"
    },
    "regexp/sort-alternatives": {
      "docs": {
        "description": "sort alternatives if order doesn't matter",
        "category": "Best Practices",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-alternatives.html",
        "ruleId": "regexp/sort-alternatives",
        "ruleName": "sort-alternatives"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/sort-alternatives",
      "plugin": "regexp"
    },
    "regexp/sort-character-class-elements": {
      "docs": {
        "description": "enforces elements order in character class",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-character-class-elements.html",
        "ruleId": "regexp/sort-character-class-elements",
        "ruleName": "sort-character-class-elements"
      },
      "fixable": "code",
      "type": "layout",
      "name": "regexp/sort-character-class-elements",
      "plugin": "regexp"
    },
    "regexp/sort-flags": {
      "docs": {
        "description": "require regex flags to be sorted",
        "category": "Stylistic Issues",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/sort-flags.html",
        "ruleId": "regexp/sort-flags",
        "ruleName": "sort-flags"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/sort-flags",
      "plugin": "regexp"
    },
    "regexp/strict": {
      "docs": {
        "description": "disallow not strictly valid regular expressions",
        "category": "Possible Errors",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/strict.html",
        "ruleId": "regexp/strict",
        "ruleName": "strict"
      },
      "fixable": "code",
      "type": "suggestion",
      "hasSuggestions": true,
      "name": "regexp/strict",
      "plugin": "regexp"
    },
    "regexp/unicode-escape": {
      "docs": {
        "description": "enforce consistent usage of unicode escape or unicode codepoint escape",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-escape.html",
        "ruleId": "regexp/unicode-escape",
        "ruleName": "unicode-escape"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/unicode-escape",
      "plugin": "regexp"
    },
    "regexp/unicode-property": {
      "docs": {
        "description": "enforce consistent naming of unicode properties",
        "category": "Stylistic Issues",
        "recommended": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/unicode-property.html",
        "ruleId": "regexp/unicode-property",
        "ruleName": "unicode-property"
      },
      "type": "suggestion",
      "fixable": "code",
      "name": "regexp/unicode-property",
      "plugin": "regexp"
    },
    "regexp/use-ignore-case": {
      "docs": {
        "description": "use the `i` flag if it simplifies the pattern",
        "category": "Best Practices",
        "recommended": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-regexp/rules/use-ignore-case.html",
        "ruleId": "regexp/use-ignore-case",
        "ruleName": "use-ignore-case"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "regexp/use-ignore-case",
      "plugin": "regexp"
    },
    "security/detect-unsafe-regex": {
      "type": "error",
      "docs": {
        "description": "Detects potentially unsafe regular expressions, which may take a very long time to run, blocking the event loop.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-unsafe-regex.md"
      },
      "name": "security/detect-unsafe-regex",
      "plugin": "security"
    },
    "security/detect-non-literal-regexp": {
      "type": "error",
      "docs": {
        "description": "Detects \"RegExp(variable)\", which might allow an attacker to DOS your server with a long-running regular expression.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-non-literal-regexp.md"
      },
      "name": "security/detect-non-literal-regexp",
      "plugin": "security"
    },
    "security/detect-non-literal-require": {
      "type": "error",
      "docs": {
        "description": "Detects \"require(variable)\", which might allow an attacker to load and run arbitrary code, or access arbitrary files on disk.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-non-literal-require.md"
      },
      "name": "security/detect-non-literal-require",
      "plugin": "security"
    },
    "security/detect-non-literal-fs-filename": {
      "type": "error",
      "docs": {
        "description": "Detects variable in filename argument of \"fs\" calls, which might allow an attacker to access anything on your system.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-non-literal-fs-filename.md"
      },
      "name": "security/detect-non-literal-fs-filename",
      "plugin": "security"
    },
    "security/detect-eval-with-expression": {
      "type": "error",
      "docs": {
        "description": "Detects \"eval(variable)\" which can allow an attacker to run arbitrary code inside your process.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-eval-with-expression.md"
      },
      "name": "security/detect-eval-with-expression",
      "plugin": "security"
    },
    "security/detect-pseudoRandomBytes": {
      "type": "error",
      "docs": {
        "description": "Detects if \"pseudoRandomBytes()\" is in use, which might not give you the randomness you need and expect.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-pseudoRandomBytes.md"
      },
      "name": "security/detect-pseudoRandomBytes",
      "plugin": "security"
    },
    "security/detect-possible-timing-attacks": {
      "type": "error",
      "docs": {
        "description": "Detects insecure comparisons (`==`, `!=`, `!==` and `===`), which check input sequentially.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-possible-timing-attacks.md"
      },
      "name": "security/detect-possible-timing-attacks",
      "plugin": "security"
    },
    "security/detect-no-csrf-before-method-override": {
      "type": "error",
      "docs": {
        "description": "Detects Express \"csrf\" middleware setup before \"method-override\" middleware.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-no-csrf-before-method-override.md"
      },
      "name": "security/detect-no-csrf-before-method-override",
      "plugin": "security"
    },
    "security/detect-buffer-noassert": {
      "type": "error",
      "docs": {
        "description": "Detects calls to \"buffer\" with \"noAssert\" flag set.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-buffer-noassert.md"
      },
      "__methodsToCheck": {
        "read": [
          "readUInt8",
          "readUInt16LE",
          "readUInt16BE",
          "readUInt32LE",
          "readUInt32BE",
          "readInt8",
          "readInt16LE",
          "readInt16BE",
          "readInt32LE",
          "readInt32BE",
          "readFloatLE",
          "readFloatBE",
          "readDoubleLE",
          "readDoubleBE"
        ],
        "write": [
          "writeUInt8",
          "writeUInt16LE",
          "writeUInt16BE",
          "writeUInt32LE",
          "writeUInt32BE",
          "writeInt8",
          "writeInt16LE",
          "writeInt16BE",
          "writeInt32LE",
          "writeInt32BE",
          "writeFloatLE",
          "writeFloatBE",
          "writeDoubleLE",
          "writeDoubleBE"
        ]
      },
      "name": "security/detect-buffer-noassert",
      "plugin": "security"
    },
    "security/detect-child-process": {
      "type": "error",
      "docs": {
        "description": "Detects instances of \"child_process\" & non-literal \"exec()\" calls.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-child-process.md"
      },
      "name": "security/detect-child-process",
      "plugin": "security"
    },
    "security/detect-disable-mustache-escape": {
      "type": "error",
      "docs": {
        "description": "Detects \"object.escapeMarkup = false\", which can be used with some template engines to disable escaping of HTML entities.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-disable-mustache-escape.md"
      },
      "name": "security/detect-disable-mustache-escape",
      "plugin": "security"
    },
    "security/detect-object-injection": {
      "type": "error",
      "docs": {
        "description": "Detects \"variable[key]\" as a left- or right-hand assignment operand.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-object-injection.md"
      },
      "name": "security/detect-object-injection",
      "plugin": "security"
    },
    "security/detect-new-buffer": {
      "type": "error",
      "docs": {
        "description": "Detects instances of new Buffer(argument) where argument is any non-literal value.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-new-buffer.md"
      },
      "name": "security/detect-new-buffer",
      "plugin": "security"
    },
    "security/detect-bidi-characters": {
      "type": "error",
      "docs": {
        "description": "Detects trojan source attacks that employ unicode bidi attacks to inject malicious code.",
        "category": "Possible Security Vulnerability",
        "recommended": true,
        "url": "https://github.com/eslint-community/eslint-plugin-security/blob/main/docs/rules/detect-bidi-characters.md"
      },
      "name": "security/detect-bidi-characters",
      "plugin": "security"
    },
    "stylistic/array-bracket-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce linebreaks after opening and before closing array brackets",
        "url": "https://eslint.style/rules/array-bracket-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/array-bracket-newline",
      "plugin": "stylistic"
    },
    "stylistic/array-bracket-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside array brackets",
        "url": "https://eslint.style/rules/array-bracket-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/array-bracket-spacing",
      "plugin": "stylistic"
    },
    "stylistic/array-element-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks after each array element",
        "url": "https://eslint.style/rules/array-element-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/array-element-newline",
      "plugin": "stylistic"
    },
    "stylistic/arrow-parens": {
      "type": "layout",
      "docs": {
        "description": "Require parentheses around arrow function arguments",
        "url": "https://eslint.style/rules/arrow-parens"
      },
      "fixable": "code",
      "name": "stylistic/arrow-parens",
      "plugin": "stylistic"
    },
    "stylistic/arrow-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after the arrow in arrow functions",
        "url": "https://eslint.style/rules/arrow-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/arrow-spacing",
      "plugin": "stylistic"
    },
    "stylistic/block-spacing": {
      "type": "layout",
      "docs": {
        "description": "Disallow or enforce spaces inside of blocks after opening block and before closing block",
        "url": "https://eslint.style/rules/block-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/block-spacing",
      "plugin": "stylistic"
    },
    "stylistic/brace-style": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent brace style for blocks",
        "url": "https://eslint.style/rules/brace-style"
      },
      "fixable": "whitespace",
      "name": "stylistic/brace-style",
      "plugin": "stylistic"
    },
    "stylistic/comma-dangle": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow trailing commas",
        "url": "https://eslint.style/rules/comma-dangle"
      },
      "fixable": "code",
      "name": "stylistic/comma-dangle",
      "plugin": "stylistic"
    },
    "stylistic/comma-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after commas",
        "url": "https://eslint.style/rules/comma-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/comma-spacing",
      "plugin": "stylistic"
    },
    "stylistic/comma-style": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent comma style",
        "url": "https://eslint.style/rules/comma-style"
      },
      "fixable": "code",
      "name": "stylistic/comma-style",
      "plugin": "stylistic"
    },
    "stylistic/computed-property-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside computed property brackets",
        "url": "https://eslint.style/rules/computed-property-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/computed-property-spacing",
      "plugin": "stylistic"
    },
    "stylistic/curly-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks after opening and before closing braces",
        "url": "https://eslint.style/rules/curly-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/curly-newline",
      "plugin": "stylistic"
    },
    "stylistic/dot-location": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent newlines before and after dots",
        "url": "https://eslint.style/rules/dot-location"
      },
      "fixable": "code",
      "name": "stylistic/dot-location",
      "plugin": "stylistic"
    },
    "stylistic/eol-last": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow newline at the end of files",
        "url": "https://eslint.style/rules/eol-last"
      },
      "fixable": "whitespace",
      "name": "stylistic/eol-last",
      "plugin": "stylistic"
    },
    "stylistic/function-call-argument-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks between arguments of a function call",
        "url": "https://eslint.style/rules/function-call-argument-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/function-call-argument-newline",
      "plugin": "stylistic"
    },
    "stylistic/function-call-spacing": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between function identifiers and their invocations",
        "url": "https://eslint.style/rules/function-call-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/function-call-spacing",
      "plugin": "stylistic"
    },
    "stylistic/function-paren-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks inside function parentheses",
        "url": "https://eslint.style/rules/function-paren-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/function-paren-newline",
      "plugin": "stylistic"
    },
    "stylistic/generator-star-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing around `*` operators in generator functions",
        "url": "https://eslint.style/rules/generator-star-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/generator-star-spacing",
      "plugin": "stylistic"
    },
    "stylistic/implicit-arrow-linebreak": {
      "type": "layout",
      "docs": {
        "description": "Enforce the location of arrow function bodies",
        "url": "https://eslint.style/rules/implicit-arrow-linebreak"
      },
      "fixable": "whitespace",
      "name": "stylistic/implicit-arrow-linebreak",
      "plugin": "stylistic"
    },
    "stylistic/indent": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent indentation",
        "url": "https://eslint.style/rules/indent"
      },
      "fixable": "whitespace",
      "name": "stylistic/indent",
      "plugin": "stylistic"
    },
    "stylistic/indent-binary-ops": {
      "type": "layout",
      "docs": {
        "description": "Indentation for binary operators",
        "url": "https://eslint.style/rules/indent-binary-ops"
      },
      "fixable": "whitespace",
      "name": "stylistic/indent-binary-ops",
      "plugin": "stylistic"
    },
    "stylistic/jsx-child-element-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce or disallow spaces inside of curly braces in JSX attributes and expressions",
        "url": "https://eslint.style/rules/jsx-child-element-spacing"
      },
      "name": "stylistic/jsx-child-element-spacing",
      "plugin": "stylistic"
    },
    "stylistic/jsx-closing-bracket-location": {
      "type": "layout",
      "docs": {
        "description": "Enforce closing bracket location in JSX",
        "url": "https://eslint.style/rules/jsx-closing-bracket-location"
      },
      "fixable": "code",
      "name": "stylistic/jsx-closing-bracket-location",
      "plugin": "stylistic"
    },
    "stylistic/jsx-closing-tag-location": {
      "type": "layout",
      "docs": {
        "description": "Enforce closing tag location for multiline JSX",
        "url": "https://eslint.style/rules/jsx-closing-tag-location"
      },
      "fixable": "whitespace",
      "name": "stylistic/jsx-closing-tag-location",
      "plugin": "stylistic"
    },
    "stylistic/jsx-curly-brace-presence": {
      "type": "layout",
      "docs": {
        "description": "Disallow unnecessary JSX expressions when literals alone are sufficient or enforce JSX expressions on literals in JSX children or attributes",
        "url": "https://eslint.style/rules/jsx-curly-brace-presence"
      },
      "fixable": "code",
      "name": "stylistic/jsx-curly-brace-presence",
      "plugin": "stylistic"
    },
    "stylistic/jsx-curly-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreaks in curly braces in JSX attributes and expressions",
        "url": "https://eslint.style/rules/jsx-curly-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/jsx-curly-newline",
      "plugin": "stylistic"
    },
    "stylistic/jsx-curly-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce or disallow spaces inside of curly braces in JSX attributes and expressions",
        "url": "https://eslint.style/rules/jsx-curly-spacing"
      },
      "fixable": "code",
      "name": "stylistic/jsx-curly-spacing",
      "plugin": "stylistic"
    },
    "stylistic/jsx-equals-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce or disallow spaces around equal signs in JSX attributes",
        "url": "https://eslint.style/rules/jsx-equals-spacing"
      },
      "fixable": "code",
      "name": "stylistic/jsx-equals-spacing",
      "plugin": "stylistic"
    },
    "stylistic/jsx-first-prop-new-line": {
      "type": "layout",
      "docs": {
        "description": "Enforce proper position of the first property in JSX",
        "url": "https://eslint.style/rules/jsx-first-prop-new-line"
      },
      "fixable": "code",
      "name": "stylistic/jsx-first-prop-new-line",
      "plugin": "stylistic"
    },
    "stylistic/jsx-function-call-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce line breaks before and after JSX elements when they are used as arguments to a function.",
        "url": "https://eslint.style/rules/jsx-function-call-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/jsx-function-call-newline",
      "plugin": "stylistic"
    },
    "stylistic/jsx-indent": {
      "type": "layout",
      "docs": {
        "description": "Enforce JSX indentation. Deprecated, use `indent` rule instead.",
        "url": "https://eslint.style/rules/jsx-indent"
      },
      "deprecated": true,
      "fixable": "whitespace",
      "name": "stylistic/jsx-indent",
      "plugin": "stylistic"
    },
    "stylistic/jsx-indent-props": {
      "type": "layout",
      "docs": {
        "description": "Enforce props indentation in JSX",
        "url": "https://eslint.style/rules/jsx-indent-props"
      },
      "fixable": "code",
      "name": "stylistic/jsx-indent-props",
      "plugin": "stylistic"
    },
    "stylistic/jsx-max-props-per-line": {
      "type": "layout",
      "docs": {
        "description": "Enforce maximum of props on a single line in JSX",
        "url": "https://eslint.style/rules/jsx-max-props-per-line"
      },
      "fixable": "code",
      "name": "stylistic/jsx-max-props-per-line",
      "plugin": "stylistic"
    },
    "stylistic/jsx-newline": {
      "type": "layout",
      "docs": {
        "description": "Require or prevent a new line after jsx elements and expressions.",
        "url": "https://eslint.style/rules/jsx-newline"
      },
      "fixable": "code",
      "name": "stylistic/jsx-newline",
      "plugin": "stylistic"
    },
    "stylistic/jsx-one-expression-per-line": {
      "type": "layout",
      "docs": {
        "description": "Require one JSX element per line",
        "url": "https://eslint.style/rules/jsx-one-expression-per-line"
      },
      "fixable": "whitespace",
      "name": "stylistic/jsx-one-expression-per-line",
      "plugin": "stylistic"
    },
    "stylistic/jsx-pascal-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce PascalCase for user-defined JSX components",
        "url": "https://eslint.style/rules/jsx-pascal-case"
      },
      "name": "stylistic/jsx-pascal-case",
      "plugin": "stylistic"
    },
    "stylistic/jsx-props-no-multi-spaces": {
      "type": "layout",
      "docs": {
        "description": "Disallow multiple spaces between inline JSX props",
        "url": "https://eslint.style/rules/jsx-props-no-multi-spaces"
      },
      "fixable": "code",
      "name": "stylistic/jsx-props-no-multi-spaces",
      "plugin": "stylistic"
    },
    "stylistic/jsx-quotes": {
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either double or single quotes in JSX attributes",
        "url": "https://eslint.style/rules/jsx-quotes"
      },
      "fixable": "whitespace",
      "name": "stylistic/jsx-quotes",
      "plugin": "stylistic"
    },
    "stylistic/jsx-self-closing-comp": {
      "type": "layout",
      "docs": {
        "description": "Disallow extra closing tags for components without children",
        "url": "https://eslint.style/rules/jsx-self-closing-comp"
      },
      "fixable": "code",
      "name": "stylistic/jsx-self-closing-comp",
      "plugin": "stylistic"
    },
    "stylistic/jsx-sort-props": {
      "type": "layout",
      "docs": {
        "description": "Enforce props alphabetical sorting",
        "url": "https://eslint.style/rules/jsx-sort-props"
      },
      "fixable": "code",
      "name": "stylistic/jsx-sort-props",
      "plugin": "stylistic"
    },
    "stylistic/jsx-tag-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce whitespace in and around the JSX opening and closing brackets",
        "url": "https://eslint.style/rules/jsx-tag-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/jsx-tag-spacing",
      "plugin": "stylistic"
    },
    "stylistic/jsx-wrap-multilines": {
      "type": "layout",
      "docs": {
        "description": "Disallow missing parentheses around multiline JSX",
        "url": "https://eslint.style/rules/jsx-wrap-multilines"
      },
      "fixable": "code",
      "name": "stylistic/jsx-wrap-multilines",
      "plugin": "stylistic"
    },
    "stylistic/key-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing between property names and type annotations in types and interfaces",
        "url": "https://eslint.style/rules/key-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/key-spacing",
      "plugin": "stylistic"
    },
    "stylistic/keyword-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after keywords",
        "url": "https://eslint.style/rules/keyword-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/keyword-spacing",
      "plugin": "stylistic"
    },
    "stylistic/line-comment-position": {
      "type": "layout",
      "docs": {
        "description": "Enforce position of line comments",
        "url": "https://eslint.style/rules/line-comment-position"
      },
      "name": "stylistic/line-comment-position",
      "plugin": "stylistic"
    },
    "stylistic/linebreak-style": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style",
        "url": "https://eslint.style/rules/linebreak-style"
      },
      "fixable": "whitespace",
      "name": "stylistic/linebreak-style",
      "plugin": "stylistic"
    },
    "stylistic/lines-around-comment": {
      "type": "layout",
      "docs": {
        "description": "Require empty lines around comments",
        "url": "https://eslint.style/rules/lines-around-comment"
      },
      "fixable": "whitespace",
      "name": "stylistic/lines-around-comment",
      "plugin": "stylistic"
    },
    "stylistic/lines-between-class-members": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow an empty line between class members",
        "url": "https://eslint.style/rules/lines-between-class-members"
      },
      "fixable": "whitespace",
      "name": "stylistic/lines-between-class-members",
      "plugin": "stylistic"
    },
    "stylistic/max-len": {
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum line length",
        "url": "https://eslint.style/rules/max-len"
      },
      "name": "stylistic/max-len",
      "plugin": "stylistic"
    },
    "stylistic/max-statements-per-line": {
      "type": "layout",
      "docs": {
        "description": "Enforce a maximum number of statements allowed per line",
        "url": "https://eslint.style/rules/max-statements-per-line"
      },
      "name": "stylistic/max-statements-per-line",
      "plugin": "stylistic"
    },
    "stylistic/member-delimiter-style": {
      "type": "layout",
      "docs": {
        "description": "Require a specific member delimiter style for interfaces and type literals",
        "url": "https://eslint.style/rules/member-delimiter-style"
      },
      "fixable": "whitespace",
      "name": "stylistic/member-delimiter-style",
      "plugin": "stylistic"
    },
    "stylistic/multiline-comment-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a particular style for multiline comments",
        "url": "https://eslint.style/rules/multiline-comment-style"
      },
      "fixable": "whitespace",
      "name": "stylistic/multiline-comment-style",
      "plugin": "stylistic"
    },
    "stylistic/multiline-ternary": {
      "type": "layout",
      "docs": {
        "description": "Enforce newlines between operands of ternary expressions",
        "url": "https://eslint.style/rules/multiline-ternary"
      },
      "fixable": "whitespace",
      "name": "stylistic/multiline-ternary",
      "plugin": "stylistic"
    },
    "stylistic/new-parens": {
      "type": "layout",
      "docs": {
        "description": "Enforce or disallow parentheses when invoking a constructor with no arguments",
        "url": "https://eslint.style/rules/new-parens"
      },
      "fixable": "code",
      "name": "stylistic/new-parens",
      "plugin": "stylistic"
    },
    "stylistic/newline-per-chained-call": {
      "type": "layout",
      "docs": {
        "description": "Require a newline after each call in a method chain",
        "url": "https://eslint.style/rules/newline-per-chained-call"
      },
      "fixable": "whitespace",
      "name": "stylistic/newline-per-chained-call",
      "plugin": "stylistic"
    },
    "stylistic/no-confusing-arrow": {
      "type": "layout",
      "docs": {
        "description": "Disallow arrow functions where they could be confused with comparisons",
        "url": "https://eslint.style/rules/no-confusing-arrow"
      },
      "fixable": "code",
      "name": "stylistic/no-confusing-arrow",
      "plugin": "stylistic"
    },
    "stylistic/no-extra-parens": {
      "type": "layout",
      "docs": {
        "description": "Disallow unnecessary parentheses",
        "url": "https://eslint.style/rules/no-extra-parens"
      },
      "fixable": "code",
      "name": "stylistic/no-extra-parens",
      "plugin": "stylistic"
    },
    "stylistic/no-extra-semi": {
      "type": "layout",
      "docs": {
        "description": "Disallow unnecessary semicolons",
        "url": "https://eslint.style/rules/no-extra-semi"
      },
      "fixable": "code",
      "name": "stylistic/no-extra-semi",
      "plugin": "stylistic"
    },
    "stylistic/no-floating-decimal": {
      "type": "layout",
      "docs": {
        "description": "Disallow leading or trailing decimal points in numeric literals",
        "url": "https://eslint.style/rules/no-floating-decimal"
      },
      "fixable": "code",
      "name": "stylistic/no-floating-decimal",
      "plugin": "stylistic"
    },
    "stylistic/no-mixed-operators": {
      "type": "layout",
      "docs": {
        "description": "Disallow mixed binary operators",
        "url": "https://eslint.style/rules/no-mixed-operators"
      },
      "name": "stylistic/no-mixed-operators",
      "plugin": "stylistic"
    },
    "stylistic/no-mixed-spaces-and-tabs": {
      "type": "layout",
      "docs": {
        "description": "Disallow mixed spaces and tabs for indentation",
        "url": "https://eslint.style/rules/no-mixed-spaces-and-tabs"
      },
      "name": "stylistic/no-mixed-spaces-and-tabs",
      "plugin": "stylistic"
    },
    "stylistic/no-multi-spaces": {
      "type": "layout",
      "docs": {
        "description": "Disallow multiple spaces",
        "url": "https://eslint.style/rules/no-multi-spaces"
      },
      "fixable": "whitespace",
      "name": "stylistic/no-multi-spaces",
      "plugin": "stylistic"
    },
    "stylistic/no-multiple-empty-lines": {
      "type": "layout",
      "docs": {
        "description": "Disallow multiple empty lines",
        "url": "https://eslint.style/rules/no-multiple-empty-lines"
      },
      "fixable": "whitespace",
      "name": "stylistic/no-multiple-empty-lines",
      "plugin": "stylistic"
    },
    "stylistic/no-tabs": {
      "type": "layout",
      "docs": {
        "description": "Disallow all tabs",
        "url": "https://eslint.style/rules/no-tabs"
      },
      "name": "stylistic/no-tabs",
      "plugin": "stylistic"
    },
    "stylistic/no-trailing-spaces": {
      "type": "layout",
      "docs": {
        "description": "Disallow trailing whitespace at the end of lines",
        "url": "https://eslint.style/rules/no-trailing-spaces"
      },
      "fixable": "whitespace",
      "name": "stylistic/no-trailing-spaces",
      "plugin": "stylistic"
    },
    "stylistic/no-whitespace-before-property": {
      "type": "layout",
      "docs": {
        "description": "Disallow whitespace before properties",
        "url": "https://eslint.style/rules/no-whitespace-before-property"
      },
      "fixable": "whitespace",
      "name": "stylistic/no-whitespace-before-property",
      "plugin": "stylistic"
    },
    "stylistic/nonblock-statement-body-position": {
      "type": "layout",
      "docs": {
        "description": "Enforce the location of single-line statements",
        "url": "https://eslint.style/rules/nonblock-statement-body-position"
      },
      "fixable": "whitespace",
      "name": "stylistic/nonblock-statement-body-position",
      "plugin": "stylistic"
    },
    "stylistic/object-curly-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent line breaks after opening and before closing braces",
        "url": "https://eslint.style/rules/object-curly-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/object-curly-newline",
      "plugin": "stylistic"
    },
    "stylistic/object-curly-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside braces",
        "url": "https://eslint.style/rules/object-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/object-curly-spacing",
      "plugin": "stylistic"
    },
    "stylistic/object-property-newline": {
      "type": "layout",
      "docs": {
        "description": "Enforce placing object properties on separate lines",
        "url": "https://eslint.style/rules/object-property-newline"
      },
      "fixable": "whitespace",
      "name": "stylistic/object-property-newline",
      "plugin": "stylistic"
    },
    "stylistic/one-var-declaration-per-line": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow newlines around variable declarations",
        "url": "https://eslint.style/rules/one-var-declaration-per-line"
      },
      "fixable": "whitespace",
      "name": "stylistic/one-var-declaration-per-line",
      "plugin": "stylistic"
    },
    "stylistic/operator-linebreak": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent linebreak style for operators",
        "url": "https://eslint.style/rules/operator-linebreak"
      },
      "fixable": "code",
      "name": "stylistic/operator-linebreak",
      "plugin": "stylistic"
    },
    "stylistic/padded-blocks": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding within blocks",
        "url": "https://eslint.style/rules/padded-blocks"
      },
      "fixable": "whitespace",
      "name": "stylistic/padded-blocks",
      "plugin": "stylistic"
    },
    "stylistic/padding-line-between-statements": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow padding lines between statements",
        "url": "https://eslint.style/rules/padding-line-between-statements"
      },
      "fixable": "whitespace",
      "hasSuggestions": false,
      "name": "stylistic/padding-line-between-statements",
      "plugin": "stylistic"
    },
    "stylistic/quote-props": {
      "type": "layout",
      "docs": {
        "description": "Require quotes around object literal, type literal, interfaces and enums property names",
        "url": "https://eslint.style/rules/quote-props"
      },
      "fixable": "code",
      "name": "stylistic/quote-props",
      "plugin": "stylistic"
    },
    "stylistic/quotes": {
      "type": "layout",
      "docs": {
        "description": "Enforce the consistent use of either backticks, double, or single quotes",
        "url": "https://eslint.style/rules/quotes"
      },
      "fixable": "code",
      "name": "stylistic/quotes",
      "plugin": "stylistic"
    },
    "stylistic/rest-spread-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce spacing between rest and spread operators and their expressions",
        "url": "https://eslint.style/rules/rest-spread-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/rest-spread-spacing",
      "plugin": "stylistic"
    },
    "stylistic/semi": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow semicolons instead of ASI",
        "url": "https://eslint.style/rules/semi"
      },
      "fixable": "code",
      "name": "stylistic/semi",
      "plugin": "stylistic"
    },
    "stylistic/semi-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before and after semicolons",
        "url": "https://eslint.style/rules/semi-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/semi-spacing",
      "plugin": "stylistic"
    },
    "stylistic/semi-style": {
      "type": "layout",
      "docs": {
        "description": "Enforce location of semicolons",
        "url": "https://eslint.style/rules/semi-style"
      },
      "fixable": "whitespace",
      "name": "stylistic/semi-style",
      "plugin": "stylistic"
    },
    "stylistic/space-before-blocks": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before blocks",
        "url": "https://eslint.style/rules/space-before-blocks"
      },
      "fixable": "whitespace",
      "name": "stylistic/space-before-blocks",
      "plugin": "stylistic"
    },
    "stylistic/space-before-function-paren": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before function parenthesis",
        "url": "https://eslint.style/rules/space-before-function-paren"
      },
      "fixable": "whitespace",
      "name": "stylistic/space-before-function-paren",
      "plugin": "stylistic"
    },
    "stylistic/space-in-parens": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing inside parentheses",
        "url": "https://eslint.style/rules/space-in-parens"
      },
      "fixable": "whitespace",
      "name": "stylistic/space-in-parens",
      "plugin": "stylistic"
    },
    "stylistic/space-infix-ops": {
      "type": "layout",
      "docs": {
        "description": "Require spacing around infix operators",
        "url": "https://eslint.style/rules/space-infix-ops"
      },
      "fixable": "whitespace",
      "name": "stylistic/space-infix-ops",
      "plugin": "stylistic"
    },
    "stylistic/space-unary-ops": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing before or after unary operators",
        "url": "https://eslint.style/rules/space-unary-ops"
      },
      "fixable": "whitespace",
      "name": "stylistic/space-unary-ops",
      "plugin": "stylistic"
    },
    "stylistic/spaced-comment": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent spacing after the `//` or `/*` in a comment",
        "url": "https://eslint.style/rules/spaced-comment"
      },
      "fixable": "whitespace",
      "name": "stylistic/spaced-comment",
      "plugin": "stylistic"
    },
    "stylistic/switch-colon-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforce spacing around colons of switch statements",
        "url": "https://eslint.style/rules/switch-colon-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/switch-colon-spacing",
      "plugin": "stylistic"
    },
    "stylistic/template-curly-spacing": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around embedded expressions of template strings",
        "url": "https://eslint.style/rules/template-curly-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/template-curly-spacing",
      "plugin": "stylistic"
    },
    "stylistic/template-tag-spacing": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing between template tags and their literals",
        "url": "https://eslint.style/rules/template-tag-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/template-tag-spacing",
      "plugin": "stylistic"
    },
    "stylistic/type-annotation-spacing": {
      "type": "layout",
      "docs": {
        "description": "Require consistent spacing around type annotations",
        "url": "https://eslint.style/rules/type-annotation-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/type-annotation-spacing",
      "plugin": "stylistic"
    },
    "stylistic/type-generic-spacing": {
      "type": "layout",
      "docs": {
        "description": "Enforces consistent spacing inside TypeScript type generics",
        "url": "https://eslint.style/rules/type-generic-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/type-generic-spacing",
      "plugin": "stylistic"
    },
    "stylistic/type-named-tuple-spacing": {
      "type": "layout",
      "docs": {
        "description": "Expect space before the type declaration in the named tuple",
        "url": "https://eslint.style/rules/type-named-tuple-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/type-named-tuple-spacing",
      "plugin": "stylistic"
    },
    "stylistic/wrap-iife": {
      "type": "layout",
      "docs": {
        "description": "Require parentheses around immediate `function` invocations",
        "url": "https://eslint.style/rules/wrap-iife"
      },
      "fixable": "code",
      "name": "stylistic/wrap-iife",
      "plugin": "stylistic"
    },
    "stylistic/wrap-regex": {
      "type": "layout",
      "docs": {
        "description": "Require parenthesis around regex literals",
        "url": "https://eslint.style/rules/wrap-regex"
      },
      "fixable": "code",
      "name": "stylistic/wrap-regex",
      "plugin": "stylistic"
    },
    "stylistic/yield-star-spacing": {
      "type": "layout",
      "docs": {
        "description": "Require or disallow spacing around the `*` in `yield*` expressions",
        "url": "https://eslint.style/rules/yield-star-spacing"
      },
      "fixable": "whitespace",
      "name": "stylistic/yield-star-spacing",
      "plugin": "stylistic"
    },
    "toml/array-bracket-newline": {
      "docs": {
        "description": "enforce linebreaks after opening and before closing array brackets",
        "categories": [
          "standard"
        ],
        "extensionRule": "array-bracket-newline",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/array-bracket-newline.html",
        "ruleId": "toml/array-bracket-newline",
        "ruleName": "array-bracket-newline"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "toml/array-bracket-newline",
      "plugin": "toml"
    },
    "toml/array-bracket-spacing": {
      "docs": {
        "description": "enforce consistent spacing inside array brackets",
        "categories": [
          "standard"
        ],
        "extensionRule": "array-bracket-spacing",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/array-bracket-spacing.html",
        "ruleId": "toml/array-bracket-spacing",
        "ruleName": "array-bracket-spacing"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "toml/array-bracket-spacing",
      "plugin": "toml"
    },
    "toml/array-element-newline": {
      "docs": {
        "description": "enforce line breaks between array elements",
        "categories": [
          "standard"
        ],
        "extensionRule": "array-element-newline",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/array-element-newline.html",
        "ruleId": "toml/array-element-newline",
        "ruleName": "array-element-newline"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "toml/array-element-newline",
      "plugin": "toml"
    },
    "toml/comma-style": {
      "docs": {
        "description": "enforce consistent comma style in array",
        "categories": [
          "standard"
        ],
        "extensionRule": "comma-style",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/comma-style.html",
        "ruleId": "toml/comma-style",
        "ruleName": "comma-style"
      },
      "type": "layout",
      "fixable": "code",
      "name": "toml/comma-style",
      "plugin": "toml"
    },
    "toml/indent": {
      "docs": {
        "description": "enforce consistent indentation",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/indent.html",
        "ruleId": "toml/indent",
        "ruleName": "indent"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "toml/indent",
      "plugin": "toml"
    },
    "toml/inline-table-curly-spacing": {
      "docs": {
        "description": "enforce consistent spacing inside braces",
        "categories": [
          "standard"
        ],
        "extensionRule": "object-curly-spacing",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/inline-table-curly-spacing.html",
        "ruleId": "toml/inline-table-curly-spacing",
        "ruleName": "inline-table-curly-spacing"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "toml/inline-table-curly-spacing",
      "plugin": "toml"
    },
    "toml/key-spacing": {
      "docs": {
        "description": "enforce consistent spacing between keys and values in key/value pairs",
        "categories": [
          "standard"
        ],
        "extensionRule": "key-spacing",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/key-spacing.html",
        "ruleId": "toml/key-spacing",
        "ruleName": "key-spacing"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "toml/key-spacing",
      "plugin": "toml"
    },
    "toml/keys-order": {
      "docs": {
        "description": "disallow defining pair keys out-of-order",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/keys-order.html",
        "ruleId": "toml/keys-order",
        "ruleName": "keys-order"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "toml/keys-order",
      "plugin": "toml"
    },
    "toml/no-mixed-type-in-array": {
      "docs": {
        "description": "disallow mixed data types in array",
        "categories": null,
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/no-mixed-type-in-array.html",
        "ruleId": "toml/no-mixed-type-in-array",
        "ruleName": "no-mixed-type-in-array"
      },
      "type": "suggestion",
      "name": "toml/no-mixed-type-in-array",
      "plugin": "toml"
    },
    "toml/no-non-decimal-integer": {
      "docs": {
        "description": "disallow hexadecimal, octal and binary integer",
        "categories": null,
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/no-non-decimal-integer.html",
        "ruleId": "toml/no-non-decimal-integer",
        "ruleName": "no-non-decimal-integer"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "toml/no-non-decimal-integer",
      "plugin": "toml"
    },
    "toml/no-space-dots": {
      "docs": {
        "description": "disallow spacing around infix operators",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/no-space-dots.html",
        "ruleId": "toml/no-space-dots",
        "ruleName": "no-space-dots"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "toml/no-space-dots",
      "plugin": "toml"
    },
    "toml/no-unreadable-number-separator": {
      "docs": {
        "description": "disallow number separators that to not enhance readability.",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/no-unreadable-number-separator.html",
        "ruleId": "toml/no-unreadable-number-separator",
        "ruleName": "no-unreadable-number-separator"
      },
      "type": "suggestion",
      "name": "toml/no-unreadable-number-separator",
      "plugin": "toml"
    },
    "toml/padding-line-between-pairs": {
      "docs": {
        "description": "require or disallow padding lines between pairs",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/padding-line-between-pairs.html",
        "ruleId": "toml/padding-line-between-pairs",
        "ruleName": "padding-line-between-pairs"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "toml/padding-line-between-pairs",
      "plugin": "toml"
    },
    "toml/padding-line-between-tables": {
      "docs": {
        "description": "require or disallow padding lines between tables",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/padding-line-between-tables.html",
        "ruleId": "toml/padding-line-between-tables",
        "ruleName": "padding-line-between-tables"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "toml/padding-line-between-tables",
      "plugin": "toml"
    },
    "toml/precision-of-fractional-seconds": {
      "docs": {
        "description": "disallow precision of fractional seconds greater than the specified value.",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/precision-of-fractional-seconds.html",
        "ruleId": "toml/precision-of-fractional-seconds",
        "ruleName": "precision-of-fractional-seconds"
      },
      "type": "problem",
      "name": "toml/precision-of-fractional-seconds",
      "plugin": "toml"
    },
    "toml/precision-of-integer": {
      "docs": {
        "description": "disallow precision of integer greater than the specified value.",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/precision-of-integer.html",
        "ruleId": "toml/precision-of-integer",
        "ruleName": "precision-of-integer"
      },
      "type": "problem",
      "name": "toml/precision-of-integer",
      "plugin": "toml"
    },
    "toml/quoted-keys": {
      "docs": {
        "description": "require or disallow quotes around keys",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/quoted-keys.html",
        "ruleId": "toml/quoted-keys",
        "ruleName": "quoted-keys"
      },
      "fixable": "code",
      "type": "layout",
      "name": "toml/quoted-keys",
      "plugin": "toml"
    },
    "toml/space-eq-sign": {
      "docs": {
        "description": "require spacing around equals sign",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/space-eq-sign.html",
        "ruleId": "toml/space-eq-sign",
        "ruleName": "space-eq-sign"
      },
      "deprecated": true,
      "replacedBy": [
        "key-spacing"
      ],
      "fixable": "whitespace",
      "type": "layout",
      "name": "toml/space-eq-sign",
      "plugin": "toml"
    },
    "toml/spaced-comment": {
      "docs": {
        "description": "enforce consistent spacing after the `#` in a comment",
        "categories": [
          "standard"
        ],
        "extensionRule": "spaced-comment",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/spaced-comment.html",
        "ruleId": "toml/spaced-comment",
        "ruleName": "spaced-comment"
      },
      "fixable": "whitespace",
      "type": "suggestion",
      "name": "toml/spaced-comment",
      "plugin": "toml"
    },
    "toml/table-bracket-spacing": {
      "docs": {
        "description": "enforce consistent spacing inside table brackets",
        "categories": [
          "standard"
        ],
        "extensionRule": "array-bracket-spacing",
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/table-bracket-spacing.html",
        "ruleId": "toml/table-bracket-spacing",
        "ruleName": "table-bracket-spacing"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "toml/table-bracket-spacing",
      "plugin": "toml"
    },
    "toml/tables-order": {
      "docs": {
        "description": "disallow defining tables out-of-order",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/tables-order.html",
        "ruleId": "toml/tables-order",
        "ruleName": "tables-order"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "toml/tables-order",
      "plugin": "toml"
    },
    "toml/vue-custom-block/no-parsing-error": {
      "docs": {
        "description": "disallow parsing errors in Vue custom blocks",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-toml/rules/vue-custom-block/no-parsing-error.html",
        "ruleId": "toml/vue-custom-block/no-parsing-error",
        "ruleName": "vue-custom-block/no-parsing-error"
      },
      "type": "problem",
      "name": "toml/vue-custom-block/no-parsing-error",
      "plugin": "toml"
    },
    "typescript/adjacent-overload-signatures": {
      "type": "suggestion",
      "docs": {
        "description": "Require that function overload signatures be consecutive",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/adjacent-overload-signatures"
      },
      "name": "typescript/adjacent-overload-signatures",
      "plugin": "typescript"
    },
    "typescript/array-type": {
      "type": "suggestion",
      "docs": {
        "description": "Require consistently using either `T[]` or `Array<T>` for arrays",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/array-type"
      },
      "fixable": "code",
      "name": "typescript/array-type",
      "plugin": "typescript"
    },
    "typescript/await-thenable": {
      "type": "problem",
      "docs": {
        "description": "Disallow awaiting a value that is not a Thenable",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/await-thenable"
      },
      "hasSuggestions": true,
      "name": "typescript/await-thenable",
      "plugin": "typescript"
    },
    "typescript/ban-ts-comment": {
      "type": "problem",
      "docs": {
        "description": "Disallow `@ts-<directive>` comments or require descriptions after directives",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "minimumDescriptionLength": 10
            }
          ]
        },
        "url": "https://typescript-eslint.io/rules/ban-ts-comment"
      },
      "hasSuggestions": true,
      "name": "typescript/ban-ts-comment",
      "plugin": "typescript"
    },
    "typescript/ban-tslint-comment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `// tslint:<rule-flag>` comments",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/ban-tslint-comment"
      },
      "fixable": "code",
      "name": "typescript/ban-tslint-comment",
      "plugin": "typescript"
    },
    "typescript/class-literal-property-style": {
      "type": "problem",
      "docs": {
        "description": "Enforce that literals on classes are exposed in a consistent style",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/class-literal-property-style"
      },
      "hasSuggestions": true,
      "name": "typescript/class-literal-property-style",
      "plugin": "typescript"
    },
    "typescript/class-methods-use-this": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce that class methods utilize `this`",
        "extendsBaseRule": true,
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/class-methods-use-this"
      },
      "name": "typescript/class-methods-use-this",
      "plugin": "typescript"
    },
    "typescript/consistent-generic-constructors": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce specifying generic type arguments on type annotation or constructor name of a constructor call",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-generic-constructors"
      },
      "fixable": "code",
      "name": "typescript/consistent-generic-constructors",
      "plugin": "typescript"
    },
    "typescript/consistent-indexed-object-style": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow the `Record` type",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-indexed-object-style"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/consistent-indexed-object-style",
      "plugin": "typescript"
    },
    "typescript/consistent-return": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "treatUndefinedAsUnspecified": false
        }
      ],
      "docs": {
        "description": "Require `return` statements to either always or never specify values",
        "extendsBaseRule": true,
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/consistent-return"
      },
      "name": "typescript/consistent-return",
      "plugin": "typescript"
    },
    "typescript/consistent-type-assertions": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type assertions",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-type-assertions"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/consistent-type-assertions",
      "plugin": "typescript"
    },
    "typescript/consistent-type-definitions": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce type definitions to consistently use either `interface` or `type`",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/consistent-type-definitions"
      },
      "fixable": "code",
      "name": "typescript/consistent-type-definitions",
      "plugin": "typescript"
    },
    "typescript/consistent-type-exports": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type exports",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/consistent-type-exports"
      },
      "fixable": "code",
      "name": "typescript/consistent-type-exports",
      "plugin": "typescript"
    },
    "typescript/consistent-type-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent usage of type imports",
        "url": "https://typescript-eslint.io/rules/consistent-type-imports"
      },
      "fixable": "code",
      "name": "typescript/consistent-type-imports",
      "plugin": "typescript"
    },
    "typescript/default-param-last": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce default parameters to be last",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/default-param-last"
      },
      "name": "typescript/default-param-last",
      "plugin": "typescript"
    },
    "typescript/dot-notation": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowIndexSignaturePropertyAccess": false,
          "allowKeywords": true,
          "allowPattern": "",
          "allowPrivateClassPropertyAccess": false,
          "allowProtectedClassPropertyAccess": false
        }
      ],
      "docs": {
        "description": "Enforce dot notation whenever possible",
        "extendsBaseRule": true,
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/dot-notation"
      },
      "fixable": "code",
      "name": "typescript/dot-notation",
      "plugin": "typescript"
    },
    "typescript/explicit-function-return-type": {
      "type": "problem",
      "docs": {
        "description": "Require explicit return types on functions and class methods",
        "url": "https://typescript-eslint.io/rules/explicit-function-return-type"
      },
      "name": "typescript/explicit-function-return-type",
      "plugin": "typescript"
    },
    "typescript/explicit-member-accessibility": {
      "type": "problem",
      "docs": {
        "description": "Require explicit accessibility modifiers on class properties and methods",
        "url": "https://typescript-eslint.io/rules/explicit-member-accessibility"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/explicit-member-accessibility",
      "plugin": "typescript"
    },
    "typescript/explicit-module-boundary-types": {
      "type": "problem",
      "docs": {
        "description": "Require explicit return and argument types on exported functions' and classes' public class methods",
        "url": "https://typescript-eslint.io/rules/explicit-module-boundary-types"
      },
      "name": "typescript/explicit-module-boundary-types",
      "plugin": "typescript"
    },
    "typescript/init-declarations": {
      "type": "suggestion",
      "docs": {
        "description": "Require or disallow initialization in variable declarations",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/init-declarations"
      },
      "name": "typescript/init-declarations",
      "plugin": "typescript"
    },
    "typescript/max-params": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a maximum number of parameters in function definitions",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/max-params"
      },
      "name": "typescript/max-params",
      "plugin": "typescript"
    },
    "typescript/member-ordering": {
      "type": "suggestion",
      "docs": {
        "description": "Require a consistent member declaration order",
        "url": "https://typescript-eslint.io/rules/member-ordering"
      },
      "name": "typescript/member-ordering",
      "plugin": "typescript"
    },
    "typescript/method-signature-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using a particular method signature syntax",
        "url": "https://typescript-eslint.io/rules/method-signature-style"
      },
      "fixable": "code",
      "name": "typescript/method-signature-style",
      "plugin": "typescript"
    },
    "typescript/naming-convention": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce naming conventions for everything across a codebase",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/naming-convention"
      },
      "name": "typescript/naming-convention",
      "plugin": "typescript"
    },
    "typescript/no-array-constructor": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow generic `Array` constructors",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-array-constructor"
      },
      "fixable": "code",
      "name": "typescript/no-array-constructor",
      "plugin": "typescript"
    },
    "typescript/no-array-delete": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the `delete` operator on array values",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-array-delete"
      },
      "hasSuggestions": true,
      "name": "typescript/no-array-delete",
      "plugin": "typescript"
    },
    "typescript/no-base-to-string": {
      "type": "suggestion",
      "docs": {
        "description": "Require `.toString()` and `.toLocaleString()` to only be called on objects which provide useful information when stringified",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-base-to-string"
      },
      "name": "typescript/no-base-to-string",
      "plugin": "typescript"
    },
    "typescript/no-confusing-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertion in locations that may be confusing",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-confusing-non-null-assertion"
      },
      "hasSuggestions": true,
      "name": "typescript/no-confusing-non-null-assertion",
      "plugin": "typescript"
    },
    "typescript/no-confusing-void-expression": {
      "type": "problem",
      "docs": {
        "description": "Require expressions of type void to appear in statement position",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-confusing-void-expression"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/no-confusing-void-expression",
      "plugin": "typescript"
    },
    "typescript/no-deprecated": {
      "type": "problem",
      "docs": {
        "description": "Disallow using code marked as `@deprecated`",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-deprecated"
      },
      "name": "typescript/no-deprecated",
      "plugin": "typescript"
    },
    "typescript/no-dupe-class-members": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate class members",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-dupe-class-members"
      },
      "name": "typescript/no-dupe-class-members",
      "plugin": "typescript"
    },
    "typescript/no-duplicate-enum-values": {
      "type": "problem",
      "docs": {
        "description": "Disallow duplicate enum member values",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-duplicate-enum-values"
      },
      "hasSuggestions": false,
      "name": "typescript/no-duplicate-enum-values",
      "plugin": "typescript"
    },
    "typescript/no-duplicate-type-constituents": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow duplicate constituents of union or intersection types",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-duplicate-type-constituents"
      },
      "fixable": "code",
      "name": "typescript/no-duplicate-type-constituents",
      "plugin": "typescript"
    },
    "typescript/no-dynamic-delete": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using the `delete` operator on computed key expressions",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-dynamic-delete"
      },
      "fixable": "code",
      "name": "typescript/no-dynamic-delete",
      "plugin": "typescript"
    },
    "typescript/no-empty-function": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allow": []
        }
      ],
      "docs": {
        "description": "Disallow empty functions",
        "extendsBaseRule": true,
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-empty-function"
      },
      "name": "typescript/no-empty-function",
      "plugin": "typescript"
    },
    "typescript/no-empty-interface": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "8.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/no-empty-object-type",
              "url": "https://typescript-eslint.io/rules/no-empty-object-type"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8977"
      },
      "docs": {
        "description": "Disallow the declaration of empty interfaces",
        "url": "https://typescript-eslint.io/rules/no-empty-interface"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "replacedBy": [
        "@typescript-eslint/no-empty-object-type"
      ],
      "name": "typescript/no-empty-interface",
      "plugin": "typescript"
    },
    "typescript/no-empty-object-type": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow accidentally using the \"empty object\" type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-empty-object-type"
      },
      "hasSuggestions": true,
      "name": "typescript/no-empty-object-type",
      "plugin": "typescript"
    },
    "typescript/no-explicit-any": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the `any` type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-explicit-any"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/no-explicit-any",
      "plugin": "typescript"
    },
    "typescript/no-extra-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow extra non-null assertions",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-extra-non-null-assertion"
      },
      "fixable": "code",
      "name": "typescript/no-extra-non-null-assertion",
      "plugin": "typescript"
    },
    "typescript/no-extraneous-class": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow classes used as namespaces",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-extraneous-class"
      },
      "name": "typescript/no-extraneous-class",
      "plugin": "typescript"
    },
    "typescript/no-floating-promises": {
      "type": "problem",
      "docs": {
        "description": "Require Promise-like statements to be handled appropriately",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-floating-promises"
      },
      "hasSuggestions": true,
      "name": "typescript/no-floating-promises",
      "plugin": "typescript"
    },
    "typescript/no-for-in-array": {
      "type": "problem",
      "docs": {
        "description": "Disallow iterating over an array with a for-in loop",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-for-in-array"
      },
      "name": "typescript/no-for-in-array",
      "plugin": "typescript"
    },
    "typescript/no-implied-eval": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of `eval()`-like functions",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-implied-eval"
      },
      "name": "typescript/no-implied-eval",
      "plugin": "typescript"
    },
    "typescript/no-import-type-side-effects": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers",
        "url": "https://typescript-eslint.io/rules/no-import-type-side-effects"
      },
      "fixable": "code",
      "name": "typescript/no-import-type-side-effects",
      "plugin": "typescript"
    },
    "typescript/no-inferrable-types": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/no-inferrable-types"
      },
      "fixable": "code",
      "name": "typescript/no-inferrable-types",
      "plugin": "typescript"
    },
    "typescript/no-invalid-this": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "capIsConstructor": true
        }
      ],
      "docs": {
        "description": "Disallow `this` keywords outside of classes or class-like objects",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-invalid-this"
      },
      "name": "typescript/no-invalid-this",
      "plugin": "typescript"
    },
    "typescript/no-invalid-void-type": {
      "type": "problem",
      "docs": {
        "description": "Disallow `void` type outside of generic or return types",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-invalid-void-type"
      },
      "name": "typescript/no-invalid-void-type",
      "plugin": "typescript"
    },
    "typescript/no-loop-func": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow function declarations that contain unsafe references inside loop statements",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-loop-func"
      },
      "name": "typescript/no-loop-func",
      "plugin": "typescript"
    },
    "typescript/no-loss-of-precision": {
      "type": "problem",
      "deprecated": {
        "deprecatedSince": "8.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "no-loss-of-precision",
              "url": "https://eslint.org/docs/latest/rules/no-loss-of-precision"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8832"
      },
      "docs": {
        "description": "Disallow literal numbers that lose precision",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-loss-of-precision"
      },
      "name": "typescript/no-loss-of-precision",
      "plugin": "typescript"
    },
    "typescript/no-magic-numbers": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow magic numbers",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-magic-numbers"
      },
      "name": "typescript/no-magic-numbers",
      "plugin": "typescript"
    },
    "typescript/no-meaningless-void-operator": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the `void` operator except when used to discard a value",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-meaningless-void-operator"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/no-meaningless-void-operator",
      "plugin": "typescript"
    },
    "typescript/no-misused-new": {
      "type": "problem",
      "docs": {
        "description": "Enforce valid definition of `new` and `constructor`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-misused-new"
      },
      "name": "typescript/no-misused-new",
      "plugin": "typescript"
    },
    "typescript/no-misused-promises": {
      "type": "problem",
      "docs": {
        "description": "Disallow Promises in places not designed to handle them",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-misused-promises"
      },
      "name": "typescript/no-misused-promises",
      "plugin": "typescript"
    },
    "typescript/no-misused-spread": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the spread operator when it might cause unexpected behavior",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-misused-spread"
      },
      "hasSuggestions": true,
      "name": "typescript/no-misused-spread",
      "plugin": "typescript"
    },
    "typescript/no-mixed-enums": {
      "type": "problem",
      "docs": {
        "description": "Disallow enums from having both number and string members",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-mixed-enums"
      },
      "name": "typescript/no-mixed-enums",
      "plugin": "typescript"
    },
    "typescript/no-namespace": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow TypeScript namespaces",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-namespace"
      },
      "name": "typescript/no-namespace",
      "plugin": "typescript"
    },
    "typescript/no-non-null-asserted-nullish-coalescing": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions in the left operand of a nullish coalescing operator",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing"
      },
      "hasSuggestions": true,
      "name": "typescript/no-non-null-asserted-nullish-coalescing",
      "plugin": "typescript"
    },
    "typescript/no-non-null-asserted-optional-chain": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions after an optional chain expression",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain"
      },
      "hasSuggestions": true,
      "name": "typescript/no-non-null-asserted-optional-chain",
      "plugin": "typescript"
    },
    "typescript/no-non-null-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow non-null assertions using the `!` postfix operator",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-non-null-assertion"
      },
      "hasSuggestions": true,
      "name": "typescript/no-non-null-assertion",
      "plugin": "typescript"
    },
    "typescript/no-redeclare": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow variable redeclaration",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-redeclare"
      },
      "name": "typescript/no-redeclare",
      "plugin": "typescript"
    },
    "typescript/no-redundant-type-constituents": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow members of unions and intersections that do nothing or override type information",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-redundant-type-constituents"
      },
      "name": "typescript/no-redundant-type-constituents",
      "plugin": "typescript"
    },
    "typescript/no-require-imports": {
      "type": "problem",
      "docs": {
        "description": "Disallow invocation of `require()`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-require-imports"
      },
      "name": "typescript/no-require-imports",
      "plugin": "typescript"
    },
    "typescript/no-restricted-imports": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow specified modules when loaded by `import`",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-restricted-imports"
      },
      "name": "typescript/no-restricted-imports",
      "plugin": "typescript"
    },
    "typescript/no-restricted-types": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain types",
        "url": "https://typescript-eslint.io/rules/no-restricted-types"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/no-restricted-types",
      "plugin": "typescript"
    },
    "typescript/no-shadow": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow variable declarations from shadowing variables declared in the outer scope",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-shadow"
      },
      "name": "typescript/no-shadow",
      "plugin": "typescript"
    },
    "typescript/no-this-alias": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow aliasing `this`",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-this-alias"
      },
      "name": "typescript/no-this-alias",
      "plugin": "typescript"
    },
    "typescript/no-type-alias": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "6.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/consistent-type-definitions",
              "url": "https://typescript-eslint.io/rules/consistent-type-definitions"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/6229"
      },
      "docs": {
        "description": "Disallow type aliases",
        "url": "https://typescript-eslint.io/rules/no-type-alias"
      },
      "name": "typescript/no-type-alias",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-boolean-literal-compare": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary equality comparisons against boolean literals",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare"
      },
      "fixable": "code",
      "name": "typescript/no-unnecessary-boolean-literal-compare",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow conditionals where the type is always truthy or always falsy",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-condition"
      },
      "hasSuggestions": true,
      "name": "typescript/no-unnecessary-condition",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-parameter-property-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary assignment of constructor property parameter",
        "url": "https://typescript-eslint.io/rules/no-unnecessary-parameter-property-assignment"
      },
      "name": "typescript/no-unnecessary-parameter-property-assignment",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-qualifier": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary namespace qualifiers",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-qualifier"
      },
      "fixable": "code",
      "name": "typescript/no-unnecessary-qualifier",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-template-expression": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary template expressions",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-template-expression"
      },
      "fixable": "code",
      "name": "typescript/no-unnecessary-template-expression",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-type-arguments": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow type arguments that are equal to the default",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-arguments"
      },
      "fixable": "code",
      "name": "typescript/no-unnecessary-type-arguments",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-type-assertion": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow type assertions that do not change the type of an expression",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-assertion"
      },
      "fixable": "code",
      "name": "typescript/no-unnecessary-type-assertion",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-type-constraint": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary constraints on generic types",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-constraint"
      },
      "hasSuggestions": true,
      "name": "typescript/no-unnecessary-type-constraint",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-type-conversion": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow conversion idioms when they do not change the type or value of the expression",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-conversion"
      },
      "hasSuggestions": true,
      "name": "typescript/no-unnecessary-type-conversion",
      "plugin": "typescript"
    },
    "typescript/no-unnecessary-type-parameters": {
      "type": "problem",
      "docs": {
        "description": "Disallow type parameters that aren't used multiple times",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unnecessary-type-parameters"
      },
      "hasSuggestions": true,
      "name": "typescript/no-unnecessary-type-parameters",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-argument": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling a function with a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-argument"
      },
      "name": "typescript/no-unsafe-argument",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-assignment": {
      "type": "problem",
      "docs": {
        "description": "Disallow assigning a value with type `any` to variables and properties",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-assignment"
      },
      "name": "typescript/no-unsafe-assignment",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-call": {
      "type": "problem",
      "docs": {
        "description": "Disallow calling a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-call"
      },
      "name": "typescript/no-unsafe-call",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-declaration-merging": {
      "type": "problem",
      "docs": {
        "description": "Disallow unsafe declaration merging",
        "recommended": "recommended",
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/no-unsafe-declaration-merging"
      },
      "name": "typescript/no-unsafe-declaration-merging",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-enum-comparison": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comparing an enum value with a non-enum value",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-enum-comparison"
      },
      "hasSuggestions": true,
      "name": "typescript/no-unsafe-enum-comparison",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-function-type": {
      "type": "problem",
      "docs": {
        "description": "Disallow using the unsafe built-in Function type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unsafe-function-type"
      },
      "name": "typescript/no-unsafe-function-type",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-member-access": {
      "type": "problem",
      "docs": {
        "description": "Disallow member access on a value with type `any`",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-member-access"
      },
      "name": "typescript/no-unsafe-member-access",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-return": {
      "type": "problem",
      "docs": {
        "description": "Disallow returning a value with type `any` from a function",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-return"
      },
      "name": "typescript/no-unsafe-return",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-type-assertion": {
      "type": "problem",
      "docs": {
        "description": "Disallow type assertions that narrow a type",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-type-assertion"
      },
      "name": "typescript/no-unsafe-type-assertion",
      "plugin": "typescript"
    },
    "typescript/no-unsafe-unary-minus": {
      "type": "problem",
      "docs": {
        "description": "Require unary negation to take a number",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/no-unsafe-unary-minus"
      },
      "name": "typescript/no-unsafe-unary-minus",
      "plugin": "typescript"
    },
    "typescript/no-unused-expressions": {
      "type": "suggestion",
      "defaultOptions": [
        {
          "allowShortCircuit": false,
          "allowTaggedTemplates": false,
          "allowTernary": false
        }
      ],
      "docs": {
        "description": "Disallow unused expressions",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unused-expressions"
      },
      "name": "typescript/no-unused-expressions",
      "plugin": "typescript"
    },
    "typescript/no-unused-vars": {
      "type": "problem",
      "docs": {
        "description": "Disallow unused variables",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-unused-vars"
      },
      "name": "typescript/no-unused-vars",
      "plugin": "typescript"
    },
    "typescript/no-use-before-define": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of variables before they are defined",
        "extendsBaseRule": true,
        "url": "https://typescript-eslint.io/rules/no-use-before-define"
      },
      "name": "typescript/no-use-before-define",
      "plugin": "typescript"
    },
    "typescript/no-useless-constructor": {
      "type": "problem",
      "docs": {
        "description": "Disallow unnecessary constructors",
        "extendsBaseRule": true,
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/no-useless-constructor"
      },
      "hasSuggestions": true,
      "name": "typescript/no-useless-constructor",
      "plugin": "typescript"
    },
    "typescript/no-useless-empty-export": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty exports that don't change anything in a module file",
        "url": "https://typescript-eslint.io/rules/no-useless-empty-export"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "name": "typescript/no-useless-empty-export",
      "plugin": "typescript"
    },
    "typescript/no-var-requires": {
      "type": "problem",
      "deprecated": {
        "deprecatedSince": "8.0.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/no-require-imports",
              "url": "https://typescript-eslint.io/rules/no-require-imports"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/8334"
      },
      "docs": {
        "description": "Disallow `require` statements except in import statements",
        "url": "https://typescript-eslint.io/rules/no-var-requires"
      },
      "replacedBy": [
        "@typescript-eslint/no-require-imports"
      ],
      "name": "typescript/no-var-requires",
      "plugin": "typescript"
    },
    "typescript/no-wrapper-object-types": {
      "type": "problem",
      "docs": {
        "description": "Disallow using confusing built-in primitive class wrappers",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/no-wrapper-object-types"
      },
      "fixable": "code",
      "name": "typescript/no-wrapper-object-types",
      "plugin": "typescript"
    },
    "typescript/non-nullable-type-assertion-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce non-null assertions over explicit type assertions",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/non-nullable-type-assertion-style"
      },
      "fixable": "code",
      "name": "typescript/non-nullable-type-assertion-style",
      "plugin": "typescript"
    },
    "typescript/only-throw-error": {
      "type": "problem",
      "docs": {
        "description": "Disallow throwing non-`Error` values as exceptions",
        "extendsBaseRule": "no-throw-literal",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/only-throw-error"
      },
      "name": "typescript/only-throw-error",
      "plugin": "typescript"
    },
    "typescript/parameter-properties": {
      "type": "problem",
      "docs": {
        "description": "Require or disallow parameter properties in class constructors",
        "url": "https://typescript-eslint.io/rules/parameter-properties"
      },
      "name": "typescript/parameter-properties",
      "plugin": "typescript"
    },
    "typescript/prefer-as-const": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `as const` over literal type",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/prefer-as-const"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/prefer-as-const",
      "plugin": "typescript"
    },
    "typescript/prefer-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Require destructuring from arrays and/or objects",
        "extendsBaseRule": true,
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-destructuring"
      },
      "fixable": "code",
      "name": "typescript/prefer-destructuring",
      "plugin": "typescript"
    },
    "typescript/prefer-enum-initializers": {
      "type": "suggestion",
      "docs": {
        "description": "Require each enum member value to be explicitly initialized",
        "url": "https://typescript-eslint.io/rules/prefer-enum-initializers"
      },
      "hasSuggestions": true,
      "name": "typescript/prefer-enum-initializers",
      "plugin": "typescript"
    },
    "typescript/prefer-find": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of Array.prototype.find() over Array.prototype.filter() followed by [0] when looking for a single result",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-find"
      },
      "hasSuggestions": true,
      "name": "typescript/prefer-find",
      "plugin": "typescript"
    },
    "typescript/prefer-for-of": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `for-of` loop over the standard `for` loop where possible",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/prefer-for-of"
      },
      "name": "typescript/prefer-for-of",
      "plugin": "typescript"
    },
    "typescript/prefer-function-type": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using function types instead of interfaces with call signatures",
        "recommended": "stylistic",
        "url": "https://typescript-eslint.io/rules/prefer-function-type"
      },
      "fixable": "code",
      "name": "typescript/prefer-function-type",
      "plugin": "typescript"
    },
    "typescript/prefer-includes": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `includes` method over `indexOf` method",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-includes"
      },
      "fixable": "code",
      "name": "typescript/prefer-includes",
      "plugin": "typescript"
    },
    "typescript/prefer-literal-enum-member": {
      "type": "suggestion",
      "docs": {
        "description": "Require all enum members to be literal values",
        "recommended": "strict",
        "requiresTypeChecking": false,
        "url": "https://typescript-eslint.io/rules/prefer-literal-enum-member"
      },
      "name": "typescript/prefer-literal-enum-member",
      "plugin": "typescript"
    },
    "typescript/prefer-namespace-keyword": {
      "type": "suggestion",
      "docs": {
        "description": "Require using `namespace` keyword over `module` keyword to declare custom TypeScript modules",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/prefer-namespace-keyword"
      },
      "fixable": "code",
      "name": "typescript/prefer-namespace-keyword",
      "plugin": "typescript"
    },
    "typescript/prefer-nullish-coalescing": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the nullish coalescing operator instead of logical assignments or chaining",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-nullish-coalescing"
      },
      "hasSuggestions": true,
      "name": "typescript/prefer-nullish-coalescing",
      "plugin": "typescript"
    },
    "typescript/prefer-optional-chain": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using concise optional chain expressions instead of chained logical ands, negated logical ors, or empty objects",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-optional-chain"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/prefer-optional-chain",
      "plugin": "typescript"
    },
    "typescript/prefer-promise-reject-errors": {
      "type": "suggestion",
      "docs": {
        "description": "Require using Error objects as Promise rejection reasons",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-promise-reject-errors"
      },
      "name": "typescript/prefer-promise-reject-errors",
      "plugin": "typescript"
    },
    "typescript/prefer-readonly": {
      "type": "suggestion",
      "docs": {
        "description": "Require private members to be marked as `readonly` if they're never modified outside of the constructor",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-readonly"
      },
      "fixable": "code",
      "name": "typescript/prefer-readonly",
      "plugin": "typescript"
    },
    "typescript/prefer-readonly-parameter-types": {
      "type": "suggestion",
      "docs": {
        "description": "Require function parameters to be typed as `readonly` to prevent accidental mutation of inputs",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-readonly-parameter-types"
      },
      "name": "typescript/prefer-readonly-parameter-types",
      "plugin": "typescript"
    },
    "typescript/prefer-reduce-type-parameter": {
      "type": "problem",
      "docs": {
        "description": "Enforce using type parameter when calling `Array#reduce` instead of using a type assertion",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-reduce-type-parameter"
      },
      "fixable": "code",
      "name": "typescript/prefer-reduce-type-parameter",
      "plugin": "typescript"
    },
    "typescript/prefer-regexp-exec": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce `RegExp#exec` over `String#match` if no global flag is provided",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-regexp-exec"
      },
      "fixable": "code",
      "name": "typescript/prefer-regexp-exec",
      "plugin": "typescript"
    },
    "typescript/prefer-return-this-type": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce that `this` is used when only `this` type is returned",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-return-this-type"
      },
      "fixable": "code",
      "name": "typescript/prefer-return-this-type",
      "plugin": "typescript"
    },
    "typescript/prefer-string-starts-ends-with": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using `String#startsWith` and `String#endsWith` over other equivalent methods of checking substrings",
        "recommended": "stylistic",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/prefer-string-starts-ends-with"
      },
      "fixable": "code",
      "name": "typescript/prefer-string-starts-ends-with",
      "plugin": "typescript"
    },
    "typescript/prefer-ts-expect-error": {
      "type": "problem",
      "deprecated": {
        "deprecatedSince": "7.11.0",
        "replacedBy": [
          {
            "rule": {
              "name": "@typescript-eslint/ban-ts-comment",
              "url": "https://typescript-eslint.io/rules/ban-ts-comment"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/9081"
      },
      "docs": {
        "description": "Enforce using `@ts-expect-error` over `@ts-ignore`",
        "url": "https://typescript-eslint.io/rules/prefer-ts-expect-error"
      },
      "fixable": "code",
      "replacedBy": [
        "@typescript-eslint/ban-ts-comment"
      ],
      "name": "typescript/prefer-ts-expect-error",
      "plugin": "typescript"
    },
    "typescript/promise-function-async": {
      "type": "suggestion",
      "docs": {
        "description": "Require any function or method that returns a Promise to be marked async",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/promise-function-async"
      },
      "fixable": "code",
      "name": "typescript/promise-function-async",
      "plugin": "typescript"
    },
    "typescript/related-getter-setter-pairs": {
      "type": "problem",
      "docs": {
        "description": "Enforce that `get()` types should be assignable to their equivalent `set()` type",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/related-getter-setter-pairs"
      },
      "name": "typescript/related-getter-setter-pairs",
      "plugin": "typescript"
    },
    "typescript/require-array-sort-compare": {
      "type": "problem",
      "docs": {
        "description": "Require `Array#sort` and `Array#toSorted` calls to always provide a `compareFunction`",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/require-array-sort-compare"
      },
      "name": "typescript/require-array-sort-compare",
      "plugin": "typescript"
    },
    "typescript/require-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow async functions which do not return promises and have no `await` expression",
        "extendsBaseRule": true,
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/require-await"
      },
      "hasSuggestions": true,
      "name": "typescript/require-await",
      "plugin": "typescript"
    },
    "typescript/restrict-plus-operands": {
      "type": "problem",
      "docs": {
        "description": "Require both operands of addition to be the same type and be `bigint`, `number`, or `string`",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "allowAny": false,
              "allowBoolean": false,
              "allowNullish": false,
              "allowNumberAndString": false,
              "allowRegExp": false
            }
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/restrict-plus-operands"
      },
      "name": "typescript/restrict-plus-operands",
      "plugin": "typescript"
    },
    "typescript/restrict-template-expressions": {
      "type": "problem",
      "docs": {
        "description": "Enforce template literal expressions to be of `string` type",
        "recommended": {
          "recommended": true,
          "strict": [
            {
              "allowAny": false,
              "allowBoolean": false,
              "allowNever": false,
              "allowNullish": false,
              "allowNumber": false,
              "allowRegExp": false
            }
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/restrict-template-expressions"
      },
      "name": "typescript/restrict-template-expressions",
      "plugin": "typescript"
    },
    "typescript/return-await": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent awaiting of returned promises",
        "recommended": {
          "strict": [
            "error-handling-correctness-only"
          ]
        },
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/return-await"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "typescript/return-await",
      "plugin": "typescript"
    },
    "typescript/sort-type-constituents": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "7.13.0",
        "replacedBy": [
          {
            "plugin": {
              "name": "eslint-plugin-perfectionist",
              "url": "https://perfectionist.dev"
            },
            "rule": {
              "name": "perfectionist/sort-intersection-types",
              "url": "https://perfectionist.dev/rules/sort-intersection-types"
            }
          },
          {
            "plugin": {
              "name": "eslint-plugin-perfectionist",
              "url": "https://perfectionist.dev"
            },
            "rule": {
              "name": "perfectionist/sort-union-types",
              "url": "https://perfectionist.dev/rules/sort-union-types"
            }
          }
        ],
        "url": "https://github.com/typescript-eslint/typescript-eslint/pull/9253"
      },
      "docs": {
        "description": "Enforce constituents of a type union/intersection to be sorted alphabetically",
        "url": "https://typescript-eslint.io/rules/sort-type-constituents"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "replacedBy": [
        "perfectionist/sort-intersection-types",
        "perfectionist/sort-union-types"
      ],
      "name": "typescript/sort-type-constituents",
      "plugin": "typescript"
    },
    "typescript/strict-boolean-expressions": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain types in boolean expressions",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/strict-boolean-expressions"
      },
      "hasSuggestions": true,
      "name": "typescript/strict-boolean-expressions",
      "plugin": "typescript"
    },
    "typescript/switch-exhaustiveness-check": {
      "type": "suggestion",
      "docs": {
        "description": "Require switch-case statements to be exhaustive",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/switch-exhaustiveness-check"
      },
      "hasSuggestions": true,
      "name": "typescript/switch-exhaustiveness-check",
      "plugin": "typescript"
    },
    "typescript/triple-slash-reference": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow certain triple slash directives in favor of ES6-style import declarations",
        "recommended": "recommended",
        "url": "https://typescript-eslint.io/rules/triple-slash-reference"
      },
      "name": "typescript/triple-slash-reference",
      "plugin": "typescript"
    },
    "typescript/typedef": {
      "type": "suggestion",
      "deprecated": {
        "deprecatedSince": "8.33.0",
        "message": "This is an old rule that is no longer recommended for use."
      },
      "docs": {
        "description": "Require type annotations in certain places",
        "url": "https://typescript-eslint.io/rules/typedef"
      },
      "name": "typescript/typedef",
      "plugin": "typescript"
    },
    "typescript/unbound-method": {
      "type": "problem",
      "docs": {
        "description": "Enforce unbound methods are called with their expected scope",
        "recommended": "recommended",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/unbound-method"
      },
      "name": "typescript/unbound-method",
      "plugin": "typescript"
    },
    "typescript/unified-signatures": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow two overloads that could be unified into one with a union or an optional/rest parameter",
        "recommended": "strict",
        "url": "https://typescript-eslint.io/rules/unified-signatures"
      },
      "name": "typescript/unified-signatures",
      "plugin": "typescript"
    },
    "typescript/use-unknown-in-catch-callback-variable": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce typing arguments in Promise rejection callbacks as `unknown`",
        "recommended": "strict",
        "requiresTypeChecking": true,
        "url": "https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable"
      },
      "hasSuggestions": true,
      "name": "typescript/use-unknown-in-catch-callback-variable",
      "plugin": "typescript"
    },
    "unicorn/better-regex": {
      "type": "suggestion",
      "docs": {
        "description": "Improve regexes by making them shorter, consistent, and safer.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/better-regex.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "sortCharacterClasses": true
        }
      ],
      "name": "unicorn/better-regex",
      "plugin": "unicorn"
    },
    "unicorn/catch-error-name": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a specific parameter name in catch clauses.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/catch-error-name.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/catch-error-name",
      "plugin": "unicorn"
    },
    "unicorn/consistent-assert": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent assertion style with `node:assert`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-assert.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-assert",
      "plugin": "unicorn"
    },
    "unicorn/consistent-date-clone": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer passing `Date` directly to the constructor when cloning.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-date-clone.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-date-clone",
      "plugin": "unicorn"
    },
    "unicorn/consistent-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Use destructured variables over properties.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-destructuring.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/consistent-destructuring",
      "plugin": "unicorn"
    },
    "unicorn/consistent-empty-array-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer consistent types when spreading a ternary in an array literal.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-empty-array-spread.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-empty-array-spread",
      "plugin": "unicorn"
    },
    "unicorn/consistent-existence-index-check": {
      "type": "problem",
      "docs": {
        "description": "Enforce consistent style for element existence checks with `indexOf()`, `lastIndexOf()`, `findIndex()`, and `findLastIndex()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-existence-index-check.md"
      },
      "fixable": "code",
      "name": "unicorn/consistent-existence-index-check",
      "plugin": "unicorn"
    },
    "unicorn/consistent-function-scoping": {
      "type": "suggestion",
      "docs": {
        "description": "Move function definitions to the highest possible scope.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/consistent-function-scoping.md"
      },
      "defaultOptions": [
        {
          "checkArrowFunctions": true
        }
      ],
      "name": "unicorn/consistent-function-scoping",
      "plugin": "unicorn"
    },
    "unicorn/custom-error-definition": {
      "type": "problem",
      "docs": {
        "description": "Enforce correct `Error` subclassing.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/custom-error-definition.md"
      },
      "fixable": "code",
      "name": "unicorn/custom-error-definition",
      "plugin": "unicorn"
    },
    "unicorn/empty-brace-spaces": {
      "type": "layout",
      "docs": {
        "description": "Enforce no spaces between braces.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/empty-brace-spaces.md"
      },
      "fixable": "whitespace",
      "name": "unicorn/empty-brace-spaces",
      "plugin": "unicorn"
    },
    "unicorn/error-message": {
      "type": "problem",
      "docs": {
        "description": "Enforce passing a `message` value when creating a built-in error.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/error-message.md"
      },
      "name": "unicorn/error-message",
      "plugin": "unicorn"
    },
    "unicorn/escape-case": {
      "type": "suggestion",
      "docs": {
        "description": "Require escape sequences to use uppercase or lowercase values.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/escape-case.md"
      },
      "fixable": "code",
      "defaultOptions": [
        "uppercase"
      ],
      "name": "unicorn/escape-case",
      "plugin": "unicorn"
    },
    "unicorn/expiring-todo-comments": {
      "type": "suggestion",
      "docs": {
        "description": "Add expiration conditions to TODO comments.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/expiring-todo-comments.md"
      },
      "defaultOptions": [
        {
          "terms": [
            "todo",
            "fixme",
            "xxx"
          ],
          "ignore": [],
          "ignoreDatesOnPullRequests": true,
          "allowWarningComments": true
        }
      ],
      "name": "unicorn/expiring-todo-comments",
      "plugin": "unicorn"
    },
    "unicorn/explicit-length-check": {
      "type": "problem",
      "docs": {
        "description": "Enforce explicitly comparing the `length` or `size` property of a value.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/explicit-length-check.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/explicit-length-check",
      "plugin": "unicorn"
    },
    "unicorn/filename-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce a case style for filenames.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/filename-case.md"
      },
      "defaultOptions": [],
      "name": "unicorn/filename-case",
      "plugin": "unicorn"
    },
    "unicorn/import-style": {
      "type": "problem",
      "docs": {
        "description": "Enforce specific import styles per module.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/import-style.md"
      },
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/import-style",
      "plugin": "unicorn"
    },
    "unicorn/new-for-builtins": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `new` for all builtins, except `String`, `Number`, `Boolean`, `Symbol` and `BigInt`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/new-for-builtins.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/new-for-builtins",
      "plugin": "unicorn"
    },
    "unicorn/no-abusive-eslint-disable": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce specifying rules to disable in `eslint-disable` comments.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-abusive-eslint-disable.md"
      },
      "name": "unicorn/no-abusive-eslint-disable",
      "plugin": "unicorn"
    },
    "unicorn/no-accessor-recursion": {
      "type": "problem",
      "docs": {
        "description": "Disallow recursive access to `this` within getters and setters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-accessor-recursion.md"
      },
      "defaultOptions": [],
      "name": "unicorn/no-accessor-recursion",
      "plugin": "unicorn"
    },
    "unicorn/no-anonymous-default-export": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow anonymous functions and classes as the default export.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-anonymous-default-export.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-anonymous-default-export",
      "plugin": "unicorn"
    },
    "unicorn/no-array-callback-reference": {
      "type": "problem",
      "docs": {
        "description": "Prevent passing a function reference directly to iterator methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-callback-reference.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-array-callback-reference",
      "plugin": "unicorn"
    },
    "unicorn/no-array-for-each": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `for…of` over the `forEach` method.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-for-each.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-array-for-each",
      "plugin": "unicorn"
    },
    "unicorn/no-array-method-this-argument": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using the `this` argument in array methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-method-this-argument.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-array-method-this-argument",
      "plugin": "unicorn"
    },
    "unicorn/no-array-reduce": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `Array#reduce()` and `Array#reduceRight()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-reduce.md"
      },
      "defaultOptions": [
        {
          "allowSimpleOperations": true
        }
      ],
      "name": "unicorn/no-array-reduce",
      "plugin": "unicorn"
    },
    "unicorn/no-array-reverse": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#toReversed()` over `Array#reverse()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-array-reverse.md"
      },
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "allowExpressionStatement": true
        }
      ],
      "name": "unicorn/no-array-reverse",
      "plugin": "unicorn"
    },
    "unicorn/no-await-expression-member": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow member access from await expression.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-await-expression-member.md"
      },
      "fixable": "code",
      "name": "unicorn/no-await-expression-member",
      "plugin": "unicorn"
    },
    "unicorn/no-await-in-promise-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `await` in `Promise` method parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-await-in-promise-methods.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-await-in-promise-methods",
      "plugin": "unicorn"
    },
    "unicorn/no-console-spaces": {
      "type": "suggestion",
      "docs": {
        "description": "Do not use leading/trailing space between `console.log` parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-console-spaces.md"
      },
      "fixable": "code",
      "name": "unicorn/no-console-spaces",
      "plugin": "unicorn"
    },
    "unicorn/no-document-cookie": {
      "type": "problem",
      "docs": {
        "description": "Do not use `document.cookie` directly.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-document-cookie.md"
      },
      "name": "unicorn/no-document-cookie",
      "plugin": "unicorn"
    },
    "unicorn/no-empty-file": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow empty files.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-empty-file.md"
      },
      "name": "unicorn/no-empty-file",
      "plugin": "unicorn"
    },
    "unicorn/no-for-loop": {
      "type": "suggestion",
      "docs": {
        "description": "Do not use a `for` loop that can be replaced with a `for-of` loop.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-for-loop.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-for-loop",
      "plugin": "unicorn"
    },
    "unicorn/no-hex-escape": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of Unicode escapes instead of hexadecimal escapes.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-hex-escape.md"
      },
      "fixable": "code",
      "name": "unicorn/no-hex-escape",
      "plugin": "unicorn"
    },
    "unicorn/no-instanceof-builtins": {
      "type": "problem",
      "docs": {
        "description": "Disallow `instanceof` with built-in objects",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-instanceof-builtins.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "useErrorIsError": false,
          "strategy": "loose",
          "include": [],
          "exclude": []
        }
      ],
      "hasSuggestions": true,
      "name": "unicorn/no-instanceof-builtins",
      "plugin": "unicorn"
    },
    "unicorn/no-invalid-fetch-options": {
      "type": "problem",
      "docs": {
        "description": "Disallow invalid options in `fetch()` and `new Request()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-invalid-fetch-options.md"
      },
      "name": "unicorn/no-invalid-fetch-options",
      "plugin": "unicorn"
    },
    "unicorn/no-invalid-remove-event-listener": {
      "type": "problem",
      "docs": {
        "description": "Prevent calling `EventTarget#removeEventListener()` with the result of an expression.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-invalid-remove-event-listener.md"
      },
      "name": "unicorn/no-invalid-remove-event-listener",
      "plugin": "unicorn"
    },
    "unicorn/no-keyword-prefix": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow identifiers starting with `new` or `class`.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-keyword-prefix.md"
      },
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/no-keyword-prefix",
      "plugin": "unicorn"
    },
    "unicorn/no-lonely-if": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `if` statements as the only statement in `if` blocks without `else`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-lonely-if.md"
      },
      "fixable": "code",
      "name": "unicorn/no-lonely-if",
      "plugin": "unicorn"
    },
    "unicorn/no-magic-array-flat-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow a magic number as the `depth` argument in `Array#flat(…).`",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-magic-array-flat-depth.md"
      },
      "name": "unicorn/no-magic-array-flat-depth",
      "plugin": "unicorn"
    },
    "unicorn/no-named-default": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow named usage of default import and export.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-named-default.md"
      },
      "fixable": "code",
      "name": "unicorn/no-named-default",
      "plugin": "unicorn"
    },
    "unicorn/no-negated-condition": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow negated conditions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-negated-condition.md"
      },
      "fixable": "code",
      "name": "unicorn/no-negated-condition",
      "plugin": "unicorn"
    },
    "unicorn/no-negation-in-equality-check": {
      "type": "problem",
      "docs": {
        "description": "Disallow negated expression in equality check.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-negation-in-equality-check.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-negation-in-equality-check",
      "plugin": "unicorn"
    },
    "unicorn/no-nested-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow nested ternary expressions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-nested-ternary.md"
      },
      "fixable": "code",
      "name": "unicorn/no-nested-ternary",
      "plugin": "unicorn"
    },
    "unicorn/no-new-array": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `new Array()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-new-array.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-new-array",
      "plugin": "unicorn"
    },
    "unicorn/no-new-buffer": {
      "type": "problem",
      "docs": {
        "description": "Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead of the deprecated `new Buffer()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-new-buffer.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-new-buffer",
      "plugin": "unicorn"
    },
    "unicorn/no-null": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow the use of the `null` literal.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-null.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkStrictEquality": false
        }
      ],
      "name": "unicorn/no-null",
      "plugin": "unicorn"
    },
    "unicorn/no-object-as-default-parameter": {
      "type": "problem",
      "docs": {
        "description": "Disallow the use of objects as default parameters.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-object-as-default-parameter.md"
      },
      "name": "unicorn/no-object-as-default-parameter",
      "plugin": "unicorn"
    },
    "unicorn/no-process-exit": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow `process.exit()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-process-exit.md"
      },
      "name": "unicorn/no-process-exit",
      "plugin": "unicorn"
    },
    "unicorn/no-single-promise-in-promise-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow passing single-element arrays to `Promise` methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-single-promise-in-promise-methods.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/no-single-promise-in-promise-methods",
      "plugin": "unicorn"
    },
    "unicorn/no-static-only-class": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow classes that only have static members.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-static-only-class.md"
      },
      "fixable": "code",
      "name": "unicorn/no-static-only-class",
      "plugin": "unicorn"
    },
    "unicorn/no-thenable": {
      "type": "problem",
      "docs": {
        "description": "Disallow `then` property.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-thenable.md"
      },
      "name": "unicorn/no-thenable",
      "plugin": "unicorn"
    },
    "unicorn/no-this-assignment": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow assigning `this` to a variable.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-this-assignment.md"
      },
      "name": "unicorn/no-this-assignment",
      "plugin": "unicorn"
    },
    "unicorn/no-typeof-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow comparing `undefined` using `typeof`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-typeof-undefined.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkGlobalVariables": false
        }
      ],
      "name": "unicorn/no-typeof-undefined",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-array-flat-depth": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `1` as the `depth` argument of `Array#flat()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-array-flat-depth.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-array-flat-depth",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-array-splice-count": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `.length` or `Infinity` as the `deleteCount` or `skipCount` argument of `Array#{splice,toSpliced}()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-array-splice-count.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-array-splice-count",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-await": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow awaiting non-promise values.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-await.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-await",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-polyfills": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of built-in methods instead of unnecessary polyfills.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-polyfills.md"
      },
      "defaultOptions": [],
      "name": "unicorn/no-unnecessary-polyfills",
      "plugin": "unicorn"
    },
    "unicorn/no-unnecessary-slice-end": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow using `.length` or `Infinity` as the `end` argument of `{Array,String,TypedArray}#slice()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unnecessary-slice-end.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unnecessary-slice-end",
      "plugin": "unicorn"
    },
    "unicorn/no-unreadable-array-destructuring": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unreadable array destructuring.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unreadable-array-destructuring.md"
      },
      "fixable": "code",
      "name": "unicorn/no-unreadable-array-destructuring",
      "plugin": "unicorn"
    },
    "unicorn/no-unreadable-iife": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unreadable IIFEs.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unreadable-iife.md"
      },
      "hasSuggestions": false,
      "name": "unicorn/no-unreadable-iife",
      "plugin": "unicorn"
    },
    "unicorn/no-unused-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unused object properties.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-unused-properties.md"
      },
      "name": "unicorn/no-unused-properties",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-error-capture-stack-trace": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary `Error.captureStackTrace(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-error-capture-stack-trace.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-error-capture-stack-trace",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-fallback-in-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless fallback when spreading in object literals.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-fallback-in-spread.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-fallback-in-spread",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-length-check": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless array length check.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-length-check.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-length-check",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-promise-resolve-reject": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow returning/yielding `Promise.resolve/reject()` in async functions or promise callbacks",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-promise-resolve-reject.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-promise-resolve-reject",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow unnecessary spread.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-spread.md"
      },
      "fixable": "code",
      "name": "unicorn/no-useless-spread",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-switch-case": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless case in switch statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-switch-case.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/no-useless-switch-case",
      "plugin": "unicorn"
    },
    "unicorn/no-useless-undefined": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow useless `undefined`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-useless-undefined.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/no-useless-undefined",
      "plugin": "unicorn"
    },
    "unicorn/no-zero-fractions": {
      "type": "suggestion",
      "docs": {
        "description": "Disallow number literals with zero fractions or dangling dots.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/no-zero-fractions.md"
      },
      "fixable": "code",
      "name": "unicorn/no-zero-fractions",
      "plugin": "unicorn"
    },
    "unicorn/number-literal-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce proper case for numeric literals.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/number-literal-case.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "hexadecimalValue": "uppercase"
        }
      ],
      "name": "unicorn/number-literal-case",
      "plugin": "unicorn"
    },
    "unicorn/numeric-separators-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the style of numeric separators by correctly grouping digits.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/numeric-separators-style.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "onlyIfContainsSeparator": false,
          "binary": {
            "minimumDigits": 0,
            "groupLength": 4
          },
          "octal": {
            "minimumDigits": 0,
            "groupLength": 4
          },
          "hexadecimal": {
            "minimumDigits": 0,
            "groupLength": 2
          },
          "number": {
            "minimumDigits": 5,
            "groupLength": 3
          }
        }
      ],
      "name": "unicorn/numeric-separators-style",
      "plugin": "unicorn"
    },
    "unicorn/prefer-add-event-listener": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.addEventListener()` and `.removeEventListener()` over `on`-functions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-add-event-listener.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-add-event-listener",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-find": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.find(…)` and `.findLast(…)` over the first or last element from `.filter(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-find.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkFromLast": true
        }
      ],
      "name": "unicorn/prefer-array-find",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-flat": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#flat()` over legacy techniques to flatten arrays.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-flat.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-array-flat",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-flat-map": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.flatMap(…)` over `.map(…).flat()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-flat-map.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-array-flat-map",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-index-of": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Array#{indexOf,lastIndexOf}()` over `Array#{findIndex,findLastIndex}()` when looking for the index of an item.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-index-of.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-array-index-of",
      "plugin": "unicorn"
    },
    "unicorn/prefer-array-some": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.some(…)` over `.filter(…).length` check and `.{find,findLast,findIndex,findLastIndex}(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-array-some.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-array-some",
      "plugin": "unicorn"
    },
    "unicorn/prefer-at": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.at()` method for index access and `String#charAt()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-at.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "getLastElementFunctions": [],
          "checkAllIndexAccess": false
        }
      ],
      "name": "unicorn/prefer-at",
      "plugin": "unicorn"
    },
    "unicorn/prefer-blob-reading-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Blob#arrayBuffer()` over `FileReader#readAsArrayBuffer(…)` and `Blob#text()` over `FileReader#readAsText(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-blob-reading-methods.md"
      },
      "name": "unicorn/prefer-blob-reading-methods",
      "plugin": "unicorn"
    },
    "unicorn/prefer-class-fields": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer class field declarations over `this` assignments in constructors.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-class-fields.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-class-fields",
      "plugin": "unicorn"
    },
    "unicorn/prefer-code-point": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#codePointAt(…)` over `String#charCodeAt(…)` and `String.fromCodePoint(…)` over `String.fromCharCode(…)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-code-point.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-code-point",
      "plugin": "unicorn"
    },
    "unicorn/prefer-date-now": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Date.now()` to get the number of milliseconds since the Unix Epoch.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-date-now.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-date-now",
      "plugin": "unicorn"
    },
    "unicorn/prefer-default-parameters": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer default parameters over reassignment.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-default-parameters.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-default-parameters",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-append": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Node#append()` over `Node#appendChild()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-append.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-dom-node-append",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-dataset": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `.dataset` on DOM elements over calling attribute methods.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-dataset.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-dom-node-dataset",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-remove": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-remove.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-dom-node-remove",
      "plugin": "unicorn"
    },
    "unicorn/prefer-dom-node-text-content": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.textContent` over `.innerText`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-dom-node-text-content.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-dom-node-text-content",
      "plugin": "unicorn"
    },
    "unicorn/prefer-event-target": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `EventTarget` over `EventEmitter`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-event-target.md"
      },
      "name": "unicorn/prefer-event-target",
      "plugin": "unicorn"
    },
    "unicorn/prefer-export-from": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `export…from` when re-exporting.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-export-from.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "ignoreUsedVariables": false
        }
      ],
      "name": "unicorn/prefer-export-from",
      "plugin": "unicorn"
    },
    "unicorn/prefer-global-this": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `globalThis` over `window`, `self`, and `global`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-global-this.md"
      },
      "fixable": "code",
      "hasSuggestions": false,
      "name": "unicorn/prefer-global-this",
      "plugin": "unicorn"
    },
    "unicorn/prefer-import-meta-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `import.meta.{dirname,filename}` over legacy techniques for getting file paths.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-import-meta-properties.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-import-meta-properties",
      "plugin": "unicorn"
    },
    "unicorn/prefer-includes": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.includes()` over `.indexOf()`, `.lastIndexOf()`, and `Array#some()` when checking for existence or non-existence.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-includes.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-includes",
      "plugin": "unicorn"
    },
    "unicorn/prefer-json-parse-buffer": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer reading a JSON file as a buffer.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-json-parse-buffer.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-json-parse-buffer",
      "plugin": "unicorn"
    },
    "unicorn/prefer-keyboard-event-key": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `KeyboardEvent#key` over `KeyboardEvent#keyCode`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-keyboard-event-key.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-keyboard-event-key",
      "plugin": "unicorn"
    },
    "unicorn/prefer-logical-operator-over-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using a logical operator over a ternary.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-logical-operator-over-ternary.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-logical-operator-over-ternary",
      "plugin": "unicorn"
    },
    "unicorn/prefer-math-min-max": {
      "type": "problem",
      "docs": {
        "description": "Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-math-min-max.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-math-min-max",
      "plugin": "unicorn"
    },
    "unicorn/prefer-math-trunc": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce the use of `Math.trunc` instead of bitwise operators.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-math-trunc.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-math-trunc",
      "plugin": "unicorn"
    },
    "unicorn/prefer-modern-dom-apis": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.before()` over `.insertBefore()`, `.replaceWith()` over `.replaceChild()`, prefer one of `.before()`, `.after()`, `.append()` or `.prepend()` over `insertAdjacentText()` and `insertAdjacentElement()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-modern-dom-apis.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-modern-dom-apis",
      "plugin": "unicorn"
    },
    "unicorn/prefer-modern-math-apis": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer modern `Math` APIs over legacy patterns.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-modern-math-apis.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-modern-math-apis",
      "plugin": "unicorn"
    },
    "unicorn/prefer-module": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer JavaScript modules (ESM) over CommonJS.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-module.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-module",
      "plugin": "unicorn"
    },
    "unicorn/prefer-native-coercion-functions": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `String`, `Number`, `BigInt`, `Boolean`, and `Symbol` directly.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-native-coercion-functions.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-native-coercion-functions",
      "plugin": "unicorn"
    },
    "unicorn/prefer-negative-index": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer negative index over `.length - index` when possible.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-negative-index.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-negative-index",
      "plugin": "unicorn"
    },
    "unicorn/prefer-node-protocol": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using the `node:` protocol when importing Node.js builtin modules.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-node-protocol.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-node-protocol",
      "plugin": "unicorn"
    },
    "unicorn/prefer-number-properties": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Number` static properties over global ones.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-number-properties.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {
          "checkInfinity": false,
          "checkNaN": true
        }
      ],
      "name": "unicorn/prefer-number-properties",
      "plugin": "unicorn"
    },
    "unicorn/prefer-object-from-entries": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `Object.fromEntries(…)` to transform a list of key-value pairs into an object.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-object-from-entries.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-object-from-entries",
      "plugin": "unicorn"
    },
    "unicorn/prefer-optional-catch-binding": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer omitting the `catch` binding parameter.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-optional-catch-binding.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-optional-catch-binding",
      "plugin": "unicorn"
    },
    "unicorn/prefer-prototype-methods": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer borrowing methods from the prototype instead of the instance.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-prototype-methods.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-prototype-methods",
      "plugin": "unicorn"
    },
    "unicorn/prefer-query-selector": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `.querySelector()` over `.getElementById()`, `.querySelectorAll()` over `.getElementsByClassName()` and `.getElementsByTagName()` and `.getElementsByName()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-query-selector.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-query-selector",
      "plugin": "unicorn"
    },
    "unicorn/prefer-reflect-apply": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Reflect.apply()` over `Function#apply()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-reflect-apply.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-reflect-apply",
      "plugin": "unicorn"
    },
    "unicorn/prefer-regexp-test": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `RegExp#test()` over `String#match()` and `RegExp#exec()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-regexp-test.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-regexp-test",
      "plugin": "unicorn"
    },
    "unicorn/prefer-set-has": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `Set#has()` over `Array#includes()` when checking for existence or non-existence.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-set-has.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-set-has",
      "plugin": "unicorn"
    },
    "unicorn/prefer-set-size": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `Set#size` instead of `Array#length`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-set-size.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-set-size",
      "plugin": "unicorn"
    },
    "unicorn/prefer-single-call": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce combining multiple `Array#push()`, `Element#classList.{add,remove}()`, and `importScripts()` into one call.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-single-call.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-single-call",
      "plugin": "unicorn"
    },
    "unicorn/prefer-spread": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer the spread operator over `Array.from(…)`, `Array#concat(…)`, `Array#{slice,toSpliced}()` and `String#split('')`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-spread.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-spread",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-raw": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using the `String.raw` tag to avoid escaping `\\`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-raw.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-raw",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-replace-all": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#replaceAll()` over regex searches with the global flag.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-replace-all.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-replace-all",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-slice": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#slice()` over `String#substr()` and `String#substring()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-slice.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-slice",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-starts-ends-with": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-starts-ends-with.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/prefer-string-starts-ends-with",
      "plugin": "unicorn"
    },
    "unicorn/prefer-string-trim-start-end": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `String#trimStart()` / `String#trimEnd()` over `String#trimLeft()` / `String#trimRight()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-string-trim-start-end.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-string-trim-start-end",
      "plugin": "unicorn"
    },
    "unicorn/prefer-structured-clone": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer using `structuredClone` to create a deep clone.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-structured-clone.md"
      },
      "hasSuggestions": true,
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prefer-structured-clone",
      "plugin": "unicorn"
    },
    "unicorn/prefer-switch": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer `switch` over multiple `else-if`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-switch.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {
          "minimumCases": 3,
          "emptyDefaultCase": "no-default-comment"
        }
      ],
      "name": "unicorn/prefer-switch",
      "plugin": "unicorn"
    },
    "unicorn/prefer-ternary": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer ternary expressions over simple `if-else` statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-ternary.md"
      },
      "fixable": "code",
      "defaultOptions": [
        "always"
      ],
      "name": "unicorn/prefer-ternary",
      "plugin": "unicorn"
    },
    "unicorn/prefer-top-level-await": {
      "type": "suggestion",
      "docs": {
        "description": "Prefer top-level await over top-level promises and async function calls.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-top-level-await.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/prefer-top-level-await",
      "plugin": "unicorn"
    },
    "unicorn/prefer-type-error": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce throwing `TypeError` in type checking conditions.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prefer-type-error.md"
      },
      "fixable": "code",
      "name": "unicorn/prefer-type-error",
      "plugin": "unicorn"
    },
    "unicorn/prevent-abbreviations": {
      "type": "suggestion",
      "docs": {
        "description": "Prevent abbreviations.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/prevent-abbreviations.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/prevent-abbreviations",
      "plugin": "unicorn"
    },
    "unicorn/relative-url-style": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent relative URL style.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/relative-url-style.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        "never"
      ],
      "name": "unicorn/relative-url-style",
      "plugin": "unicorn"
    },
    "unicorn/require-array-join-separator": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the separator argument with `Array#join()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-array-join-separator.md"
      },
      "fixable": "code",
      "name": "unicorn/require-array-join-separator",
      "plugin": "unicorn"
    },
    "unicorn/require-module-specifiers": {
      "type": "suggestion",
      "docs": {
        "description": "Require non-empty specifier list in import and export statements.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-module-specifiers.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/require-module-specifiers",
      "plugin": "unicorn"
    },
    "unicorn/require-number-to-fixed-digits-argument": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce using the digits argument with `Number#toFixed()`.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-number-to-fixed-digits-argument.md"
      },
      "fixable": "code",
      "name": "unicorn/require-number-to-fixed-digits-argument",
      "plugin": "unicorn"
    },
    "unicorn/require-post-message-target-origin": {
      "type": "problem",
      "docs": {
        "description": "Enforce using the `targetOrigin` argument with `window.postMessage()`.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/require-post-message-target-origin.md"
      },
      "hasSuggestions": true,
      "name": "unicorn/require-post-message-target-origin",
      "plugin": "unicorn"
    },
    "unicorn/string-content": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce better string content.",
        "recommended": false,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/string-content.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/string-content",
      "plugin": "unicorn"
    },
    "unicorn/switch-case-braces": {
      "type": "layout",
      "docs": {
        "description": "Enforce consistent brace style for `case` clauses.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/switch-case-braces.md"
      },
      "fixable": "code",
      "defaultOptions": [
        "always"
      ],
      "name": "unicorn/switch-case-braces",
      "plugin": "unicorn"
    },
    "unicorn/template-indent": {
      "type": "suggestion",
      "docs": {
        "description": "Fix whitespace-insensitive template indentation.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/template-indent.md"
      },
      "fixable": "code",
      "defaultOptions": [
        {}
      ],
      "name": "unicorn/template-indent",
      "plugin": "unicorn"
    },
    "unicorn/text-encoding-identifier-case": {
      "type": "suggestion",
      "docs": {
        "description": "Enforce consistent case for text encoding identifiers.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/text-encoding-identifier-case.md"
      },
      "fixable": "code",
      "hasSuggestions": true,
      "name": "unicorn/text-encoding-identifier-case",
      "plugin": "unicorn"
    },
    "unicorn/throw-new-error": {
      "type": "suggestion",
      "docs": {
        "description": "Require `new` when creating an error.",
        "recommended": true,
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/rules/throw-new-error.md"
      },
      "fixable": "code",
      "name": "unicorn/throw-new-error",
      "plugin": "unicorn"
    },
    "unicorn/no-instanceof-array": {
      "docs": {
        "description": "Replaced by `unicorn/no-instanceof-builtins` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-instanceof-array"
      },
      "deprecated": {
        "message": "Replaced by `unicorn/no-instanceof-builtins` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-instanceof-array",
        "replacedBy": [
          "unicorn/no-instanceof-builtins"
        ]
      },
      "name": "unicorn/no-instanceof-array",
      "plugin": "unicorn"
    },
    "unicorn/no-length-as-slice-end": {
      "docs": {
        "description": "Replaced by `unicorn/no-unnecessary-slice-end` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-length-as-slice-end"
      },
      "deprecated": {
        "message": "Replaced by `unicorn/no-unnecessary-slice-end` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-length-as-slice-end",
        "replacedBy": [
          "unicorn/no-unnecessary-slice-end"
        ]
      },
      "name": "unicorn/no-length-as-slice-end",
      "plugin": "unicorn"
    },
    "unicorn/no-array-push-push": {
      "docs": {
        "description": "Replaced by `unicorn/prefer-single-call` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-array-push-push"
      },
      "deprecated": {
        "message": "Replaced by `unicorn/prefer-single-call` which covers more cases.",
        "url": "https://github.com/sindresorhus/eslint-plugin-unicorn/blob/v60.0.0/docs/deprecated-rules.md#no-array-push-push",
        "replacedBy": [
          "unicorn/prefer-single-call"
        ]
      },
      "name": "unicorn/no-array-push-push",
      "plugin": "unicorn"
    },
    "wc/attach-shadow-constructor": {
      "docs": {
        "description": "Disallows attaching a shadow root outside the constructor",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/attach-shadow-constructor.md"
      },
      "name": "wc/attach-shadow-constructor",
      "plugin": "wc"
    },
    "wc/define-tag-after-class-definition": {
      "docs": {
        "description": "Enforces that the `define(...)` call happens after the associated class has been defined",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/define-tag-after-class-definition.md"
      },
      "name": "wc/define-tag-after-class-definition",
      "plugin": "wc"
    },
    "wc/expose-class-on-global": {
      "docs": {
        "description": "Enforces that custom element classes are exposed on the global object (i.e. window)",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/expose-class-on-global.md"
      },
      "name": "wc/expose-class-on-global",
      "plugin": "wc"
    },
    "wc/file-name-matches-element": {
      "docs": {
        "description": "Enforces that the filename of a file containing an elementmatches that of its class name",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/file-name-matches-element.md"
      },
      "name": "wc/file-name-matches-element",
      "plugin": "wc"
    },
    "wc/guard-define-call": {
      "docs": {
        "description": "Require `define(...)` calls to include an `if` statement",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/guard-define-call.md"
      },
      "name": "wc/guard-define-call",
      "plugin": "wc"
    },
    "wc/guard-super-call": {
      "docs": {
        "description": "Requires a guard before calling a super lifecycle hook",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/guard-super-call.md"
      },
      "name": "wc/guard-super-call",
      "plugin": "wc"
    },
    "wc/max-elements-per-file": {
      "docs": {
        "description": "Enforces a maximum number of elements per file",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/max-elements-per-file.md"
      },
      "name": "wc/max-elements-per-file",
      "plugin": "wc"
    },
    "wc/no-child-traversal-in-attributechangedcallback": {
      "docs": {
        "description": "Disallows traversal of children in the `AttributeChangedCallback` method",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-child-traversal-in-attributechangedcallback.md"
      },
      "name": "wc/no-child-traversal-in-attributechangedcallback",
      "plugin": "wc"
    },
    "wc/no-child-traversal-in-connectedcallback": {
      "docs": {
        "description": "Disallows traversal of children in the `connectedCallback` method",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-child-traversal-in-connectedcallback.md"
      },
      "name": "wc/no-child-traversal-in-connectedcallback",
      "plugin": "wc"
    },
    "wc/no-closed-shadow-root": {
      "docs": {
        "description": "Disallows closed shadow roots",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-closed-shadow-root.md"
      },
      "name": "wc/no-closed-shadow-root",
      "plugin": "wc"
    },
    "wc/no-constructor": {
      "docs": {
        "description": "Disallows constructors in custom element classes",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-constructor.md"
      },
      "name": "wc/no-constructor",
      "plugin": "wc"
    },
    "wc/no-constructor-attributes": {
      "docs": {
        "description": "Disallows interaction with attributes in constructors",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-constructor-attributes.md"
      },
      "name": "wc/no-constructor-attributes",
      "plugin": "wc"
    },
    "wc/no-constructor-params": {
      "docs": {
        "description": "Disallows constructor parameters in custom elements",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-constructor-params.md"
      },
      "name": "wc/no-constructor-params",
      "plugin": "wc"
    },
    "wc/no-customized-built-in-elements": {
      "docs": {
        "description": "Disallows extending of built-in elements",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-customized-built-in-elements.md"
      },
      "name": "wc/no-customized-built-in-elements",
      "plugin": "wc"
    },
    "wc/no-exports-with-element": {
      "docs": {
        "description": "Disallows exports alongside custom element exports",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-exports-with-element.md"
      },
      "name": "wc/no-exports-with-element",
      "plugin": "wc"
    },
    "wc/no-invalid-element-name": {
      "docs": {
        "description": "Disallows invalid custom element names",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-invalid-element-name.md"
      },
      "name": "wc/no-invalid-element-name",
      "plugin": "wc"
    },
    "wc/no-invalid-extends": {
      "docs": {
        "description": "Disallows invalid class inheritance for custom elements",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-invalid-extends.md"
      },
      "name": "wc/no-invalid-extends",
      "plugin": "wc"
    },
    "wc/no-method-prefixed-with-on": {
      "docs": {
        "description": "Disallows methods prefixed with `on`",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-method-prefixed-with-on.md"
      },
      "name": "wc/no-method-prefixed-with-on",
      "plugin": "wc"
    },
    "wc/no-self-class": {
      "docs": {
        "description": "Disallows class mutations on self",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-self-class.md"
      },
      "name": "wc/no-self-class",
      "plugin": "wc"
    },
    "wc/no-typos": {
      "docs": {
        "description": "Detects misspellings of common features",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/no-typos.md"
      },
      "name": "wc/no-typos",
      "plugin": "wc"
    },
    "wc/require-listener-teardown": {
      "docs": {
        "description": "Requires that listeners be cleaned up on DOM disconnect.",
        "category": "Best Practices",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/require-listener-teardown.md"
      },
      "name": "wc/require-listener-teardown",
      "plugin": "wc"
    },
    "wc/tag-name-matches-class": {
      "docs": {
        "description": "Enforces that the tag name of a custom element matches its class name",
        "url": "https://github.com/43081j/eslint-plugin-wc/blob/master/docs/rules/tag-name-matches-class.md"
      },
      "name": "wc/tag-name-matches-class",
      "plugin": "wc"
    },
    "yml/block-mapping-colon-indicator-newline": {
      "docs": {
        "description": "enforce consistent line breaks after `:` indicator",
        "categories": [],
        "extensionRule": false,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-mapping-colon-indicator-newline.html",
        "ruleId": "yml/block-mapping-colon-indicator-newline",
        "ruleName": "block-mapping-colon-indicator-newline"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/block-mapping-colon-indicator-newline",
      "plugin": "yml"
    },
    "yml/block-mapping-question-indicator-newline": {
      "docs": {
        "description": "enforce consistent line breaks after `?` indicator",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-mapping-question-indicator-newline.html",
        "ruleId": "yml/block-mapping-question-indicator-newline",
        "ruleName": "block-mapping-question-indicator-newline"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/block-mapping-question-indicator-newline",
      "plugin": "yml"
    },
    "yml/block-mapping": {
      "docs": {
        "description": "require or disallow block style mappings.",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-mapping.html",
        "ruleId": "yml/block-mapping",
        "ruleName": "block-mapping"
      },
      "fixable": "code",
      "type": "layout",
      "name": "yml/block-mapping",
      "plugin": "yml"
    },
    "yml/block-sequence-hyphen-indicator-newline": {
      "docs": {
        "description": "enforce consistent line breaks after `-` indicator",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-sequence-hyphen-indicator-newline.html",
        "ruleId": "yml/block-sequence-hyphen-indicator-newline",
        "ruleName": "block-sequence-hyphen-indicator-newline"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/block-sequence-hyphen-indicator-newline",
      "plugin": "yml"
    },
    "yml/block-sequence": {
      "docs": {
        "description": "require or disallow block style sequences.",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/block-sequence.html",
        "ruleId": "yml/block-sequence",
        "ruleName": "block-sequence"
      },
      "fixable": "code",
      "type": "layout",
      "name": "yml/block-sequence",
      "plugin": "yml"
    },
    "yml/file-extension": {
      "docs": {
        "description": "enforce YAML file extension",
        "categories": [],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/file-extension.html",
        "ruleId": "yml/file-extension",
        "ruleName": "file-extension"
      },
      "type": "suggestion",
      "name": "yml/file-extension",
      "plugin": "yml"
    },
    "yml/flow-mapping-curly-newline": {
      "docs": {
        "description": "enforce consistent line breaks inside braces",
        "categories": [
          "standard"
        ],
        "extensionRule": "object-curly-newline",
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/flow-mapping-curly-newline.html",
        "ruleId": "yml/flow-mapping-curly-newline",
        "ruleName": "flow-mapping-curly-newline"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/flow-mapping-curly-newline",
      "plugin": "yml"
    },
    "yml/flow-mapping-curly-spacing": {
      "docs": {
        "description": "enforce consistent spacing inside braces",
        "categories": [
          "standard"
        ],
        "extensionRule": "object-curly-spacing",
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/flow-mapping-curly-spacing.html",
        "ruleId": "yml/flow-mapping-curly-spacing",
        "ruleName": "flow-mapping-curly-spacing"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "yml/flow-mapping-curly-spacing",
      "plugin": "yml"
    },
    "yml/flow-sequence-bracket-newline": {
      "docs": {
        "description": "enforce linebreaks after opening and before closing flow sequence brackets",
        "categories": [
          "standard"
        ],
        "extensionRule": "array-bracket-newline",
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/flow-sequence-bracket-newline.html",
        "ruleId": "yml/flow-sequence-bracket-newline",
        "ruleName": "flow-sequence-bracket-newline"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/flow-sequence-bracket-newline",
      "plugin": "yml"
    },
    "yml/flow-sequence-bracket-spacing": {
      "docs": {
        "description": "enforce consistent spacing inside flow sequence brackets",
        "categories": [
          "standard"
        ],
        "extensionRule": "array-bracket-spacing",
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/flow-sequence-bracket-spacing.html",
        "ruleId": "yml/flow-sequence-bracket-spacing",
        "ruleName": "flow-sequence-bracket-spacing"
      },
      "type": "layout",
      "fixable": "whitespace",
      "name": "yml/flow-sequence-bracket-spacing",
      "plugin": "yml"
    },
    "yml/indent": {
      "docs": {
        "description": "enforce consistent indentation",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/indent.html",
        "ruleId": "yml/indent",
        "ruleName": "indent"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/indent",
      "plugin": "yml"
    },
    "yml/key-name-casing": {
      "docs": {
        "description": "enforce naming convention to key names",
        "categories": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/key-name-casing.html",
        "ruleId": "yml/key-name-casing",
        "ruleName": "key-name-casing"
      },
      "type": "suggestion",
      "name": "yml/key-name-casing",
      "plugin": "yml"
    },
    "yml/key-spacing": {
      "docs": {
        "description": "enforce consistent spacing between keys and values in mapping pairs",
        "categories": [
          "standard"
        ],
        "extensionRule": "key-spacing",
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/key-spacing.html",
        "ruleId": "yml/key-spacing",
        "ruleName": "key-spacing"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/key-spacing",
      "plugin": "yml"
    },
    "yml/no-empty-document": {
      "docs": {
        "description": "disallow empty document",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-document.html",
        "ruleId": "yml/no-empty-document",
        "ruleName": "no-empty-document"
      },
      "type": "suggestion",
      "name": "yml/no-empty-document",
      "plugin": "yml"
    },
    "yml/no-empty-key": {
      "docs": {
        "description": "disallow empty mapping keys",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-key.html",
        "ruleId": "yml/no-empty-key",
        "ruleName": "no-empty-key"
      },
      "type": "suggestion",
      "name": "yml/no-empty-key",
      "plugin": "yml"
    },
    "yml/no-empty-mapping-value": {
      "docs": {
        "description": "disallow empty mapping values",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-mapping-value.html",
        "ruleId": "yml/no-empty-mapping-value",
        "ruleName": "no-empty-mapping-value"
      },
      "type": "suggestion",
      "name": "yml/no-empty-mapping-value",
      "plugin": "yml"
    },
    "yml/no-empty-sequence-entry": {
      "docs": {
        "description": "disallow empty sequence entries",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-empty-sequence-entry.html",
        "ruleId": "yml/no-empty-sequence-entry",
        "ruleName": "no-empty-sequence-entry"
      },
      "type": "suggestion",
      "name": "yml/no-empty-sequence-entry",
      "plugin": "yml"
    },
    "yml/no-irregular-whitespace": {
      "docs": {
        "description": "disallow irregular whitespace",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": "no-irregular-whitespace",
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-irregular-whitespace.html",
        "ruleId": "yml/no-irregular-whitespace",
        "ruleName": "no-irregular-whitespace"
      },
      "type": "problem",
      "name": "yml/no-irregular-whitespace",
      "plugin": "yml"
    },
    "yml/no-multiple-empty-lines": {
      "docs": {
        "description": "disallow multiple empty lines",
        "categories": null,
        "extensionRule": "no-multiple-empty-lines",
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-multiple-empty-lines.html",
        "ruleId": "yml/no-multiple-empty-lines",
        "ruleName": "no-multiple-empty-lines"
      },
      "fixable": "whitespace",
      "type": "layout",
      "name": "yml/no-multiple-empty-lines",
      "plugin": "yml"
    },
    "yml/no-tab-indent": {
      "docs": {
        "description": "disallow tabs for indentation.",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-tab-indent.html",
        "ruleId": "yml/no-tab-indent",
        "ruleName": "no-tab-indent"
      },
      "type": "problem",
      "name": "yml/no-tab-indent",
      "plugin": "yml"
    },
    "yml/no-trailing-zeros": {
      "docs": {
        "description": "disallow trailing zeros for floats",
        "categories": null,
        "extensionRule": false,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/no-trailing-zeros.html",
        "ruleId": "yml/no-trailing-zeros",
        "ruleName": "no-trailing-zeros"
      },
      "fixable": "code",
      "type": "layout",
      "name": "yml/no-trailing-zeros",
      "plugin": "yml"
    },
    "yml/plain-scalar": {
      "docs": {
        "description": "require or disallow plain style scalar.",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/plain-scalar.html",
        "ruleId": "yml/plain-scalar",
        "ruleName": "plain-scalar"
      },
      "fixable": "code",
      "type": "layout",
      "name": "yml/plain-scalar",
      "plugin": "yml"
    },
    "yml/quotes": {
      "docs": {
        "description": "enforce the consistent use of either double, or single quotes",
        "categories": [
          "standard"
        ],
        "extensionRule": false,
        "layout": true,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/quotes.html",
        "ruleId": "yml/quotes",
        "ruleName": "quotes"
      },
      "fixable": "code",
      "type": "layout",
      "name": "yml/quotes",
      "plugin": "yml"
    },
    "yml/require-string-key": {
      "docs": {
        "description": "disallow mapping keys other than strings",
        "categories": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/require-string-key.html",
        "ruleId": "yml/require-string-key",
        "ruleName": "require-string-key"
      },
      "type": "suggestion",
      "name": "yml/require-string-key",
      "plugin": "yml"
    },
    "yml/sort-keys": {
      "docs": {
        "description": "require mapping keys to be sorted",
        "categories": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/sort-keys.html",
        "ruleId": "yml/sort-keys",
        "ruleName": "sort-keys"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "yml/sort-keys",
      "plugin": "yml"
    },
    "yml/sort-sequence-values": {
      "docs": {
        "description": "require sequence values to be sorted",
        "categories": null,
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/sort-sequence-values.html",
        "ruleId": "yml/sort-sequence-values",
        "ruleName": "sort-sequence-values"
      },
      "fixable": "code",
      "type": "suggestion",
      "name": "yml/sort-sequence-values",
      "plugin": "yml"
    },
    "yml/spaced-comment": {
      "docs": {
        "description": "enforce consistent spacing after the `#` in a comment",
        "categories": [
          "standard"
        ],
        "extensionRule": "spaced-comment",
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/spaced-comment.html",
        "ruleId": "yml/spaced-comment",
        "ruleName": "spaced-comment"
      },
      "fixable": "whitespace",
      "type": "suggestion",
      "name": "yml/spaced-comment",
      "plugin": "yml"
    },
    "yml/vue-custom-block/no-parsing-error": {
      "docs": {
        "description": "disallow parsing errors in Vue custom blocks",
        "categories": [
          "recommended",
          "standard"
        ],
        "extensionRule": false,
        "layout": false,
        "url": "https://ota-meshi.github.io/eslint-plugin-yml/rules/vue-custom-block/no-parsing-error.html",
        "ruleId": "yml/vue-custom-block/no-parsing-error",
        "ruleName": "vue-custom-block/no-parsing-error"
      },
      "type": "problem",
      "name": "yml/vue-custom-block/no-parsing-error",
      "plugin": "yml"
    }
  },
  "files": [
    {
      "filepath": ".github/workflows/audit.yml",
      "globs": [
        "**/*.yml"
      ],
      "configs": [
        12,
        43,
        79
      ]
    },
    {
      "filepath": ".github/workflows/publish.yml",
      "globs": [
        "**/*.yml"
      ],
      "configs": [
        12,
        43,
        79
      ]
    },
    {
      "filepath": ".github/workflows/release.yml",
      "globs": [
        "**/*.yml"
      ],
      "configs": [
        12,
        43,
        79
      ]
    },
    {
      "filepath": "CHANGELOG.md",
      "globs": [
        "**/*.md"
      ],
      "configs": [
        9,
        28
      ]
    },
    {
      "filepath": "CONTRIBUTING.md",
      "globs": [
        "**/*.md"
      ],
      "configs": [
        9,
        28
      ]
    },
    {
      "filepath": "README.md",
      "globs": [
        "**/*.md"
      ],
      "configs": [
        9,
        28
      ]
    },
    {
      "filepath": "eslint.config.js",
      "globs": [
        "**/*.js",
        "**/eslint.config.js"
      ],
      "configs": [
        2,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        23,
        24,
        25,
        27,
        29,
        30,
        31,
        34,
        35,
        36,
        37,
        38,
        40,
        41,
        42,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        55,
        56,
        61,
        62,
        63,
        64,
        67,
        68,
        69,
        70,
        71,
        73,
        74,
        75,
        77,
        78,
        83
      ]
    },
    {
      "filepath": "fragments/max-len.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        23,
        24,
        25,
        27,
        29,
        30,
        31,
        34,
        35,
        36,
        37,
        38,
        40,
        41,
        42,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        55,
        56,
        57,
        61,
        62,
        63,
        64,
        67,
        68,
        69,
        70,
        71,
        73,
        74,
        77,
        78
      ]
    },
    {
      "filepath": "index.d.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        23,
        24,
        25,
        27,
        29,
        30,
        31,
        34,
        35,
        36,
        37,
        38,
        40,
        41,
        42,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        55,
        56,
        57,
        61,
        62,
        63,
        64,
        67,
        68,
        69,
        70,
        71,
        73,
        74,
        77,
        78
      ]
    },
    {
      "filepath": "main.ts",
      "globs": [
        "**/*.ts"
      ],
      "configs": [
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        23,
        24,
        25,
        27,
        29,
        30,
        31,
        34,
        35,
        36,
        37,
        38,
        40,
        41,
        42,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        54,
        55,
        56,
        57,
        61,
        62,
        63,
        64,
        67,
        68,
        69,
        70,
        71,
        73,
        74,
        77,
        78
      ]
    },
    {
      "filepath": "mise.toml",
      "globs": [
        "**/*.toml"
      ],
      "configs": [
        10,
        39,
        72
      ]
    },
    {
      "filepath": "package.json",
      "globs": [
        "**/*.json",
        "**/package.json"
      ],
      "configs": [
        8,
        26,
        32,
        33,
        58,
        65,
        66,
        84
      ]
    },
    {
      "filepath": "tsconfig.build.json",
      "globs": [
        "**/*.json",
        "**/tsconfig.*.json"
      ],
      "configs": [
        8,
        26,
        58,
        85
      ]
    },
    {
      "filepath": "tsconfig.json",
      "globs": [
        "**/*.json",
        "**/tsconfig.json"
      ],
      "configs": [
        8,
        26,
        58,
        85
      ]
    }
  ],
  "meta": {
    "lastUpdate": 1755433972704,
    "basePath": "",
    "configPath": ""
  }
}